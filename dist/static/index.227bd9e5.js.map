{"mappings":"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","sources":["node_modules/spred/dist/index.mjs","node_modules/spred-dom/dist/index.mjs","src/client/model/routing.ts","node_modules/@swc/helpers/src/_define_property.mjs","src/common/action.ts","src/common/client-type.ts","src/common/game-stage.ts","node_modules/socket.io-client/node_modules/engine.io-parser/build/esm/commons.js","node_modules/socket.io-client/node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","node_modules/socket.io-client/node_modules/engine.io-parser/build/esm/encodePacket.browser.js","node_modules/socket.io-client/node_modules/engine.io-parser/build/esm/decodePacket.browser.js","node_modules/socket.io-client/node_modules/engine.io-parser/build/esm/index.js","node_modules/socket.io-client/node_modules/@socket.io/component-emitter/index.mjs","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/globalThis.browser.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/util.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/transport.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/contrib/yeast.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/contrib/parseqs.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/contrib/has-cors.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/transports/polling.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/transports/websocket.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/transports/index.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/contrib/parseuri.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/socket.js","node_modules/socket.io-client/build/esm/url.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/index.js","node_modules/socket.io-client/node_modules/socket.io-parser/build/esm/is-binary.js","node_modules/socket.io-client/node_modules/socket.io-parser/build/esm/binary.js","node_modules/socket.io-client/node_modules/socket.io-parser/build/esm/index.js","node_modules/socket.io-client/build/esm/on.js","node_modules/socket.io-client/build/esm/socket.js","node_modules/socket.io-client/build/esm/contrib/backo2.js","node_modules/socket.io-client/build/esm/manager.js","node_modules/socket.io-client/build/esm/index.js","src/client/model/game-controller.ts","src/client/model/host-controller.ts","src/vendor/qrcode.ts","src/client/view/components/qr-code/qr-code.ts","src/client/view/components/qr-code/qr-code.module.scss","src/client/view/components/players-list/players-list.ts","src/client/view/components/button/button.ts","src/client/view/components/host-lobby/host-lobby.ts","src/client/view/components/host-lobby/host-lobby.module.scss","src/client/view/components/loading-screen/loading-screen.ts","src/client/view/components/loading-screen/loading-screen.module.scss","src/client/view/components/stage-status/stage-status.ts","src/client/view/components/stage-status/stage-status.module.scss","src/client/view/components/host-question/host-question.ts","src/client/view/components/host-question/host-question.module.scss","src/client/view/components/host-vote/host-vote.ts","src/client/view/components/host-vote/host-vote.module.scss","src/common/player-status.ts","src/client/view/components/results-table/results-table.ts","src/client/view/components/results-table/results-table.module.scss","src/client/view/components/host-results/host-results.ts","src/client/view/components/host-results/host-results.module.scss","src/client/view/components/host-view/host-view.ts","src/client/view/components/host-view/host-view.module.scss","src/client/view/components/logo/logo.ts","src/client/view/components/logo/logo.module.scss","node_modules/nanoid/index.browser.js","src/client/view/components/start-link/start-link.ts","src/client/view/components/main-view/main-view.ts","src/client/view/components/main-view/main-view.module.scss","src/client/model/player-controller.ts","src/client/lib/with-local-storage.ts","src/client/view/components/input/input.ts","src/client/view/components/input/input.module.scss","src/client/view/components/player-login/player-login.ts","src/client/view/components/player-login/player-login.module.scss","src/common/constants.ts","src/client/view/components/player-question/player-question.ts","src/client/view/components/player-question/player-question.module.scss","src/client/view/components/player-vote/player-vote.ts","src/client/view/components/player-vote/player-vote.module.scss","src/client/view/components/player-results/player-results.ts","src/client/view/components/player-results/player-results.module.scss","src/client/view/components/player-view/player-view.ts","src/client/view/components/player-view/player-view.module.scss","src/client/view/app.ts","src/client/index.ts"],"sourcesContent":["const NOOP_FN = () => { };\n\nconst DEFAULT_CONFIG = {\n    logException: /* istanbul ignore next */ (e) => console.error(e),\n    _log: NOOP_FN,\n};\nconst config = Object.assign({}, DEFAULT_CONFIG);\nfunction configure(configUpdate) {\n    Object.assign(config, configUpdate || DEFAULT_CONFIG);\n    if (!config.logger)\n        config._log = NOOP_FN;\n    else\n        config._log = config.logger;\n}\n\nconst ERROR_NAME = '[SPRED ERROR]';\nclass CircularDependencyError extends Error {\n    constructor() {\n        super();\n        this.name = ERROR_NAME;\n        this.message = 'Circular dependency detected';\n    }\n}\nclass StateTypeError extends Error {\n    constructor() {\n        super();\n        this.name = ERROR_NAME;\n        this.message =\n            'State data must be a plain object or an array or a primitive';\n    }\n}\n\nlet tracking = null;\nlet scope = null;\nlet node = null;\nlet batchLevel = 0;\nlet status = 0;\nconst ACTIVATING = 1;\nconst SCHEDULED = 2;\nlet queue = [];\nlet notifications = [];\nlet version = {};\nfunction isolate(fn, args) {\n    const prevTracking = tracking;\n    const prevScope = scope;\n    const prevStatus = status;\n    let result;\n    if (tracking)\n        scope = tracking;\n    status = 0;\n    tracking = null;\n    if (args)\n        result = fn(...args);\n    else\n        result = fn();\n    tracking = prevTracking;\n    scope = prevScope;\n    status = prevStatus;\n    return result;\n}\nfunction collect(fn) {\n    const prevTracking = tracking;\n    const prevScope = scope;\n    const prevStatus = status;\n    const fakeState = {};\n    status = 0;\n    scope = fakeState;\n    tracking = null;\n    fn();\n    tracking = prevTracking;\n    scope = prevScope;\n    status = prevStatus;\n    return () => cleanupChildren(fakeState);\n}\n/**\n * Commits all writable signal updates inside the passed function as a single transaction.\n * @param fn The function with updates.\n */\nfunction batch(fn) {\n    const wrapper = config._notificationWrapper;\n    batchLevel++;\n    fn();\n    batchLevel--;\n    if (wrapper)\n        wrapper(recalc);\n    else\n        recalc();\n}\nfunction update$1(state, value) {\n    const wrapper = config._notificationWrapper;\n    if (arguments.length > 1) {\n        if (typeof value === 'function')\n            state.nextValue = value(state.nextValue);\n        else\n            state.nextValue = value;\n    }\n    else {\n        state.forced = true;\n    }\n    state.i = queue.push(state) - 1;\n    if (wrapper)\n        wrapper(recalc);\n    else\n        recalc();\n    return state.nextValue;\n}\nfunction subscribe(subscriber, exec = true) {\n    const state = this._state;\n    const prevStatus = status;\n    if (!state.freezed && !state.ft)\n        status = ACTIVATING;\n    const value = getStateValue(state, true);\n    status = prevStatus;\n    if (state.freezed) {\n        if (exec)\n            isolate(() => subscriber(value, true));\n        return NOOP_FN;\n    }\n    let node = createSubscriberNode(state, subscriber);\n    ++state.subs;\n    if (exec) {\n        isolate(() => subscriber(value, true));\n    }\n    const dispose = () => {\n        if (!node)\n            return;\n        removeNode(node);\n        --state.subs;\n        node = null;\n    };\n    const parent = tracking || scope;\n    if (parent) {\n        if (!parent.children)\n            parent.children = [dispose];\n        else\n            parent.children.push(dispose);\n    }\n    return dispose;\n}\nfunction emitActivateLifecycle(state) {\n    logHook(state, 'ACTIVATE');\n    if (state.onActivate) {\n        state.onActivate(state.value);\n    }\n}\nfunction emitUpdateLifecycle(state, value) {\n    logHook(state, 'UPDATE', value);\n    if (state.onUpdate) {\n        state.onUpdate(value, state.value);\n    }\n}\nfunction getFiltered(value, state) {\n    const filter = state.filter;\n    const prevValue = state.value;\n    if (filter)\n        return typeof filter === 'function' ? filter(value, prevValue) : true;\n    return !Object.is(value, prevValue);\n}\n/**\n * Immediately calculates the updated values of the signals and notifies their subscribers.\n */\nfunction recalc() {\n    if (!queue.length || batchLevel)\n        return;\n    const q = queue;\n    const firstIndex = queue.length;\n    const prevStatus = status;\n    queue = [];\n    version = {};\n    status = SCHEDULED;\n    ++batchLevel;\n    for (let i = 0; i < q.length; i++) {\n        const state = q[i];\n        if (state.i !== i)\n            continue;\n        let filtered = true;\n        let isWritable = !state.compute;\n        if (isWritable) {\n            filtered = getFiltered(state.nextValue, state) || state.forced;\n            state.forced = false;\n            if (filtered) {\n                emitUpdateLifecycle(state, state.nextValue);\n                state.value = state.nextValue;\n            }\n        }\n        if (filtered) {\n            for (let node = state.ft; node !== null; node = node.nt) {\n                if (typeof node.t === 'object') {\n                    ++node.t.dirty;\n                    node.t.i = q.push(node.t) - 1;\n                }\n                else if (isWritable) {\n                    notifications.push(node.t);\n                    notifications.push(state.value);\n                }\n            }\n        }\n    }\n    for (let i = firstIndex; i < q.length; i++) {\n        const state = q[i];\n        if (state.i !== i || state.version === version || !state.ft)\n            continue;\n        let value = state.value;\n        let filtered = false;\n        if (state.dirty) {\n            value = calcComputed(state);\n            filtered = getFiltered(value, state) || state.hasException;\n        }\n        if (filtered) {\n            if (!state.hasException) {\n                emitUpdateLifecycle(state, value);\n                state.value = value;\n                let subsCount = state.subs;\n                for (let node = state.ft; subsCount && node !== null; node = node.nt) {\n                    if (typeof node.t === 'function') {\n                        notifications.push(node.t);\n                        notifications.push(state.value);\n                        --subsCount;\n                    }\n                }\n            }\n        }\n        else {\n            for (let node = state.ft; node !== null; node = node.nt) {\n                if (typeof node.t === 'object')\n                    --node.t.dirty;\n            }\n        }\n        state.version = version;\n        state.dirty = 0;\n    }\n    status = prevStatus;\n    for (let i = 0; i < notifications.length; i += 2) {\n        notifications[i](notifications[i + 1]);\n    }\n    notifications = [];\n    --batchLevel;\n    recalc();\n}\nfunction getStateValue(state, notTrackDeps) {\n    if (state.compute) {\n        if (state.freezed)\n            return state.value;\n        if (state.tracking) {\n            throw new CircularDependencyError();\n        }\n        let shouldCompute = !state.ft && (status || state.version !== version);\n        if (shouldCompute) {\n            const value = calcComputed(state, notTrackDeps);\n            if (getFiltered(value, state))\n                state.value = value;\n        }\n        state.version = version;\n    }\n    if (tracking && !notTrackDeps) {\n        if (state.hasException && !tracking.hasException) {\n            tracking.exception = state.exception;\n            tracking.hasException = true;\n        }\n        if (status) {\n            if (node) {\n                if (node.s !== state) {\n                    if (node.s.ft === node)\n                        node.s.ft = node.nt;\n                    if (node.s.lt === node)\n                        node.s.lt = node.pt;\n                    if (node.pt)\n                        node.pt.nt = node.nt;\n                    if (node.nt)\n                        node.nt.pt = node.pt;\n                    node.nt = null;\n                    node.pt = state.lt;\n                    node.s = state;\n                    if (state.lt) {\n                        state.lt.nt = node;\n                    }\n                    else {\n                        state.ft = node;\n                    }\n                    state.lt = node;\n                }\n                node = node.ns;\n            }\n            else {\n                createNode(state, tracking);\n            }\n        }\n    }\n    return state.value;\n}\nfunction calcComputed(state, logException) {\n    const prevTracking = tracking;\n    const prevNode = node;\n    let value = state.value;\n    if (state.children)\n        cleanupChildren(state);\n    tracking = state;\n    node = state.fs;\n    state.tracking = true;\n    state.hasException = false;\n    try {\n        value = state.compute(state.value, status === SCHEDULED);\n    }\n    catch (e) {\n        state.exception = e;\n        state.hasException = true;\n    }\n    if (state.hasException) {\n        if (state.catch) {\n            try {\n                value = state.catch(state.exception, state.value);\n                state.hasException = false;\n                state.exception = undefined;\n            }\n            catch (e) {\n                state.exception = e;\n            }\n        }\n        if (state.hasException) {\n            logHook(state, 'EXCEPTION');\n            if (state.onException) {\n                state.onException(state.exception);\n            }\n            if (logException || state.subs || (!state.ft && !tracking)) {\n                config.logException(state.exception);\n            }\n        }\n    }\n    if (status) {\n        while (node) {\n            removeNode(node);\n            node = node.nt;\n        }\n        if (!state.fs)\n            state.freezed = true;\n    }\n    state.tracking = false;\n    tracking = prevTracking;\n    node = prevNode;\n    return value;\n}\nfunction cleanupChildren(state) {\n    if (state.children && state.children.length) {\n        for (let child of state.children) {\n            if (typeof child === 'function')\n                child();\n            else\n                cleanupChildren(child);\n        }\n        state.children = [];\n    }\n}\nfunction logHook(state, hook, value) {\n    if (!state.name)\n        return;\n    let payload = state.value;\n    if (hook === 'EXCEPTION')\n        payload = state.exception;\n    else if (hook === 'UPDATE')\n        payload = {\n            prevValue: state.value,\n            value,\n        };\n    config._log(state.name, hook, payload);\n}\nfunction createSubscriberNode(source, target) {\n    const node = {\n        s: source,\n        t: target,\n        pt: source.lt,\n        nt: null,\n    };\n    if (source.lt) {\n        source.lt.nt = node;\n    }\n    else {\n        source.ft = node;\n        emitActivateLifecycle(node.s);\n    }\n    source.lt = node;\n    return node;\n}\nfunction createNode(source, target) {\n    const node = {\n        s: source,\n        t: target,\n        ps: target.ls,\n        ns: null,\n        pt: null,\n        nt: null,\n        stale: false,\n        cached: 0,\n    };\n    if (target.ls) {\n        target.ls.ns = node;\n    }\n    else {\n        target.fs = node;\n    }\n    target.ls = node;\n    node.pt = source.lt;\n    if (source.lt) {\n        source.lt.nt = node;\n    }\n    else {\n        source.ft = node;\n        emitActivateLifecycle(node.s);\n    }\n    source.lt = node;\n    return node;\n}\nfunction removeNode(node) {\n    if (node.t.fs === node)\n        node.t.fs = node.ns;\n    if (node.t.ls === node)\n        node.t.ls = node.ps;\n    if (node.ps)\n        node.ps.ns = node.ns;\n    if (node.ns)\n        node.ns.ps = node.ps;\n    if (node.s.ft === node)\n        node.s.ft = node.nt;\n    if (node.s.lt === node)\n        node.s.lt = node.pt;\n    if (node.pt)\n        node.pt.nt = node.nt;\n    if (node.nt)\n        node.nt.pt = node.pt;\n    if (!node.s.ft) {\n        const state = node.s;\n        logHook(state, 'DEACTIVATE');\n        if (state.onDeactivate) {\n            state.onDeactivate(state.value);\n        }\n        for (let node = state.fs; node !== null; node = node.ns) {\n            removeNode(node);\n        }\n    }\n}\n\nconst signalProto = {\n    get() {\n        return getStateValue(this._state);\n    },\n    subscribe,\n    sample() {\n        return getStateValue(this._state, true);\n    },\n};\n\nfunction createSignalState(value, compute) {\n    const parent = tracking || scope;\n    const state = {\n        value,\n        compute,\n        nextValue: value,\n        subs: 0,\n        i: 0,\n        dirty: 0,\n        tracking: false,\n        version: null,\n        node: null,\n        fs: null,\n        ls: null,\n        ft: null,\n        lt: null,\n    };\n    if (parent) {\n        if (!parent.children)\n            parent.children = [state];\n        else\n            parent.children.push(state);\n    }\n    return state;\n}\n\nconst writableSignalProto = Object.assign(Object.assign({}, signalProto), { set(value) {\n        return update$1(this._state, value);\n    },\n    notify() {\n        return update$1(this._state);\n    } });\nfunction writable(value, shouldUpdate) {\n    const state = createSignalState(value, undefined);\n    const self = function (value) {\n        if (!arguments.length)\n            return getStateValue(state);\n        return update$1(state, value);\n    };\n    if (shouldUpdate)\n        state.filter = shouldUpdate;\n    self._state = state;\n    self.set = writableSignalProto.set;\n    self.get = writableSignalProto.get;\n    self.notify = writableSignalProto.notify;\n    self.subscribe = writableSignalProto.subscribe;\n    self.sample = writableSignalProto.sample;\n    return self;\n}\n\n/**\n * Sets the activate event listener. The event is emitted at the first subscription or at the first activation of a dependent signal.\n * @param signal Target signal.\n * @param listener Function that listens to the signal activation event.\n */\nfunction onActivate(signal, listener) {\n    signal._state.onActivate = listener;\n}\n/**\n * Sets the deactivate event listener. The event is emitted when there are no subscribers or active dependent signals left.\n * @param signal Target signal.\n * @param listener Function that listens to the signal deactivation event.\n */\nfunction onDeactivate(signal, listener) {\n    signal._state.onDeactivate = listener;\n}\n/**\n * Sets the update event listener. The event is emitted every time the signal value is updated.\n * @param signal Target signal.\n * @param listener Function that listens to the signal update event.\n */\nfunction onUpdate(signal, listener) {\n    signal._state.onUpdate = listener;\n}\n/**\n * Sets the update exception handler. The event is emitted for every unhandled exception in the calculation of the signal value.\n * @param signal Target signal.\n * @param listener Function that listens to the signal exception event.\n */\nfunction onException(signal, listener) {\n    signal._state.onException = listener;\n}\n\nfunction isSignal(value) {\n    return value._state && value.get;\n}\nfunction isWritableSignal(value) {\n    return isSignal(value) && value.set;\n}\nfunction isStore(value) {\n    return isSignal(value) && value.update;\n}\nfunction getValue(value) {\n    return isSignal(value) ? value() : value;\n}\nfunction sampleValue(value) {\n    return isSignal(value) ? value.sample() : value;\n}\n\nfunction computed(compute, shouldUpdate, handleException) {\n    const getValue = isWritableSignal(compute) ? () => compute() : compute;\n    const state = createSignalState(undefined, getValue);\n    const self = () => getStateValue(state);\n    if (shouldUpdate)\n        state.filter = shouldUpdate;\n    if (handleException)\n        state.catch = handleException;\n    self._state = state;\n    self.get = signalProto.get;\n    self.subscribe = signalProto.subscribe;\n    self.sample = signalProto.sample;\n    return self;\n}\n\nconst STOP = {};\nlet VALUES_CACHE = {};\nlet counter = 1;\nfunction isPlainObject(obj) {\n    const proto = Object.getPrototypeOf(obj);\n    return proto && proto.constructor === Object;\n}\nfunction isArray(obj) {\n    return Array.isArray(obj);\n}\nfunction copy(obj) {\n    if (isArray(obj))\n        return obj.slice();\n    if (obj && typeof obj === 'object') {\n        if (isPlainObject(obj))\n            return Object.assign({}, obj);\n        throw new StateTypeError();\n    }\n    return obj;\n}\nfunction getClone(id, state, value) {\n    const cached = VALUES_CACHE[id];\n    if (cached !== undefined)\n        return cached;\n    return copy(arguments.length === 3 ? value : state.sample());\n}\nfunction clearValuesCache() {\n    VALUES_CACHE = {};\n}\nfunction update(arg1, arg2) {\n    let updateFn;\n    if (arguments.length === 2) {\n        updateChild(this, arg1, arg2);\n        return;\n    }\n    else {\n        updateFn = arg1;\n    }\n    const setter = this._setter;\n    const id = this._id;\n    const key = this._key;\n    const parent = this._parent;\n    let value;\n    if (typeof updateFn !== 'function') {\n        value = updateFn;\n    }\n    else {\n        const clone = getClone(id, this);\n        const next = updateFn(clone);\n        if (next === STOP)\n            return;\n        value = next === undefined ? clone : next;\n    }\n    VALUES_CACHE[id] = value;\n    if (setter) {\n        setter(value);\n        return;\n    }\n    parent.update((parentValue) => {\n        if (!parentValue)\n            return STOP;\n        parentValue[key] = value;\n    });\n}\nfunction updateChild(self, key, arg) {\n    self.update((state) => {\n        if (!state)\n            return STOP;\n        const id = self._id + '.' + key;\n        let value;\n        if (typeof arg !== 'function') {\n            value = arg;\n        }\n        else {\n            const clone = getClone(id, undefined, state[key]);\n            const next = arg(clone);\n            value = next === undefined ? clone : next;\n        }\n        VALUES_CACHE[id] = value;\n        state[key] = value;\n    });\n}\nfunction select(key) {\n    const id = this._id + '.' + key;\n    const store = computed(() => {\n        const parentValue = this();\n        const value = parentValue && parentValue[key];\n        if (value === undefined)\n            return null;\n        return value;\n    });\n    store._id = id;\n    store._key = key;\n    store._parent = this;\n    store.select = select;\n    store.update = update;\n    return store;\n}\nfunction store(initialState) {\n    const id = 'store' + counter++;\n    const setter = writable(initialState);\n    const store = computed(setter);\n    store._setter = setter;\n    store._id = id;\n    store.select = select;\n    store.update = update;\n    onUpdate(setter, clearValuesCache);\n    return store;\n}\n\n/**\n * Calls the passed function immediately and every time the signals it depends on are updated.\n * @param fn A function to watch for.\n * @returns Stop watching function.\n */\nfunction watch(fn) {\n    const comp = isSignal(fn) ? fn : computed(fn);\n    return comp.subscribe(NOOP_FN);\n}\n\n/**\n * Creates a tuple of signal and setter function\n * @param initialValue Initial value of the signal\n * @param shouldUpdate The function that returns a falsy value if the new signal value should be ignored. Use falsy arg value to emit signal values that are not equal to previous vaslue. Use truthy arg value to emit all signal values.\n * @returns A tuple of signal and setter function\n */\nfunction signal(initialValue, shouldUpdate) {\n    const source = writable(initialValue, true);\n    const signal = computed(source, shouldUpdate);\n    function set(payload) {\n        if (!arguments.length)\n            return source({});\n        return source(payload);\n    }\n    return [signal, set];\n}\n\n/**\n * Subscribes the function to updates of the signal value.\n * @param signal Signal.\n * @param subscriber Function that listens to the signal updates.\n * @returns Unsubscribe function.\n */\nfunction on(signal, subscriber) {\n    return signal.subscribe(subscriber, false);\n}\n\nfunction named(signal, name) {\n    signal._state.name = name;\n    return signal;\n}\n\n/**\n * Creates an effect from asynchronous function.\n * @param asyncFn Asynchronous function\n * @returns Effect.\n */\nfunction effect(asyncFn, name) {\n    let counter = 0;\n    let current = -1;\n    const _status = writable('pristine');\n    const _exception = writable(undefined, true);\n    const _data = writable(undefined, true);\n    const _aborted = writable();\n    const _args = writable(undefined, true);\n    const lastStatus = computed(_status, (status) => status !== 'pending');\n    lastStatus.subscribe(NOOP_FN);\n    const status = computed(() => {\n        const value = _status();\n        return {\n            value,\n            pristine: value === 'pristine',\n            pending: value === 'pending',\n            fulfilled: value === 'fulfilled',\n            rejected: value === 'rejected',\n            settled: value === 'fulfilled' || value === 'rejected',\n        };\n    });\n    const exception = computed(_exception, true);\n    const done = computed(() => {\n        const data = _data();\n        const exception = _exception();\n        switch (_status.sample()) {\n            case 'pristine':\n            case 'fulfilled':\n                return data;\n            case 'rejected':\n                return exception;\n        }\n    }, true);\n    const data = computed(_data, true);\n    const aborted = computed(_aborted, true);\n    const args = computed(_args, true);\n    const abort = () => {\n        if (!status.sample().pending)\n            return;\n        logEvent(name, 'ABORT');\n        batch(() => {\n            _status(lastStatus());\n            _aborted({});\n        });\n        counter++;\n    };\n    const reset = () => {\n        if (status.sample().pristine)\n            return;\n        logEvent(name, 'RESET');\n        batch(() => {\n            if (status().pending)\n                _aborted({});\n            _status('pristine');\n        });\n        counter++;\n    };\n    const exec = (id, ...args) => {\n        return asyncFn(...args)\n            .then((res) => {\n            current = id;\n            return res;\n        })\n            .catch((e) => {\n            current = id;\n            throw e;\n        });\n    };\n    const call = (...args) => {\n        logEvent(name, 'CALL', args);\n        if (_status.sample() === 'pending') {\n            _aborted({});\n        }\n        batch(() => {\n            _args(args);\n            _status('pending');\n        });\n        return exec(++counter, ...args)\n            .then((v) => {\n            if (current !== counter)\n                return v;\n            batch(() => {\n                _data(v);\n                _status('fulfilled');\n            });\n            return v;\n        })\n            .catch((e) => {\n            if (current !== counter)\n                throw e;\n            batch(() => {\n                _exception(e);\n                _status('rejected');\n            });\n            throw e;\n        });\n    };\n    if (name) {\n        named(data, name + '.data');\n        named(exception, name + '.exception');\n        named(done, name + '.done');\n        named(aborted, name + '.aborted');\n        named(args, name + '.args');\n        named(status, name + '.status');\n    }\n    return {\n        data,\n        exception,\n        done,\n        aborted,\n        args,\n        status,\n        call,\n        abort,\n        reset,\n    };\n}\nfunction logEvent(effectName, eventName, payload) {\n    if (!effectName)\n        return;\n    config._log(effectName, eventName, payload);\n}\n\nfunction createLogger(opts) {\n    const include = opts && opts.include;\n    const exclude = opts && opts.exclude;\n    function log(unitName, ...rest) {\n        console.log(`%c[${unitName}]%c`, 'font-weight: bold', 'font-weight: normal', ...rest);\n    }\n    function createLogFn() {\n        return (unitName, ...rest) => {\n            let shouldLog = true;\n            if (include)\n                shouldLog = include.includes(rest[0]);\n            if (exclude)\n                shouldLog = shouldLog && !exclude.includes(rest[0]);\n            if (shouldLog)\n                log(unitName, ...rest);\n        };\n    }\n    return createLogFn();\n}\n\nexport { batch, collect, computed, configure, createLogger, effect, getValue, isSignal, isStore, isWritableSignal, isolate, named, on, onActivate, onDeactivate, onException, onUpdate, sampleValue, signal, store, watch, writable };\n","import { isSignal, computed, isolate, onDeactivate, collect } from 'spred';\n\nconst creatingState = {\n    root: null,\n    isCreating: false,\n    path: '',\n    setupQueue: [],\n};\nconst traversalState = {\n    path: '',\n    i: 0,\n    node: null,\n};\nconst FIRST_CHILD = 'F';\nconst NEXT_SIBLING = 'N';\nconst PARENT_NODE = 'P';\nconst BINDING = 'B';\nconst START_CHILDREN = '>';\nconst END_CHILDREN = '<';\nfunction next(fn) {\n    const current = traversalState.path[traversalState.i];\n    const nextValue = traversalState.path[++traversalState.i];\n    const goDeeper = nextValue === START_CHILDREN;\n    switch (current) {\n        case FIRST_CHILD:\n            traversalState.node = traversalState.node.firstChild;\n            break;\n        case NEXT_SIBLING:\n            traversalState.node = traversalState.node.nextSibling;\n            break;\n        case PARENT_NODE:\n            traversalState.node = traversalState.node.parentNode;\n            next(fn);\n            break;\n    }\n    if (goDeeper && fn) {\n        ++traversalState.i;\n        fn();\n    }\n}\n\nfunction insertBefore(child, mark, parentNode) {\n    const parent = parentNode || mark.parentNode;\n    parent.insertBefore(child, mark);\n}\nfunction removeNodes(start, end, parentNode) {\n    const parent = parentNode || start.parentNode;\n    let current = start;\n    let next = null;\n    while (current && current !== end) {\n        next = current.nextSibling;\n        parent.removeChild(current);\n        current = next;\n    }\n}\nfunction isFragment(node) {\n    return node.nodeType === Node.DOCUMENT_FRAGMENT_NODE;\n}\nfunction createMark() {\n    return document.createTextNode('');\n}\nfunction isMark(node) {\n    return node && node.nodeType === Node.TEXT_NODE && !node.textContent;\n}\nfunction setupSignalProp(node, key, signal) {\n    signal.subscribe((value) => (node[key] = value));\n}\nfunction setupAttr(node, key, value) {\n    if (typeof value === 'function') {\n        setupSignalAttr(node, key, isSignal(value) ? value : computed(value));\n        return true;\n    }\n    if (creatingState.isCreating)\n        setupBaseAttr(node, key, value);\n}\nfunction setupBaseAttr(node, key, value) {\n    if (value === true || value === '') {\n        value = '';\n    }\n    else if (!value) {\n        node.removeAttribute(key);\n        return;\n    }\n    node.setAttribute(key, value);\n}\nfunction setupSignalAttr(node, key, value) {\n    value.subscribe((v) => setupBaseAttr(node, key, v));\n}\n\nfunction createBinding(cb) {\n    if (creatingState.isCreating) {\n        const mark = createMark();\n        creatingState.path += FIRST_CHILD + BINDING + PARENT_NODE;\n        creatingState.root.appendChild(mark);\n        cb(mark);\n        return;\n    }\n    next();\n    const mark = traversalState && traversalState.node;\n    cb(mark);\n    next();\n}\n\nfunction node(binding) {\n    createBinding((mark) => {\n        if (creatingState.isCreating) {\n            creatingState.setupQueue.push(() => setupNode(binding, mark));\n            return;\n        }\n        setupNode(binding, mark);\n    });\n}\nfunction setupNode(binding, mark) {\n    if (!mark || !binding)\n        return;\n    if (typeof binding === 'function') {\n        if (isSignal(binding)) {\n            setupSignalNode(binding, mark);\n            return;\n        }\n        setupSignalNode(computed(binding), mark);\n        return;\n    }\n    insertBefore(binding, mark);\n}\nfunction setupSignalNode(binding, mark) {\n    let start = mark.previousSibling;\n    if (!start) {\n        start = createMark();\n        insertBefore(start, mark);\n    }\n    binding.subscribe((node) => {\n        removeNodes(start.nextSibling, mark);\n        if (node)\n            insertBefore(node, mark);\n    });\n}\n\nfunction component(fn) {\n    let template = null;\n    let pathString = '';\n    return function (...args) {\n        if (!template) {\n            const prevSetupQueue = creatingState.setupQueue;\n            creatingState.setupQueue = [];\n            const data = createComponentData(fn, args);\n            pathString = data.pathString;\n            template = data.rootNode.cloneNode(true);\n            for (let fn of creatingState.setupQueue)\n                fn();\n            creatingState.setupQueue = prevSetupQueue;\n            return data.rootNode;\n        }\n        const rootNode = template.cloneNode(true);\n        setupComponent(fn, args, rootNode, pathString);\n        return rootNode;\n    };\n}\nfunction templateFn(component) {\n    return (...args) => node(component(...args));\n}\nfunction setupComponent(fn, args, container, pathString) {\n    const prevIsCreating = creatingState.isCreating;\n    const prevPath = traversalState.path;\n    const prevIndex = traversalState.i;\n    const prevNode = traversalState.node;\n    creatingState.isCreating = false;\n    traversalState.path = pathString;\n    traversalState.i = 0;\n    traversalState.node = container;\n    isolate(fn, args);\n    creatingState.isCreating = prevIsCreating;\n    traversalState.path = prevPath;\n    traversalState.i = prevIndex;\n    traversalState.node = prevNode;\n}\nfunction createComponentData(fn, args) {\n    const prevPath = creatingState.path;\n    creatingState.path = '';\n    const prevRoot = creatingState.root;\n    let rootNode = document.createDocumentFragment();\n    creatingState.root = rootNode;\n    const prevIsCreating = creatingState.isCreating;\n    creatingState.isCreating = true;\n    isolate(fn, args);\n    let pathString = getPathString(creatingState.path);\n    creatingState.isCreating = prevIsCreating;\n    creatingState.path = prevPath;\n    creatingState.root = prevRoot;\n    if (rootNode.childNodes.length === 1 && !isMark(rootNode.firstChild)) {\n        rootNode = rootNode.firstChild;\n        if (pathString[0] === FIRST_CHILD)\n            pathString = '_' + pathString.substring(1);\n    }\n    return { rootNode, pathString };\n}\nconst NEXT_SIBLING_REGEX = new RegExp(PARENT_NODE + FIRST_CHILD, 'g');\nconst EMPTY_NESTING_REGEX = new RegExp(`${START_CHILDREN}[^${BINDING}${START_CHILDREN}${END_CHILDREN}]*${END_CHILDREN}`, 'g');\nconst END_CHILDREN_REGEX = new RegExp(END_CHILDREN, 'g');\nconst EMPTY_TAIL = new RegExp(`[^${BINDING}]+$`, 'g');\nconst PARENT_NODE_REGEX = new RegExp(`${NEXT_SIBLING}+${PARENT_NODE}`, 'g');\nfunction getPathString(str) {\n    str = str.replace(NEXT_SIBLING_REGEX, NEXT_SIBLING);\n    let prev = '';\n    while (prev !== str) {\n        prev = str;\n        str = str.replace(EMPTY_NESTING_REGEX, '');\n    }\n    str = str\n        .replace(EMPTY_TAIL, '')\n        .replace(END_CHILDREN_REGEX, '')\n        .replace(PARENT_NODE_REGEX, PARENT_NODE);\n    return str;\n}\n\nfunction classes() {\n    const result = fromArray(arguments);\n    if (typeof result === 'function') {\n        return computed(result);\n    }\n    return result;\n}\nfunction fromObject(obj) {\n    let dynamic;\n    let result = '';\n    for (let key in obj) {\n        const value = obj[key];\n        if (value) {\n            if (typeof value === 'function') {\n                if (!dynamic)\n                    dynamic = [];\n                dynamic.push(key);\n                continue;\n            }\n            if (result)\n                result += ' ';\n            result += key;\n        }\n    }\n    if (dynamic) {\n        return () => {\n            let dynamicResult = result;\n            for (let key of dynamic) {\n                const value = obj[key]();\n                if (!value)\n                    continue;\n                if (dynamicResult)\n                    dynamicResult += ' ';\n                dynamicResult += key;\n            }\n            return dynamicResult;\n        };\n    }\n    return result || null;\n}\nfunction fromArray(arr) {\n    let result = '';\n    let dynamic;\n    for (let i = 0; i < arr.length; i++) {\n        let item = arr[i];\n        if (!item)\n            continue;\n        if (typeof item === 'object') {\n            item = Array.isArray(item) ? fromArray(item) : fromObject(item);\n        }\n        if (item) {\n            const itemType = typeof item;\n            if (itemType === 'function') {\n                if (!dynamic)\n                    dynamic = [];\n                dynamic.push(item);\n            }\n            else if (itemType === 'string') {\n                if (result)\n                    result += ' ';\n                result += item;\n            }\n        }\n    }\n    if (dynamic) {\n        return () => {\n            let dynamicResult = result;\n            for (let fn of dynamic) {\n                const add = fn();\n                if (add && typeof add === 'string') {\n                    if (dynamicResult)\n                        dynamicResult += ' ';\n                    dynamicResult += add;\n                }\n            }\n            return dynamicResult || null;\n        };\n    }\n    return result || null;\n}\n\nfunction spec(props, fn) {\n    if (!props || (creatingState.isCreating && !creatingState.root))\n        return;\n    let node;\n    let hasBindings = false;\n    if (creatingState.isCreating) {\n        node = creatingState.root;\n    }\n    else {\n        if (traversalState.path[traversalState.i] !== BINDING)\n            return;\n        node = traversalState.node;\n        next(fn);\n    }\n    for (let key in props) {\n        const reserved = RESERVED[key];\n        let value = props[key];\n        if (reserved) {\n            const result = reserved(node, value);\n            if (result)\n                hasBindings = true;\n            continue;\n        }\n        key = ALIASES[key] || key;\n        if (typeof value === 'function') {\n            hasBindings = true;\n            if (key[0] === 'o' && key[1] === 'n') {\n                node[key] = value;\n                continue;\n            }\n            setupSignalProp(node, key, isSignal(value) ? value : computed(value));\n            continue;\n        }\n        if (creatingState.isCreating)\n            node[key] = value;\n    }\n    if (hasBindings && creatingState.isCreating) {\n        creatingState.path += BINDING;\n    }\n}\nconst RESERVED = {\n    attrs(node, attrs) {\n        let hasBindings = false;\n        for (let key in attrs) {\n            hasBindings = setupAttr(node, key, attrs[key]) || hasBindings;\n        }\n        return hasBindings;\n    },\n    class(node, value) {\n        if (typeof value === 'object') {\n            value = Array.isArray(value) ? fromArray(value) : fromObject(value);\n        }\n        return setupAttr(node, 'class', value);\n    },\n    ref(node, cb) {\n        cb(node);\n        return true;\n    },\n};\nconst ALIASES = {\n    text: 'textContent',\n};\n\nconst TEMPLATE_RESULT = {\n    // istanbul ignore next\n    get __INTERNAL__() {\n        return 'Dummy property used for correct type checking only';\n    },\n};\n\nfunction h(first, second, third) {\n    let props;\n    let fn;\n    let tag;\n    switch (arguments.length) {\n        case 1:\n            if (typeof first === 'function')\n                fn = first;\n            else\n                tag = first;\n            break;\n        case 2:\n            tag = first;\n            if (typeof second === 'function')\n                fn = second;\n            else\n                props = second;\n            break;\n        case 3:\n            tag = first;\n            props = second;\n            fn = third;\n            break;\n    }\n    if (!tag) {\n        fn();\n        return TEMPLATE_RESULT;\n    }\n    if (creatingState.isCreating) {\n        const child = document.createElement(tag);\n        creatingState.root.appendChild(child);\n        creatingState.root = child;\n        creatingState.path += FIRST_CHILD;\n        spec(props);\n        if (fn) {\n            creatingState.path += START_CHILDREN;\n            fn();\n            creatingState.path += END_CHILDREN;\n        }\n        creatingState.path += PARENT_NODE;\n        creatingState.root = creatingState.root.parentNode;\n        return TEMPLATE_RESULT;\n    }\n    next(fn);\n    spec(props, fn);\n    return TEMPLATE_RESULT;\n}\n\nfunction text(data) {\n    let node;\n    if (creatingState.isCreating) {\n        node = document.createTextNode('_');\n        creatingState.root.appendChild(node);\n    }\n    else {\n        next();\n        node = traversalState.node;\n    }\n    if (typeof data === 'function') {\n        if (creatingState.isCreating) {\n            creatingState.path += FIRST_CHILD + BINDING + PARENT_NODE;\n        }\n        else\n            next();\n        setupSignalProp(node, 'textContent', isSignal(data) ? data : computed(data));\n        return;\n    }\n    if (creatingState.isCreating) {\n        creatingState.path += FIRST_CHILD + PARENT_NODE;\n        node.textContent = data;\n    }\n}\n\nfunction list(binding, mapFn) {\n    if (creatingState.isCreating && creatingState.root) {\n        const mark = createMark();\n        creatingState.path += FIRST_CHILD + BINDING + PARENT_NODE;\n        creatingState.setupQueue.push(() => setupList(binding, mapFn, mark));\n        creatingState.root.appendChild(mark);\n        return;\n    }\n    next();\n    setupList(binding, mapFn, traversalState.node);\n    next();\n}\nfunction setupList(binding, mapFn, mark) {\n    if (isSignal(binding)) {\n        let start = mark.previousSibling;\n        if (!start) {\n            start = createMark();\n            insertBefore(start, mark);\n        }\n        let oldArr = [];\n        let nodeMap = new Map();\n        let cleanupMap = new Map();\n        // the algorithm is taken from\n        // https://github.com/localvoid/ivi/blob/2c81ead934b9128e092cc2a5ef2d3cabc73cb5dd/packages/ivi/src/vdom/implementation.ts#L1366\n        const arrSignal = computed(() => {\n            const newArr = binding();\n            const parent = mark.parentNode;\n            let oldLength = oldArr.length;\n            let newLength = newArr.length;\n            if (!newLength && !oldLength)\n                return;\n            const minLength = Math.min(oldLength, newLength);\n            let s = 0; // start index\n            let a = oldLength - 1; // old array end index\n            let b = newLength - 1; // new array end index\n            for (let i = 0; i < minLength; ++i) {\n                let shouldStop = 0;\n                if (oldArr[s] === newArr[s])\n                    ++s;\n                else\n                    ++shouldStop;\n                if (oldArr[a] === newArr[b])\n                    --a, --b;\n                else\n                    ++shouldStop;\n                if (shouldStop === 2)\n                    break;\n            }\n            // lists are equal\n            if (a < 0 && b < 0)\n                return;\n            // add nodes\n            if (s > a) {\n                const index = b + 1;\n                const endNode = index === newLength ? mark : nodeMap.get(newArr[index]);\n                while (s <= b) {\n                    insertBefore(createListNode(newArr[s], mapFn, nodeMap, cleanupMap), endNode, parent);\n                    ++s;\n                }\n                oldArr = newArr.slice();\n                return;\n            }\n            // remove nodes\n            if (s > b) {\n                const endIndex = a + 1;\n                const startNode = nodeMap.get(oldArr[s]);\n                const endNode = endIndex === oldLength ? mark : nodeMap.get(oldArr[endIndex]);\n                removeNodes(startNode, endNode, parent);\n                while (s < endIndex) {\n                    const el = oldArr[s++];\n                    cleanupMap.get(el)();\n                    cleanupMap.delete(el);\n                    nodeMap.delete(el);\n                }\n                oldArr = newArr.slice();\n                return;\n            }\n            // reconcile\n            const positions = [];\n            const elementIndexMap = new Map();\n            let removedCount = 0;\n            let last = 0;\n            let moved = false;\n            oldLength = a + 1 - s;\n            newLength = b + 1 - s;\n            for (let i = 0; i < newLength; ++i) {\n                const index = s + i;\n                positions[i] = -1;\n                elementIndexMap.set(newArr[index], index);\n            }\n            for (let i = 0; i < oldLength; ++i) {\n                const oldIndex = s + i;\n                const el = oldArr[oldIndex];\n                const newIndex = elementIndexMap.get(el);\n                if (newIndex === undefined) {\n                    const node = nodeMap.get(el);\n                    const end = (node.$lc || node).nextSibling;\n                    removeNodes(node, end, parent);\n                    cleanupMap.get(el)();\n                    cleanupMap.delete(el);\n                    nodeMap.delete(el);\n                    removedCount++;\n                    continue;\n                }\n                positions[newIndex - s] = oldIndex;\n                if (!moved) {\n                    if (last > newIndex)\n                        moved = true;\n                    else\n                        last = newIndex;\n                }\n            }\n            if (moved) {\n                const lis = getLIS(positions);\n                for (let i = 0, j = lis.length - 1; i < newLength; ++i) {\n                    const position = positions[newLength - i - 1];\n                    const lisPosition = lis[j];\n                    if (position === lisPosition) {\n                        --j;\n                        continue;\n                    }\n                    const index = b - i;\n                    const el = newArr[index];\n                    const nextEl = newArr[index + 1];\n                    const nextNode = nextEl === undefined //\n                        ? mark\n                        : nodeMap.get(nextEl);\n                    if (position < 0) {\n                        insertBefore(createListNode(el, mapFn, nodeMap, cleanupMap), nextNode, parent);\n                    }\n                    else {\n                        const node = nodeMap.get(el);\n                        const lastChild = node.$lc;\n                        if (lastChild && node !== lastChild) {\n                            let current = node;\n                            let next;\n                            while (1) {\n                                next = current.nextSibling;\n                                insertBefore(current, nextNode, parent);\n                                if (current === lastChild)\n                                    break;\n                                current = next;\n                            }\n                        }\n                        else {\n                            insertBefore(node, nextNode, parent);\n                        }\n                    }\n                }\n            }\n            else if (oldLength - removedCount !== newLength) {\n                for (let i = 0; i < newLength; ++i) {\n                    if (positions[newLength - i - 1] !== -1)\n                        continue;\n                    const index = b - i;\n                    const el = newArr[index];\n                    const nextEl = newArr[index + 1];\n                    const nextNode = nextEl === undefined //\n                        ? mark\n                        : nodeMap.get(nextEl);\n                    insertBefore(createListNode(el, mapFn, nodeMap, cleanupMap), nextNode, parent);\n                }\n            }\n            oldArr = newArr.slice();\n        });\n        arrSignal.subscribe(NOOP);\n        onDeactivate(arrSignal, () => {\n            cleanupMap.forEach((cleanup) => cleanup());\n            cleanupMap.clear();\n            nodeMap.clear();\n        });\n        return;\n    }\n    const parent = mark.parentNode;\n    for (let el of binding) {\n        insertBefore(mapFn(el), mark, parent);\n    }\n}\nfunction getLIS(arr) {\n    const arrLength = arr.length;\n    const endIndexes = [];\n    const predecessors = [];\n    let lisLength = 0;\n    for (let i = 0; i < arrLength; ++i) {\n        const el = arr[i];\n        if (el < 0)\n            continue;\n        let lo = 1;\n        let hi = lisLength + 1;\n        while (lo < hi) {\n            const mid = lo + (0 | ((hi - lo) / 2));\n            if (arr[endIndexes[mid]] > el)\n                hi = mid;\n            else\n                lo = mid + 1;\n        }\n        predecessors[i] = endIndexes[lo - 1];\n        endIndexes[lo] = i;\n        if (lo > lisLength)\n            lisLength = lo;\n    }\n    const lis = [];\n    let i = lisLength;\n    let k = endIndexes[lisLength];\n    while (i) {\n        lis[--i] = arr[k];\n        k = predecessors[k];\n    }\n    return lis;\n}\nfunction createListNode(el, mapFn, nodeMap, cleanupMap) {\n    let node;\n    const cleanup = collect(() => {\n        node = mapFn(el);\n    });\n    let nodeInMap = node;\n    if (isFragment(node)) {\n        const firstChild = node.firstChild;\n        nodeInMap = createMark();\n        if (firstChild)\n            node.insertBefore(nodeInMap, firstChild);\n        else\n            node.appendChild(nodeInMap);\n        nodeInMap.$lc = node.lastChild;\n    }\n    nodeMap.set(el, nodeInMap);\n    cleanupMap.set(el, cleanup);\n    return node;\n}\nconst NOOP = () => { };\n\nexport { classes, component, h, list, node, templateFn, text };\n","import { computed, writable } from 'spred';\n\nconst PLAY_HASH = '#play';\nconst HOST_HASH = '#host';\nconst DELIMITER = '/';\n\nconst hash = writable(location.hash);\nconst tuple = computed(() => hash().split(DELIMITER));\n\nwindow.addEventListener('hashchange', () => {\n  hash(location.hash);\n});\n\nexport const route = computed(() => {\n  const str = tuple()[0];\n\n  if (str === PLAY_HASH) return 'PLAY';\n  else if (str === HOST_HASH) return 'HOST';\n  return 'MAIN';\n});\n\nexport const roomId = computed(() => tuple()[1]);\n\nexport function getPlayLink(roomId: string) {\n  return location.origin + '/' + PLAY_HASH + DELIMITER + roomId;\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","export enum Action {\n  RoomUpdate = 'ROOM_UPDATE',\n  StartGame = 'START_GAME',\n  PlayerData = 'PLAYER_DATA',\n}\n","export enum ClientType {\n  Host = 'HOST',\n  Player = 'PLAYER',\n}\n","export enum GameStage {\n  Lobby = 'LOBBY',\n  Question = 'QUESTION',\n  Vote = 'VOTE',\n  Results = 'RESULTS',\n}\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\");\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { computed, store, writable } from 'spred';\nimport { io, Socket } from 'socket.io-client';\nimport { Action } from '../../common/action';\nimport { ClientType } from '../../common/client-type';\nimport { RoomState } from '../../common/room-state';\nimport { getPlayLink } from './routing';\n\nconst isLocalHost = location.origin === 'http://localhost:1234';\n\nconst WS_URL = isLocalHost ? 'ws://localhost:3000' : '';\n\nexport class GameController {\n  private socket: Socket;\n  protected playerId;\n\n  private readonly _pending = writable(false);\n  public readonly pending = computed(this._pending);\n\n  protected readonly _state = store<RoomState>({ loading: true } as RoomState);\n  public readonly state = computed(this._state);\n\n  public readonly roomId = computed(() => this.state().id);\n  public readonly playLink = computed(() => getPlayLink(this.roomId()));\n\n  public readonly loading = computed(() => this.state().loading || false);\n  public readonly stage = computed(() => this.state().stage);\n  public readonly error = computed(() => this.state().error);\n\n  public readonly votedAnswer = computed(() => {\n    const state = this.state();\n    return state.answers[state.answerIndex];\n  });\n\n  public readonly votedCard = computed(() => {\n    return this.votedAnswer().card;\n  });\n\n  public readonly votes = computed(() => {\n    return this.votedAnswer().votes;\n  });\n\n  public readonly playersList = computed(() => {\n    const players = this.state().players;\n    const ids = Object.keys(players);\n\n    return ids.map((id) => players[id]);\n  });\n\n  public readonly sortedPlayerList = computed(() => {\n    const list = this.playersList().slice();\n    list.sort((a, b) => a.score - b.score);\n\n    return list;\n  });\n\n  constructor(\n    type: ClientType,\n    roomId: string,\n    playerId?: string,\n    playerName?: string\n  ) {\n    this.socket = io(WS_URL, {\n      reconnectionDelayMax: 10000,\n      query: { type, roomId, playerId, playerName },\n    });\n\n    this.playerId = playerId || '';\n    this.socket.on(Action.RoomUpdate, (state) => {\n      this._state.update(state);\n      this._pending(false);\n    });\n  }\n\n  protected emit(action: Action, payload?: any) {\n    this._pending(true);\n    this.socket.emit(action, payload);\n  }\n}\n","import { computed } from 'spred';\nimport { Action } from '../../common/action';\nimport { ClientType } from '../../common/client-type';\nimport { GameStage } from '../../common/game-stage';\nimport { GameController } from './game-controller';\n\nexport class HostController extends GameController {\n  public readonly gameStartBlocked = computed(\n    () => this.playersList().length <= 1\n  );\n  public readonly caption = computed(() => this.state().caption);\n  public readonly round = computed(() => this.state().round);\n\n  constructor(roomId: string) {\n    super(ClientType.Host, roomId);\n  }\n\n  public startGame(maxRounds = 0) {\n    const state = this.state();\n\n    if (state && state.stage === GameStage.Lobby) {\n      this.emit(Action.StartGame, maxRounds);\n    }\n  }\n}\n","/*\n * QR Code generator library (TypeScript)\n *\n * Copyright (c) Project Nayuki. (MIT License)\n * https://www.nayuki.io/page/qr-code-generator-library\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n * - The above copyright notice and this permission notice shall be included in\n *   all copies or substantial portions of the Software.\n * - The Software is provided \"as is\", without warranty of any kind, express or\n *   implied, including but not limited to the warranties of merchantability,\n *   fitness for a particular purpose and noninfringement. In no event shall the\n *   authors or copyright holders be liable for any claim, damages or other\n *   liability, whether in an action of contract, tort or otherwise, arising from,\n *   out of or in connection with the Software or the use or other dealings in the\n *   Software.\n */\n\n'use strict';\n\nnamespace qrcodegen {\n  type bit = number;\n  type byte = number;\n  type int = number;\n\n  /*---- QR Code symbol class ----*/\n\n  /*\n   * A QR Code symbol, which is a type of two-dimension barcode.\n   * Invented by Denso Wave and described in the ISO/IEC 18004 standard.\n   * Instances of this class represent an immutable square grid of dark and light cells.\n   * The class provides static factory functions to create a QR Code from text or binary data.\n   * The class covers the QR Code Model 2 specification, supporting all versions (sizes)\n   * from 1 to 40, all 4 error correction levels, and 4 character encoding modes.\n   *\n   * Ways to create a QR Code object:\n   * - High level: Take the payload data and call QrCode.encodeText() or QrCode.encodeBinary().\n   * - Mid level: Custom-make the list of segments and call QrCode.encodeSegments().\n   * - Low level: Custom-make the array of data codeword bytes (including\n   *   segment headers and final padding, excluding error correction codewords),\n   *   supply the appropriate version number, and call the QrCode() constructor.\n   * (Note that all ways require supplying the desired error correction level.)\n   */\n  export class QrCode {\n    /*-- Static factory functions (high level) --*/\n\n    // Returns a QR Code representing the given Unicode text string at the given error correction level.\n    // As a conservative upper bound, this function is guaranteed to succeed for strings that have 738 or fewer\n    // Unicode code points (not UTF-16 code units) if the low error correction level is used. The smallest possible\n    // QR Code version is automatically chosen for the output. The ECC level of the result may be higher than the\n    // ecl argument if it can be done without increasing the version.\n    public static encodeText(text: string, ecl: QrCode.Ecc): QrCode {\n      const segs: Array<QrSegment> = qrcodegen.QrSegment.makeSegments(text);\n      return QrCode.encodeSegments(segs, ecl);\n    }\n\n    // Returns a QR Code representing the given binary data at the given error correction level.\n    // This function always encodes using the binary segment mode, not any text mode. The maximum number of\n    // bytes allowed is 2953. The smallest possible QR Code version is automatically chosen for the output.\n    // The ECC level of the result may be higher than the ecl argument if it can be done without increasing the version.\n    public static encodeBinary(\n      data: Readonly<Array<byte>>,\n      ecl: QrCode.Ecc\n    ): QrCode {\n      const seg: QrSegment = qrcodegen.QrSegment.makeBytes(data);\n      return QrCode.encodeSegments([seg], ecl);\n    }\n\n    /*-- Static factory functions (mid level) --*/\n\n    // Returns a QR Code representing the given segments with the given encoding parameters.\n    // The smallest possible QR Code version within the given range is automatically\n    // chosen for the output. Iff boostEcl is true, then the ECC level of the result\n    // may be higher than the ecl argument if it can be done without increasing the\n    // version. The mask number is either between 0 to 7 (inclusive) to force that\n    // mask, or -1 to automatically choose an appropriate mask (which may be slow).\n    // This function allows the user to create a custom sequence of segments that switches\n    // between modes (such as alphanumeric and byte) to encode text in less space.\n    // This is a mid-level API; the high-level API is encodeText() and encodeBinary().\n    public static encodeSegments(\n      segs: Readonly<Array<QrSegment>>,\n      ecl: QrCode.Ecc,\n      minVersion: int = 1,\n      maxVersion: int = 40,\n      mask: int = -1,\n      boostEcl: boolean = true\n    ): QrCode {\n      if (\n        !(\n          QrCode.MIN_VERSION <= minVersion &&\n          minVersion <= maxVersion &&\n          maxVersion <= QrCode.MAX_VERSION\n        ) ||\n        mask < -1 ||\n        mask > 7\n      )\n        throw new RangeError('Invalid value');\n\n      // Find the minimal version number to use\n      let version: int;\n      let dataUsedBits: int;\n      for (version = minVersion; ; version++) {\n        const dataCapacityBits: int =\n          QrCode.getNumDataCodewords(version, ecl) * 8; // Number of data bits available\n        const usedBits: number = QrSegment.getTotalBits(segs, version);\n        if (usedBits <= dataCapacityBits) {\n          dataUsedBits = usedBits;\n          break; // This version number is found to be suitable\n        }\n        if (version >= maxVersion)\n          // All versions in the range could not fit the given data\n          throw new RangeError('Data too long');\n      }\n\n      // Increase the error correction level while the data still fits in the current version number\n      for (const newEcl of [\n        QrCode.Ecc.MEDIUM,\n        QrCode.Ecc.QUARTILE,\n        QrCode.Ecc.HIGH,\n      ]) {\n        // From low to high\n        if (\n          boostEcl &&\n          dataUsedBits <= QrCode.getNumDataCodewords(version, newEcl) * 8\n        )\n          ecl = newEcl;\n      }\n\n      // Concatenate all segments to create the data bit string\n      let bb: Array<bit> = [];\n      for (const seg of segs) {\n        appendBits(seg.mode.modeBits, 4, bb);\n        appendBits(seg.numChars, seg.mode.numCharCountBits(version), bb);\n        for (const b of seg.getData()) bb.push(b);\n      }\n      assert(bb.length == dataUsedBits);\n\n      // Add terminator and pad up to a byte if applicable\n      const dataCapacityBits: int =\n        QrCode.getNumDataCodewords(version, ecl) * 8;\n      assert(bb.length <= dataCapacityBits);\n      appendBits(0, Math.min(4, dataCapacityBits - bb.length), bb);\n      appendBits(0, (8 - (bb.length % 8)) % 8, bb);\n      assert(bb.length % 8 == 0);\n\n      // Pad with alternating bytes until data capacity is reached\n      for (\n        let padByte = 0xec;\n        bb.length < dataCapacityBits;\n        padByte ^= 0xec ^ 0x11\n      )\n        appendBits(padByte, 8, bb);\n\n      // Pack bits into bytes in big endian\n      let dataCodewords: Array<byte> = [];\n      while (dataCodewords.length * 8 < bb.length) dataCodewords.push(0);\n      bb.forEach(\n        (b: bit, i: int) => (dataCodewords[i >>> 3] |= b << (7 - (i & 7)))\n      );\n\n      // Create the QR Code object\n      return new QrCode(version, ecl, dataCodewords, mask);\n    }\n\n    /*-- Fields --*/\n\n    // The width and height of this QR Code, measured in modules, between\n    // 21 and 177 (inclusive). This is equal to version * 4 + 17.\n    public readonly size: int;\n\n    // The index of the mask pattern used in this QR Code, which is between 0 and 7 (inclusive).\n    // Even if a QR Code is created with automatic masking requested (mask = -1),\n    // the resulting object still has a mask value between 0 and 7.\n    public readonly mask: int;\n\n    // The modules of this QR Code (false = light, true = dark).\n    // Immutable after constructor finishes. Accessed through getModule().\n    private readonly modules: Array<Array<boolean>> = [];\n\n    // Indicates function modules that are not subjected to masking. Discarded when constructor finishes.\n    private readonly isFunction: Array<Array<boolean>> = [];\n\n    /*-- Constructor (low level) and fields --*/\n\n    // Creates a new QR Code with the given version number,\n    // error correction level, data codeword bytes, and mask number.\n    // This is a low-level API that most users should not use directly.\n    // A mid-level API is the encodeSegments() function.\n    public constructor(\n      // The version number of this QR Code, which is between 1 and 40 (inclusive).\n      // This determines the size of this barcode.\n      public readonly version: int,\n\n      // The error correction level used in this QR Code.\n      public readonly errorCorrectionLevel: QrCode.Ecc,\n\n      dataCodewords: Readonly<Array<byte>>,\n\n      msk: int\n    ) {\n      // Check scalar arguments\n      if (version < QrCode.MIN_VERSION || version > QrCode.MAX_VERSION)\n        throw new RangeError('Version value out of range');\n      if (msk < -1 || msk > 7) throw new RangeError('Mask value out of range');\n      this.size = version * 4 + 17;\n\n      // Initialize both grids to be size*size arrays of Boolean false\n      let row: Array<boolean> = [];\n      for (let i = 0; i < this.size; i++) row.push(false);\n      for (let i = 0; i < this.size; i++) {\n        this.modules.push(row.slice()); // Initially all light\n        this.isFunction.push(row.slice());\n      }\n\n      // Compute ECC, draw modules\n      this.drawFunctionPatterns();\n      const allCodewords: Array<byte> = this.addEccAndInterleave(dataCodewords);\n      this.drawCodewords(allCodewords);\n\n      // Do masking\n      if (msk == -1) {\n        // Automatically choose best mask\n        let minPenalty: int = 1000000000;\n        for (let i = 0; i < 8; i++) {\n          this.applyMask(i);\n          this.drawFormatBits(i);\n          const penalty: int = this.getPenaltyScore();\n          if (penalty < minPenalty) {\n            msk = i;\n            minPenalty = penalty;\n          }\n          this.applyMask(i); // Undoes the mask due to XOR\n        }\n      }\n      assert(0 <= msk && msk <= 7);\n      this.mask = msk;\n      this.applyMask(msk); // Apply the final choice of mask\n      this.drawFormatBits(msk); // Overwrite old format bits\n\n      this.isFunction = [];\n    }\n\n    /*-- Accessor methods --*/\n\n    // Returns the color of the module (pixel) at the given coordinates, which is false\n    // for light or true for dark. The top left corner has the coordinates (x=0, y=0).\n    // If the given coordinates are out of bounds, then false (light) is returned.\n    public getModule(x: int, y: int): boolean {\n      return (\n        0 <= x && x < this.size && 0 <= y && y < this.size && this.modules[y][x]\n      );\n    }\n\n    /*-- Private helper methods for constructor: Drawing function modules --*/\n\n    // Reads this object's version field, and draws and marks all function modules.\n    private drawFunctionPatterns(): void {\n      // Draw horizontal and vertical timing patterns\n      for (let i = 0; i < this.size; i++) {\n        this.setFunctionModule(6, i, i % 2 == 0);\n        this.setFunctionModule(i, 6, i % 2 == 0);\n      }\n\n      // Draw 3 finder patterns (all corners except bottom right; overwrites some timing modules)\n      this.drawFinderPattern(3, 3);\n      this.drawFinderPattern(this.size - 4, 3);\n      this.drawFinderPattern(3, this.size - 4);\n\n      // Draw numerous alignment patterns\n      const alignPatPos: Array<int> = this.getAlignmentPatternPositions();\n      const numAlign: int = alignPatPos.length;\n      for (let i = 0; i < numAlign; i++) {\n        for (let j = 0; j < numAlign; j++) {\n          // Don't draw on the three finder corners\n          if (\n            !(\n              (i == 0 && j == 0) ||\n              (i == 0 && j == numAlign - 1) ||\n              (i == numAlign - 1 && j == 0)\n            )\n          )\n            this.drawAlignmentPattern(alignPatPos[i], alignPatPos[j]);\n        }\n      }\n\n      // Draw configuration data\n      this.drawFormatBits(0); // Dummy mask value; overwritten later in the constructor\n      this.drawVersion();\n    }\n\n    // Draws two copies of the format bits (with its own error correction code)\n    // based on the given mask and this object's error correction level field.\n    private drawFormatBits(mask: int): void {\n      // Calculate error correction code and pack bits\n      const data: int = (this.errorCorrectionLevel.formatBits << 3) | mask; // errCorrLvl is uint2, mask is uint3\n      let rem: int = data;\n      for (let i = 0; i < 10; i++) rem = (rem << 1) ^ ((rem >>> 9) * 0x537);\n      const bits = ((data << 10) | rem) ^ 0x5412; // uint15\n      assert(bits >>> 15 == 0);\n\n      // Draw first copy\n      for (let i = 0; i <= 5; i++)\n        this.setFunctionModule(8, i, getBit(bits, i));\n      this.setFunctionModule(8, 7, getBit(bits, 6));\n      this.setFunctionModule(8, 8, getBit(bits, 7));\n      this.setFunctionModule(7, 8, getBit(bits, 8));\n      for (let i = 9; i < 15; i++)\n        this.setFunctionModule(14 - i, 8, getBit(bits, i));\n\n      // Draw second copy\n      for (let i = 0; i < 8; i++)\n        this.setFunctionModule(this.size - 1 - i, 8, getBit(bits, i));\n      for (let i = 8; i < 15; i++)\n        this.setFunctionModule(8, this.size - 15 + i, getBit(bits, i));\n      this.setFunctionModule(8, this.size - 8, true); // Always dark\n    }\n\n    // Draws two copies of the version bits (with its own error correction code),\n    // based on this object's version field, iff 7 <= version <= 40.\n    private drawVersion(): void {\n      if (this.version < 7) return;\n\n      // Calculate error correction code and pack bits\n      let rem: int = this.version; // version is uint6, in the range [7, 40]\n      for (let i = 0; i < 12; i++) rem = (rem << 1) ^ ((rem >>> 11) * 0x1f25);\n      const bits: int = (this.version << 12) | rem; // uint18\n      assert(bits >>> 18 == 0);\n\n      // Draw two copies\n      for (let i = 0; i < 18; i++) {\n        const color: boolean = getBit(bits, i);\n        const a: int = this.size - 11 + (i % 3);\n        const b: int = Math.floor(i / 3);\n        this.setFunctionModule(a, b, color);\n        this.setFunctionModule(b, a, color);\n      }\n    }\n\n    // Draws a 9*9 finder pattern including the border separator,\n    // with the center module at (x, y). Modules can be out of bounds.\n    private drawFinderPattern(x: int, y: int): void {\n      for (let dy = -4; dy <= 4; dy++) {\n        for (let dx = -4; dx <= 4; dx++) {\n          const dist: int = Math.max(Math.abs(dx), Math.abs(dy)); // Chebyshev/infinity norm\n          const xx: int = x + dx;\n          const yy: int = y + dy;\n          if (0 <= xx && xx < this.size && 0 <= yy && yy < this.size)\n            this.setFunctionModule(xx, yy, dist != 2 && dist != 4);\n        }\n      }\n    }\n\n    // Draws a 5*5 alignment pattern, with the center module\n    // at (x, y). All modules must be in bounds.\n    private drawAlignmentPattern(x: int, y: int): void {\n      for (let dy = -2; dy <= 2; dy++) {\n        for (let dx = -2; dx <= 2; dx++)\n          this.setFunctionModule(\n            x + dx,\n            y + dy,\n            Math.max(Math.abs(dx), Math.abs(dy)) != 1\n          );\n      }\n    }\n\n    // Sets the color of a module and marks it as a function module.\n    // Only used by the constructor. Coordinates must be in bounds.\n    private setFunctionModule(x: int, y: int, isDark: boolean): void {\n      this.modules[y][x] = isDark;\n      this.isFunction[y][x] = true;\n    }\n\n    /*-- Private helper methods for constructor: Codewords and masking --*/\n\n    // Returns a new byte string representing the given data with the appropriate error correction\n    // codewords appended to it, based on this object's version and error correction level.\n    private addEccAndInterleave(data: Readonly<Array<byte>>): Array<byte> {\n      const ver: int = this.version;\n      const ecl: QrCode.Ecc = this.errorCorrectionLevel;\n      if (data.length != QrCode.getNumDataCodewords(ver, ecl))\n        throw new RangeError('Invalid argument');\n\n      // Calculate parameter numbers\n      const numBlocks: int =\n        QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n      const blockEccLen: int = QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver];\n      const rawCodewords: int = Math.floor(\n        QrCode.getNumRawDataModules(ver) / 8\n      );\n      const numShortBlocks: int = numBlocks - (rawCodewords % numBlocks);\n      const shortBlockLen: int = Math.floor(rawCodewords / numBlocks);\n\n      // Split data into blocks and append ECC to each block\n      let blocks: Array<Array<byte>> = [];\n      const rsDiv: Array<byte> = QrCode.reedSolomonComputeDivisor(blockEccLen);\n      for (let i = 0, k = 0; i < numBlocks; i++) {\n        let dat: Array<byte> = data.slice(\n          k,\n          k + shortBlockLen - blockEccLen + (i < numShortBlocks ? 0 : 1)\n        );\n        k += dat.length;\n        const ecc: Array<byte> = QrCode.reedSolomonComputeRemainder(dat, rsDiv);\n        if (i < numShortBlocks) dat.push(0);\n        blocks.push(dat.concat(ecc));\n      }\n\n      // Interleave (not concatenate) the bytes from every block into a single sequence\n      let result: Array<byte> = [];\n      for (let i = 0; i < blocks[0].length; i++) {\n        blocks.forEach((block, j) => {\n          // Skip the padding byte in short blocks\n          if (i != shortBlockLen - blockEccLen || j >= numShortBlocks)\n            result.push(block[i]);\n        });\n      }\n      assert(result.length == rawCodewords);\n      return result;\n    }\n\n    // Draws the given sequence of 8-bit codewords (data and error correction) onto the entire\n    // data area of this QR Code. Function modules need to be marked off before this is called.\n    private drawCodewords(data: Readonly<Array<byte>>): void {\n      if (\n        data.length != Math.floor(QrCode.getNumRawDataModules(this.version) / 8)\n      )\n        throw new RangeError('Invalid argument');\n      let i: int = 0; // Bit index into the data\n      // Do the funny zigzag scan\n      for (let right = this.size - 1; right >= 1; right -= 2) {\n        // Index of right column in each column pair\n        if (right == 6) right = 5;\n        for (let vert = 0; vert < this.size; vert++) {\n          // Vertical counter\n          for (let j = 0; j < 2; j++) {\n            const x: int = right - j; // Actual x coordinate\n            const upward: boolean = ((right + 1) & 2) == 0;\n            const y: int = upward ? this.size - 1 - vert : vert; // Actual y coordinate\n            if (!this.isFunction[y][x] && i < data.length * 8) {\n              this.modules[y][x] = getBit(data[i >>> 3], 7 - (i & 7));\n              i++;\n            }\n            // If this QR Code has any remainder bits (0 to 7), they were assigned as\n            // 0/false/light by the constructor and are left unchanged by this method\n          }\n        }\n      }\n      assert(i == data.length * 8);\n    }\n\n    // XORs the codeword modules in this QR Code with the given mask pattern.\n    // The function modules must be marked and the codeword bits must be drawn\n    // before masking. Due to the arithmetic of XOR, calling applyMask() with\n    // the same mask value a second time will undo the mask. A final well-formed\n    // QR Code needs exactly one (not zero, two, etc.) mask applied.\n    private applyMask(mask: int): void {\n      if (mask < 0 || mask > 7) throw new RangeError('Mask value out of range');\n      for (let y = 0; y < this.size; y++) {\n        for (let x = 0; x < this.size; x++) {\n          let invert: boolean;\n          switch (mask) {\n            case 0:\n              invert = (x + y) % 2 == 0;\n              break;\n            case 1:\n              invert = y % 2 == 0;\n              break;\n            case 2:\n              invert = x % 3 == 0;\n              break;\n            case 3:\n              invert = (x + y) % 3 == 0;\n              break;\n            case 4:\n              invert = (Math.floor(x / 3) + Math.floor(y / 2)) % 2 == 0;\n              break;\n            case 5:\n              invert = ((x * y) % 2) + ((x * y) % 3) == 0;\n              break;\n            case 6:\n              invert = (((x * y) % 2) + ((x * y) % 3)) % 2 == 0;\n              break;\n            case 7:\n              invert = (((x + y) % 2) + ((x * y) % 3)) % 2 == 0;\n              break;\n            default:\n              throw new Error('Unreachable');\n          }\n          if (!this.isFunction[y][x] && invert)\n            this.modules[y][x] = !this.modules[y][x];\n        }\n      }\n    }\n\n    // Calculates and returns the penalty score based on state of this QR Code's current modules.\n    // This is used by the automatic mask choice algorithm to find the mask pattern that yields the lowest score.\n    private getPenaltyScore(): int {\n      let result: int = 0;\n\n      // Adjacent modules in row having same color, and finder-like patterns\n      for (let y = 0; y < this.size; y++) {\n        let runColor = false;\n        let runX = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let x = 0; x < this.size; x++) {\n          if (this.modules[y][x] == runColor) {\n            runX++;\n            if (runX == 5) result += QrCode.PENALTY_N1;\n            else if (runX > 5) result++;\n          } else {\n            this.finderPenaltyAddHistory(runX, runHistory);\n            if (!runColor)\n              result +=\n                this.finderPenaltyCountPatterns(runHistory) * QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runX = 1;\n          }\n        }\n        result +=\n          this.finderPenaltyTerminateAndCount(runColor, runX, runHistory) *\n          QrCode.PENALTY_N3;\n      }\n      // Adjacent modules in column having same color, and finder-like patterns\n      for (let x = 0; x < this.size; x++) {\n        let runColor = false;\n        let runY = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let y = 0; y < this.size; y++) {\n          if (this.modules[y][x] == runColor) {\n            runY++;\n            if (runY == 5) result += QrCode.PENALTY_N1;\n            else if (runY > 5) result++;\n          } else {\n            this.finderPenaltyAddHistory(runY, runHistory);\n            if (!runColor)\n              result +=\n                this.finderPenaltyCountPatterns(runHistory) * QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runY = 1;\n          }\n        }\n        result +=\n          this.finderPenaltyTerminateAndCount(runColor, runY, runHistory) *\n          QrCode.PENALTY_N3;\n      }\n\n      // 2*2 blocks of modules having same color\n      for (let y = 0; y < this.size - 1; y++) {\n        for (let x = 0; x < this.size - 1; x++) {\n          const color: boolean = this.modules[y][x];\n          if (\n            color == this.modules[y][x + 1] &&\n            color == this.modules[y + 1][x] &&\n            color == this.modules[y + 1][x + 1]\n          )\n            result += QrCode.PENALTY_N2;\n        }\n      }\n\n      // Balance of dark and light modules\n      let dark: int = 0;\n      for (const row of this.modules)\n        dark = row.reduce((sum, color) => sum + (color ? 1 : 0), dark);\n      const total: int = this.size * this.size; // Note that size is odd, so dark/total != 1/2\n      // Compute the smallest integer k >= 0 such that (45-5k)% <= dark/total <= (55+5k)%\n      const k: int = Math.ceil(Math.abs(dark * 20 - total * 10) / total) - 1;\n      assert(0 <= k && k <= 9);\n      result += k * QrCode.PENALTY_N4;\n      assert(0 <= result && result <= 2568888); // Non-tight upper bound based on default values of PENALTY_N1, ..., N4\n      return result;\n    }\n\n    /*-- Private helper functions --*/\n\n    // Returns an ascending list of positions of alignment patterns for this version number.\n    // Each position is in the range [0,177), and are used on both the x and y axes.\n    // This could be implemented as lookup table of 40 variable-length lists of integers.\n    private getAlignmentPatternPositions(): Array<int> {\n      if (this.version == 1) return [];\n      else {\n        const numAlign: int = Math.floor(this.version / 7) + 2;\n        const step: int =\n          this.version == 32\n            ? 26\n            : Math.ceil((this.version * 4 + 4) / (numAlign * 2 - 2)) * 2;\n        let result: Array<int> = [6];\n        for (let pos = this.size - 7; result.length < numAlign; pos -= step)\n          result.splice(1, 0, pos);\n        return result;\n      }\n    }\n\n    // Returns the number of data bits that can be stored in a QR Code of the given version number, after\n    // all function modules are excluded. This includes remainder bits, so it might not be a multiple of 8.\n    // The result is in the range [208, 29648]. This could be implemented as a 40-entry lookup table.\n    private static getNumRawDataModules(ver: int): int {\n      if (ver < QrCode.MIN_VERSION || ver > QrCode.MAX_VERSION)\n        throw new RangeError('Version number out of range');\n      let result: int = (16 * ver + 128) * ver + 64;\n      if (ver >= 2) {\n        const numAlign: int = Math.floor(ver / 7) + 2;\n        result -= (25 * numAlign - 10) * numAlign - 55;\n        if (ver >= 7) result -= 36;\n      }\n      assert(208 <= result && result <= 29648);\n      return result;\n    }\n\n    // Returns the number of 8-bit data (i.e. not error correction) codewords contained in any\n    // QR Code of the given version number and error correction level, with remainder bits discarded.\n    // This stateless pure function could be implemented as a (40*4)-cell lookup table.\n    private static getNumDataCodewords(ver: int, ecl: QrCode.Ecc): int {\n      return (\n        Math.floor(QrCode.getNumRawDataModules(ver) / 8) -\n        QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver] *\n          QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver]\n      );\n    }\n\n    // Returns a Reed-Solomon ECC generator polynomial for the given degree. This could be\n    // implemented as a lookup table over all possible parameter values, instead of as an algorithm.\n    private static reedSolomonComputeDivisor(degree: int): Array<byte> {\n      if (degree < 1 || degree > 255)\n        throw new RangeError('Degree out of range');\n      // Polynomial coefficients are stored from highest to lowest power, excluding the leading term which is always 1.\n      // For example the polynomial x^3 + 255x^2 + 8x + 93 is stored as the uint8 array [255, 8, 93].\n      let result: Array<byte> = [];\n      for (let i = 0; i < degree - 1; i++) result.push(0);\n      result.push(1); // Start off with the monomial x^0\n\n      // Compute the product polynomial (x - r^0) * (x - r^1) * (x - r^2) * ... * (x - r^{degree-1}),\n      // and drop the highest monomial term which is always 1x^degree.\n      // Note that r = 0x02, which is a generator element of this field GF(2^8/0x11D).\n      let root = 1;\n      for (let i = 0; i < degree; i++) {\n        // Multiply the current product by (x - r^i)\n        for (let j = 0; j < result.length; j++) {\n          result[j] = QrCode.reedSolomonMultiply(result[j], root);\n          if (j + 1 < result.length) result[j] ^= result[j + 1];\n        }\n        root = QrCode.reedSolomonMultiply(root, 0x02);\n      }\n      return result;\n    }\n\n    // Returns the Reed-Solomon error correction codeword for the given data and divisor polynomials.\n    private static reedSolomonComputeRemainder(\n      data: Readonly<Array<byte>>,\n      divisor: Readonly<Array<byte>>\n    ): Array<byte> {\n      let result: Array<byte> = divisor.map((_) => 0);\n      for (const b of data) {\n        // Polynomial division\n        const factor: byte = b ^ (result.shift() as byte);\n        result.push(0);\n        divisor.forEach(\n          (coef, i) => (result[i] ^= QrCode.reedSolomonMultiply(coef, factor))\n        );\n      }\n      return result;\n    }\n\n    // Returns the product of the two given field elements modulo GF(2^8/0x11D). The arguments and result\n    // are unsigned 8-bit integers. This could be implemented as a lookup table of 256*256 entries of uint8.\n    private static reedSolomonMultiply(x: byte, y: byte): byte {\n      if (x >>> 8 != 0 || y >>> 8 != 0)\n        throw new RangeError('Byte out of range');\n      // Russian peasant multiplication\n      let z: int = 0;\n      for (let i = 7; i >= 0; i--) {\n        z = (z << 1) ^ ((z >>> 7) * 0x11d);\n        z ^= ((y >>> i) & 1) * x;\n      }\n      assert(z >>> 8 == 0);\n      return z as byte;\n    }\n\n    // Can only be called immediately after a light run is added, and\n    // returns either 0, 1, or 2. A helper function for getPenaltyScore().\n    private finderPenaltyCountPatterns(runHistory: Readonly<Array<int>>): int {\n      const n: int = runHistory[1];\n      assert(n <= this.size * 3);\n      const core: boolean =\n        n > 0 &&\n        runHistory[2] == n &&\n        runHistory[3] == n * 3 &&\n        runHistory[4] == n &&\n        runHistory[5] == n;\n      return (\n        (core && runHistory[0] >= n * 4 && runHistory[6] >= n ? 1 : 0) +\n        (core && runHistory[6] >= n * 4 && runHistory[0] >= n ? 1 : 0)\n      );\n    }\n\n    // Must be called at the end of a line (row or column) of modules. A helper function for getPenaltyScore().\n    private finderPenaltyTerminateAndCount(\n      currentRunColor: boolean,\n      currentRunLength: int,\n      runHistory: Array<int>\n    ): int {\n      if (currentRunColor) {\n        // Terminate dark run\n        this.finderPenaltyAddHistory(currentRunLength, runHistory);\n        currentRunLength = 0;\n      }\n      currentRunLength += this.size; // Add light border to final run\n      this.finderPenaltyAddHistory(currentRunLength, runHistory);\n      return this.finderPenaltyCountPatterns(runHistory);\n    }\n\n    // Pushes the given value to the front and drops the last value. A helper function for getPenaltyScore().\n    private finderPenaltyAddHistory(\n      currentRunLength: int,\n      runHistory: Array<int>\n    ): void {\n      if (runHistory[0] == 0) currentRunLength += this.size; // Add light border to initial run\n      runHistory.pop();\n      runHistory.unshift(currentRunLength);\n    }\n\n    /*-- Constants and tables --*/\n\n    // The minimum version number supported in the QR Code Model 2 standard.\n    public static readonly MIN_VERSION: int = 1;\n    // The maximum version number supported in the QR Code Model 2 standard.\n    public static readonly MAX_VERSION: int = 40;\n\n    // For use in getPenaltyScore(), when evaluating which mask is best.\n    private static readonly PENALTY_N1: int = 3;\n    private static readonly PENALTY_N2: int = 3;\n    private static readonly PENALTY_N3: int = 40;\n    private static readonly PENALTY_N4: int = 10;\n\n    private static readonly ECC_CODEWORDS_PER_BLOCK: Array<Array<int>> = [\n      // Version: (note that index 0 is for padding, and is set to an illegal value)\n      //0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40    Error correction level\n      [\n        -1, 7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28,\n        30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30,\n        30, 30, 30, 30, 30,\n      ], // Low\n      [\n        -1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28,\n        26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28,\n        28, 28, 28, 28, 28,\n      ], // Medium\n      [\n        -1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28,\n        28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30,\n        30, 30, 30, 30, 30,\n      ], // Quartile\n      [\n        -1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28,\n        28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,\n        30, 30, 30, 30, 30,\n      ], // High\n    ];\n\n    private static readonly NUM_ERROR_CORRECTION_BLOCKS: Array<Array<int>> = [\n      // Version: (note that index 0 is for padding, and is set to an illegal value)\n      //0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40    Error correction level\n      [\n        -1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 6, 6, 6, 6, 7, 8, 8, 9, 9,\n        10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25,\n      ], // Low\n      [\n        -1, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5, 5, 8, 9, 9, 10, 10, 11, 13, 14, 16,\n        17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45,\n        47, 49,\n      ], // Medium\n      [\n        -1, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8, 8, 10, 12, 16, 12, 17, 16, 18, 21, 20,\n        23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62,\n        65, 68,\n      ], // Quartile\n      [\n        -1, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25,\n        25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70,\n        74, 77, 81,\n      ], // High\n    ];\n  }\n\n  // Appends the given number of low-order bits of the given value\n  // to the given buffer. Requires 0 <= len <= 31 and 0 <= val < 2^len.\n  function appendBits(val: int, len: int, bb: Array<bit>): void {\n    if (len < 0 || len > 31 || val >>> len != 0)\n      throw new RangeError('Value out of range');\n    for (\n      let i = len - 1;\n      i >= 0;\n      i-- // Append bit by bit\n    )\n      bb.push((val >>> i) & 1);\n  }\n\n  // Returns true iff the i'th bit of x is set to 1.\n  function getBit(x: int, i: int): boolean {\n    return ((x >>> i) & 1) != 0;\n  }\n\n  // Throws an exception if the given condition is false.\n  function assert(cond: boolean): void {\n    if (!cond) throw new Error('Assertion error');\n  }\n\n  /*---- Data segment class ----*/\n\n  /*\n   * A segment of character/binary/control data in a QR Code symbol.\n   * Instances of this class are immutable.\n   * The mid-level way to create a segment is to take the payload data\n   * and call a static factory function such as QrSegment.makeNumeric().\n   * The low-level way to create a segment is to custom-make the bit buffer\n   * and call the QrSegment() constructor with appropriate values.\n   * This segment class imposes no length restrictions, but QR Codes have restrictions.\n   * Even in the most favorable conditions, a QR Code can only hold 7089 characters of data.\n   * Any segment longer than this is meaningless for the purpose of generating QR Codes.\n   */\n  export class QrSegment {\n    /*-- Static factory functions (mid level) --*/\n\n    // Returns a segment representing the given binary data encoded in\n    // byte mode. All input byte arrays are acceptable. Any text string\n    // can be converted to UTF-8 bytes and encoded as a byte mode segment.\n    public static makeBytes(data: Readonly<Array<byte>>): QrSegment {\n      let bb: Array<bit> = [];\n      for (const b of data) appendBits(b, 8, bb);\n      return new QrSegment(QrSegment.Mode.BYTE, data.length, bb);\n    }\n\n    // Returns a segment representing the given string of decimal digits encoded in numeric mode.\n    public static makeNumeric(digits: string): QrSegment {\n      if (!QrSegment.isNumeric(digits))\n        throw new RangeError('String contains non-numeric characters');\n      let bb: Array<bit> = [];\n      for (let i = 0; i < digits.length; ) {\n        // Consume up to 3 digits per iteration\n        const n: int = Math.min(digits.length - i, 3);\n        appendBits(parseInt(digits.substring(i, i + n), 10), n * 3 + 1, bb);\n        i += n;\n      }\n      return new QrSegment(QrSegment.Mode.NUMERIC, digits.length, bb);\n    }\n\n    // Returns a segment representing the given text string encoded in alphanumeric mode.\n    // The characters allowed are: 0 to 9, A to Z (uppercase only), space,\n    // dollar, percent, asterisk, plus, hyphen, period, slash, colon.\n    public static makeAlphanumeric(text: string): QrSegment {\n      if (!QrSegment.isAlphanumeric(text))\n        throw new RangeError(\n          'String contains unencodable characters in alphanumeric mode'\n        );\n      let bb: Array<bit> = [];\n      let i: int;\n      for (i = 0; i + 2 <= text.length; i += 2) {\n        // Process groups of 2\n        let temp: int =\n          QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)) * 45;\n        temp += QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i + 1));\n        appendBits(temp, 11, bb);\n      }\n      if (i < text.length)\n        // 1 character remaining\n        appendBits(\n          QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)),\n          6,\n          bb\n        );\n      return new QrSegment(QrSegment.Mode.ALPHANUMERIC, text.length, bb);\n    }\n\n    // Returns a new mutable list of zero or more segments to represent the given Unicode text string.\n    // The result may use various segment modes and switch modes to optimize the length of the bit stream.\n    public static makeSegments(text: string): Array<QrSegment> {\n      // Select the most efficient segment encoding automatically\n      if (text == '') return [];\n      else if (QrSegment.isNumeric(text)) return [QrSegment.makeNumeric(text)];\n      else if (QrSegment.isAlphanumeric(text))\n        return [QrSegment.makeAlphanumeric(text)];\n      else return [QrSegment.makeBytes(QrSegment.toUtf8ByteArray(text))];\n    }\n\n    // Returns a segment representing an Extended Channel Interpretation\n    // (ECI) designator with the given assignment value.\n    public static makeEci(assignVal: int): QrSegment {\n      let bb: Array<bit> = [];\n      if (assignVal < 0)\n        throw new RangeError('ECI assignment value out of range');\n      else if (assignVal < 1 << 7) appendBits(assignVal, 8, bb);\n      else if (assignVal < 1 << 14) {\n        appendBits(0b10, 2, bb);\n        appendBits(assignVal, 14, bb);\n      } else if (assignVal < 1000000) {\n        appendBits(0b110, 3, bb);\n        appendBits(assignVal, 21, bb);\n      } else throw new RangeError('ECI assignment value out of range');\n      return new QrSegment(QrSegment.Mode.ECI, 0, bb);\n    }\n\n    // Tests whether the given string can be encoded as a segment in numeric mode.\n    // A string is encodable iff each character is in the range 0 to 9.\n    public static isNumeric(text: string): boolean {\n      return QrSegment.NUMERIC_REGEX.test(text);\n    }\n\n    // Tests whether the given string can be encoded as a segment in alphanumeric mode.\n    // A string is encodable iff each character is in the following set: 0 to 9, A to Z\n    // (uppercase only), space, dollar, percent, asterisk, plus, hyphen, period, slash, colon.\n    public static isAlphanumeric(text: string): boolean {\n      return QrSegment.ALPHANUMERIC_REGEX.test(text);\n    }\n\n    /*-- Constructor (low level) and fields --*/\n\n    // Creates a new QR Code segment with the given attributes and data.\n    // The character count (numChars) must agree with the mode and the bit buffer length,\n    // but the constraint isn't checked. The given bit buffer is cloned and stored.\n    public constructor(\n      // The mode indicator of this segment.\n      public readonly mode: QrSegment.Mode,\n\n      // The length of this segment's unencoded data. Measured in characters for\n      // numeric/alphanumeric/kanji mode, bytes for byte mode, and 0 for ECI mode.\n      // Always zero or positive. Not the same as the data's bit length.\n      public readonly numChars: int,\n\n      // The data bits of this segment. Accessed through getData().\n      private readonly bitData: Array<bit>\n    ) {\n      if (numChars < 0) throw new RangeError('Invalid argument');\n      this.bitData = bitData.slice(); // Make defensive copy\n    }\n\n    /*-- Methods --*/\n\n    // Returns a new copy of the data bits of this segment.\n    public getData(): Array<bit> {\n      return this.bitData.slice(); // Make defensive copy\n    }\n\n    // (Package-private) Calculates and returns the number of bits needed to encode the given segments at\n    // the given version. The result is infinity if a segment has too many characters to fit its length field.\n    public static getTotalBits(\n      segs: Readonly<Array<QrSegment>>,\n      version: int\n    ): number {\n      let result: number = 0;\n      for (const seg of segs) {\n        const ccbits: int = seg.mode.numCharCountBits(version);\n        if (seg.numChars >= 1 << ccbits) return Infinity; // The segment's length doesn't fit the field's bit width\n        result += 4 + ccbits + seg.bitData.length;\n      }\n      return result;\n    }\n\n    // Returns a new array of bytes representing the given string encoded in UTF-8.\n    private static toUtf8ByteArray(str: string): Array<byte> {\n      str = encodeURI(str);\n      let result: Array<byte> = [];\n      for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) != '%') result.push(str.charCodeAt(i));\n        else {\n          result.push(parseInt(str.substring(i + 1, i + 3), 16));\n          i += 2;\n        }\n      }\n      return result;\n    }\n\n    /*-- Constants --*/\n\n    // Describes precisely all strings that are encodable in numeric mode.\n    private static readonly NUMERIC_REGEX: RegExp = /^[0-9]*$/;\n\n    // Describes precisely all strings that are encodable in alphanumeric mode.\n    private static readonly ALPHANUMERIC_REGEX: RegExp =\n      /^[A-Z0-9 $%*+.\\/:-]*$/;\n\n    // The set of all legal characters in alphanumeric mode,\n    // where each character value maps to the index in the string.\n    private static readonly ALPHANUMERIC_CHARSET: string =\n      '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:';\n  }\n}\n\n/*---- Public helper enumeration ----*/\n\nnamespace qrcodegen.QrCode {\n  type int = number;\n\n  /*\n   * The error correction level in a QR Code symbol. Immutable.\n   */\n  export class Ecc {\n    /*-- Constants --*/\n\n    public static readonly LOW = new Ecc(0, 1); // The QR Code can tolerate about  7% erroneous codewords\n    public static readonly MEDIUM = new Ecc(1, 0); // The QR Code can tolerate about 15% erroneous codewords\n    public static readonly QUARTILE = new Ecc(2, 3); // The QR Code can tolerate about 25% erroneous codewords\n    public static readonly HIGH = new Ecc(3, 2); // The QR Code can tolerate about 30% erroneous codewords\n\n    /*-- Constructor and fields --*/\n\n    private constructor(\n      // In the range 0 to 3 (unsigned 2-bit integer).\n      public readonly ordinal: int,\n      // (Package-private) In the range 0 to 3 (unsigned 2-bit integer).\n      public readonly formatBits: int\n    ) {}\n  }\n}\n\n/*---- Public helper enumeration ----*/\n\nnamespace qrcodegen.QrSegment {\n  type int = number;\n\n  /*\n   * Describes how a segment's data bits are interpreted. Immutable.\n   */\n  export class Mode {\n    /*-- Constants --*/\n\n    public static readonly NUMERIC = new Mode(0x1, [10, 12, 14]);\n    public static readonly ALPHANUMERIC = new Mode(0x2, [9, 11, 13]);\n    public static readonly BYTE = new Mode(0x4, [8, 16, 16]);\n    public static readonly KANJI = new Mode(0x8, [8, 10, 12]);\n    public static readonly ECI = new Mode(0x7, [0, 0, 0]);\n\n    /*-- Constructor and fields --*/\n\n    private constructor(\n      // The mode indicator bits, which is a uint4 value (range 0 to 15).\n      public readonly modeBits: int,\n      // Number of character count bits for three different version ranges.\n      private readonly numBitsCharCount: [int, int, int]\n    ) {}\n\n    /*-- Method --*/\n\n    // (Package-private) Returns the bit width of the character count field for a segment in\n    // this mode in a QR Code at the given version number. The result is in the range [0, 16].\n    public numCharCountBits(ver: int): int {\n      return this.numBitsCharCount[Math.floor((ver + 7) / 17)];\n    }\n  }\n}\n\nconst QRC = qrcodegen.QrCode;\n\nfunction toSvgString(qr: qrcodegen.QrCode, border: number): string {\n  if (border < 0) throw new RangeError('Border must be non-negative');\n  let parts: Array<string> = [];\n  for (let y = 0; y < qr.size; y++) {\n    for (let x = 0; x < qr.size; x++) {\n      if (qr.getModule(x, y))\n        parts.push(`M${x + border},${y + border}h1v1h-1z`);\n    }\n  }\n  return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 ${\n    qr.size + border * 2\n  } ${qr.size + border * 2}\" stroke=\"none\">\n<path d=\"${parts.join(' ')}\"/>\n</svg>\n`;\n}\n\nexport { QRC, toSvgString };\n","import * as css from './qr-code.module.scss';\n\nimport { component, h, templateFn } from 'spred-dom';\nimport { QRC, toSvgString } from '../../../../vendor/qrcode';\nimport { computed, on, writable } from 'spred';\n\ninterface QRCodeProps {\n  text: () => string;\n}\n\nexport const QRCode = component(({ text }: QRCodeProps) => {\n  const container = writable<HTMLDivElement>();\n  const textSignal = computed(text);\n  const comboSignal = computed(() => [container(), textSignal()] as const);\n\n  on(comboSignal, (tuple) => {\n    const qr = QRC.encodeText(tuple[1], QRC.Ecc.MEDIUM);\n    const svg = toSvgString(qr, 0);\n\n    tuple[0]!.innerHTML = svg;\n  });\n\n  return h('div', { class: css.qrCode, ref: container });\n});\n\nexport const qrCode = templateFn(QRCode);\n","@import 'src/client/view/style/constants.scss';\n\n.qrCode {\n  display: block;\n  width: 100%;\n  font-size: 0;\n}\n\n.qrCode svg {\n  fill: $c-secondary;\n  display: block;\n  width: 100%;\n}\n","import * as css from './players-list.module.scss';\n\nimport { component, h, templateFn } from 'spred-dom';\nimport { Player } from '../../../../common/player';\nimport { computed } from 'spred';\n\ninterface PlayersListProps {\n  players: () => Player[];\n}\n\nexport const PlayersList = component(({ players }: PlayersListProps) => {\n  const hasNoPlayers = computed(() => !players().length);\n\n  const text = computed(() => {\n    if (hasNoPlayers()) return 'Пока что никто не\\u00A0подключился';\n    return players()\n      .map((player) => player.name)\n      .join(', ');\n  });\n\n  return h(\n    'div',\n    {\n      class: {\n        [css.playersList]: true,\n        [css.noPlayers]: hasNoPlayers,\n      },\n      text,\n    },\n    () => {}\n  );\n});\n\nexport const playersList = templateFn(PlayersList);\n","import * as css from './button.module.scss';\n\nimport { component, h, templateFn } from 'spred-dom';\n\ninterface ButtonProps {\n  text: () => string;\n  disabled?: () => boolean;\n  onСlick?: (e: MouseEvent) => any;\n  className?: () => string;\n}\n\ninterface ButtonLinkProps extends ButtonProps {\n  href: () => string;\n}\n\nexport const ButtonLink = component(\n  ({ href, text, disabled, onСlick: onclick }: ButtonLinkProps) => {\n    return h('a', {\n      onclick,\n      href,\n      text,\n      class: {\n        [css.button]: true,\n        [css.disabled]: disabled,\n      },\n    });\n  }\n);\n\nexport const buttonLink = templateFn(ButtonLink);\n\nexport const Button = component((props: ButtonProps) => {\n  const { text, disabled, onСlick, className } = props;\n\n  return h('button', {\n    onclick: onСlick,\n    text,\n    class: [\n      {\n        [css.button]: true,\n        [css.disabled]: disabled,\n      },\n      className,\n    ],\n  });\n});\n\nexport const button = templateFn(Button);\n","import * as css from './host-lobby.module.scss';\n\nimport { component, h } from 'spred-dom';\nimport { qrCode } from '../qr-code/qr-code';\nimport { HostController } from '../../../model/host-controller';\nimport { playersList } from '../players-list/players-list';\nimport { button } from '../button/button';\n\nexport const HostLobby = component((controller: HostController) => {\n  return h(() => {\n    h('h1', { text: 'Ожидаем Игроков' });\n\n    h('div', { class: css.rowWrap }, () => {\n      h('div', { class: css.row }, () => {\n        h('div', { class: [css.qrc, css.col] }, () => {\n          qrCode({ text: controller.playLink });\n        });\n\n        h('div', { class: [css.col, css.infoCol] }, () => {\n          playersList({ players: controller.playersList });\n\n          h('div', { class: css.buttonWrap }, () => {\n            button({\n              text: () =>\n                controller.pending() ? 'Начинаем...' : 'Начать Игру',\n              disabled: () =>\n                controller.gameStartBlocked() || controller.pending(),\n              onСlick: () => controller.startGame(),\n            });\n          });\n        });\n      });\n    });\n  });\n});\n","@import 'src/client/view/style/constants.scss';\n\n.rowWrap {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex-grow: 1;\n}\n\n.row {\n  display: flex;\n  flex-direction: row;\n  margin-left: -4vh;\n  margin-right: -4vh;\n  flex-shrink: 0;\n  flex-basis: content;\n}\n\n.col {\n  padding-left: 4vh;\n  padding-right: 4vh;\n}\n\n.qrc {\n  flex-basis: 50%;\n  flex-shrink: 0;\n}\n\n.infoCol {\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.buttonWrap {\n  padding-top: 4vh;\n  text-align: center;\n\n  button {\n    width: 100%;\n  }\n}\n","import * as css from './loading-screen.module.scss';\n\nimport { component, h } from 'spred-dom';\n\nexport const LoadingScreen = component((text?: () => string) =>\n  h('div', { class: css.loading }, () => {\n    h('h1', () => {\n      h('span', { text: () => (text ? text() : 'Загрузка') });\n      h('span', { class: css.dots }, () => {\n        h('span', { class: css.dot1, text: '.' });\n        h('span', { class: css.dot2, text: '.' });\n        h('span', { class: css.dot3, text: '.' });\n      });\n    });\n  })\n);\n",".loading {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n\n  h1 {\n    margin: 0;\n  }\n}\n\n.dots {\n  position: absolute;\n}\n\n.dot1 {\n  animation: 2s infinite dot1;\n}\n\n.dot2 {\n  animation: 2s infinite dot2;\n}\n\n.dot3 {\n  animation: 2s infinite dot3;\n}\n\n@keyframes dot1 {\n  0% {\n    opacity: 0;\n  }\n  33% {\n    opacity: 1;\n  }\n}\n\n@keyframes dot2 {\n  0% {\n    opacity: 0;\n  }\n  33% {\n    opacity: 0;\n  }\n  66% {\n    opacity: 1;\n  }\n}\n\n@keyframes dot3 {\n  0% {\n    opacity: 0;\n  }\n  33% {\n    opacity: 0;\n  }\n  66% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n","import * as css from './stage-status.module.scss';\n\nimport { component, h, templateFn } from 'spred-dom';\n\nexport const StageStatus = component((statusString: () => string) =>\n  h('div', { class: css.stageStatus, text: statusString })\n);\n\nexport const stageStatus = templateFn(StageStatus);\n","@import 'src/client/view/style/constants.scss';\n\n.stageStatus {\n  margin-top: 3vh;\n  min-height: 5vh;\n  font-size: 5vh;\n  line-height: 5vh;\n  text-align: center;\n}\n","import * as css from './host-question.module.scss';\n\nimport { component, h } from 'spred-dom';\nimport { HostController } from '../../../model/host-controller';\nimport { stageStatus } from '../stage-status/stage-status';\n\nexport const HostQuestion = component((controller: HostController) => {\n  return h(() => {\n    h('h1', { text: () => 'Раунд ' + controller.round() });\n\n    h('div', { class: css.captionWrap }, () => {\n      h('p', {\n        class: css.caption,\n        text: controller.caption,\n      });\n    });\n\n    stageStatus(() =>\n      controller\n        .playersList()\n        .filter((player) => player.done)\n        .map(() => '💡')\n        .join(' ')\n    );\n  });\n});\n","@import 'src/client/view/style/constants.scss';\n\n.caption {\n  margin: 0;\n  font-size: 7vh;\n  text-align: center;\n}\n\n.captionWrap {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex-grow: 1;\n}\n","import * as css from './host-vote.module.scss';\n\nimport { component, h } from 'spred-dom';\nimport { HostController } from '../../../model/host-controller';\nimport { stageStatus } from '../stage-status/stage-status';\n\nexport const HostVote = component((controller: HostController) => {\n  return h(() => {\n    h('h1', { text: 'Голосование' });\n\n    h('div', { class: css.card }, () => {\n      h('div', {\n        class: css.img,\n        attrs: {\n          style: () =>\n            `background-image: url(\"/img/${controller.votedCard()}.jpg\")`,\n        },\n      });\n\n      h('p', {\n        class: css.caption,\n        text: 'Когда пишешь классную игру для себя и друзей',\n      });\n    });\n\n    stageStatus(() =>\n      controller\n        .votes()\n        .map((vote) => {\n          switch (vote.score) {\n            case 0:\n              return '😐';\n            case 1:\n              return '😁';\n            case 2:\n              return '🤣';\n          }\n        })\n        .join(' ')\n    );\n  });\n});\n","@import 'src/client/view/style/constants.scss';\n\n.card {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex-grow: 1;\n}\n\n.img {\n  height: 100%;\n  flex-shrink: 1;\n  background-position: center center;\n  background-size: contain;\n  background-repeat: no-repeat;\n}\n\n.caption {\n  text-align: center;\n  margin-bottom: 0;\n  margin-top: 3vh;\n  font-size: 3vh;\n}\n","export enum PlayerStatus {\n  Online = 'ONLINE',\n  Offline = 'OFFLINE',\n  Pending = 'PENDING',\n}\n","import * as css from './results-table.module.scss';\n\nimport { computed } from 'spred';\nimport { component, h, list, templateFn } from 'spred-dom';\nimport { Player } from '../../../../common/player';\nimport { PlayerStatus } from '../../../../common/player-status';\n\nconst TableRow = component((player: Player) => {\n  const emoji = () => {\n    switch (player.status) {\n      case PlayerStatus.Offline:\n        return '👻';\n      case PlayerStatus.Pending:\n        return '⏳';\n      default:\n        return player.done ? '✔' : '';\n    }\n  };\n\n  return h('tr', () => {\n    h('td', { text: () => `${player.name} ${emoji()}` });\n    h('td', { text: () => player.score + '' });\n  });\n});\n\nexport const ResultsTable = component((players: () => Player[]) => {\n  const sortedPlayers = computed(() => {\n    const res = players().slice();\n\n    res.sort((a, b) => b.score - a.score);\n    return res;\n  });\n\n  return h('table', { class: css.resultsTable }, () => {\n    list(sortedPlayers, TableRow);\n  });\n});\n\nexport const resultsTable = templateFn(ResultsTable);\n","@import 'src/client/view/style/constants.scss';\n\n.resultsTable {\n  border-collapse: collapse;\n  width: 100%;\n  font-size: 20px;\n\n  @media ($wide) {\n    font-size: 4vh;\n  }\n\n  tr:nth-child(2n - 1) {\n    background: $c-background-dark;\n  }\n\n  td {\n    padding: 8px 16px;\n\n    @media ($wide) {\n      padding: 1vh 3vh;\n    }\n\n    text-align: left;\n\n    &:last-child {\n      text-align: right;\n    }\n  }\n}\n","import * as css from './host-results.module.scss';\n\nimport { component, h } from 'spred-dom';\nimport { HostController } from '../../../model/host-controller';\nimport { resultsTable } from '../results-table/results-table';\n\nexport const HostResults = component((controller: HostController) => {\n  return h(() => {\n    h('h1', { text: 'Результаты' });\n\n    h('div', { class: css.tableWrap }, () => {\n      resultsTable(controller.playersList);\n    });\n  });\n});\n","@import 'src/client/view/style/constants.scss';\n\n.tableWrap {\n  table {\n    margin: 0 auto;\n    max-width: 100vh;\n    width: 100%;\n  }\n}\n","import * as css from './host-view.module.scss';\n\nimport { component, h, node } from 'spred-dom';\nimport { computed } from 'spred';\nimport { HostController } from '../../../model/host-controller';\nimport { roomId } from '../../../model/routing';\nimport { HostLobby } from '../host-lobby/host-lobby';\nimport { LoadingScreen } from '../loading-screen/loading-screen';\nimport { GameStage } from '../../../../common/game-stage';\nimport { HostQuestion } from '../host-question/host-question';\nimport { HostVote } from '../host-vote/host-vote';\nimport { HostResults } from '../host-results/host-results';\n\nexport const HostView = component(() => {\n  const controllerSignal = computed(() => new HostController(roomId()));\n\n  return h('div', { class: css.container }, () => {\n    node(() => {\n      const controller = controllerSignal();\n\n      if (controller.loading()) {\n        return LoadingScreen();\n      }\n\n      switch (controller.stage()) {\n        case GameStage.Lobby:\n          return HostLobby(controller);\n\n        case GameStage.Question:\n          return HostQuestion(controller);\n\n        case GameStage.Vote:\n          return HostVote(controller);\n\n        case GameStage.Results:\n          return HostResults(controller);\n      }\n    });\n  });\n});\n","@import 'src/client/view/style/constants.scss';\n\n.container {\n  display: block;\n  margin: 0 auto;\n  width: 100%;\n  height: 100%;\n\n  @media ($wide) {\n    padding: 6vh;\n    max-width: 150vh;\n  }\n\n  display: flex;\n  flex-direction: column;\n}\n","import * as css from './logo.module.scss';\n\nimport { component, h, templateFn } from 'spred-dom';\n\nconst Logo = component(() =>\n  h('h1', { class: css.logo }, () => {\n    h('span', { class: css.top }, () => {\n      h('span', { text: 'С' });\n      h('span', { text: 'О' });\n      h('span', { text: 'Б' });\n      h('span', { text: 'Е' });\n      h('span', { text: 'Р' });\n      h('span', { text: 'И' });\n    });\n    h('span', { class: css.bottom }, () => {\n      h('span', { text: 'М' });\n      h('span', { text: 'Е' });\n      h('span', { text: 'М' });\n    });\n  })\n);\n\nconst logo = templateFn(Logo);\n\nexport { Logo, logo };\n","@import '../../style/constants.scss';\n\n.logo {\n  margin: 0;\n  text-transform: uppercase;\n  width: 300px;\n\n  @media ($wide) {\n    width: 92vmin;\n  }\n}\n\n.top {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  color: $c-primary;\n  font-size: 50px;\n  line-height: 1.1;\n  margin: 0 0.1em;\n\n  @media ($wide) {\n    font-size: 15vmin;\n  }\n}\n\n.bottom {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  color: $c-secondary;\n  font-size: 115px;\n  line-height: 0.8;\n\n  @media ($wide) {\n    font-size: 35vmin;\n  }\n}\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { nanoid } from 'nanoid';\nimport { component, h, templateFn } from 'spred-dom';\nimport { buttonLink } from '../button/button';\n\nconst StartLink = component(() => {\n  const url = '#host/' + nanoid();\n\n  return h(() =>\n    buttonLink({\n      href: () => url,\n      text: () => 'Создать Комнату',\n    })\n  );\n});\n\nconst startLink = templateFn(StartLink);\n\nexport { StartLink, startLink };\n","import * as css from './main-view.module.scss';\n\nimport { component, h } from 'spred-dom';\nimport { logo } from '../logo/logo';\nimport { startLink } from '../start-link/start-link';\n\nexport const MainView = component(() =>\n  h('div', { class: css.container }, () => {\n    logo();\n\n    h('div', { class: css.menu }, () => {\n      startLink();\n    });\n  })\n);\n","@import 'src/client/view/style/constants.scss';\n\n.container {\n  height: 100vh;\n  display: flex;\n  text-align: center;\n  margin: 0 auto;\n  width: 80%;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  margin-top: -2vh;\n\n  @media ($wide) {\n    margin-top: 0;\n  }\n}\n\n.menu {\n  margin-top: 32px;\n\n  @media ($wide) {\n    margin-top: 8vh;\n  }\n}\n","import { batch, computed } from 'spred';\nimport { Action } from '../../common/action';\nimport { ClientType } from '../../common/client-type';\nimport { GameStage } from '../../common/game-stage';\nimport { GameController } from './game-controller';\n\nexport class PlayerController extends GameController {\n  private readonly answers = this._state.select('answers');\n  private readonly players = this._state.select('players');\n\n  public readonly player = computed(() => this.state().players[this.playerId]);\n  public readonly cards = computed(() => this.player().cards);\n  public readonly selectedCard = computed(() => {\n    const answer = this.answers().find((a) => a.playerId === this.player().id);\n    return answer ? answer.card : '';\n  });\n  public readonly playerVote = computed(() => {\n    return this.votes().find((vote) => vote.playerId === this.playerId) || null;\n  });\n\n  constructor(roomId: string, playerId: string, playerName: string) {\n    super(ClientType.Player, roomId, playerId, playerName);\n  }\n\n  public answer(card: string) {\n    const state = this.state();\n    if (\n      !state ||\n      state.error ||\n      state.stage !== GameStage.Question ||\n      !this.player().cards.includes(card)\n    )\n      return;\n\n    batch(() => {\n      const answerIndex = this.state().answers.findIndex(\n        (answer) => answer.playerId === this.playerId\n      );\n\n      this._state.select('answers').update((answers) => {\n        const answer = {\n          playerId: this.playerId,\n          card,\n          votes: [],\n        };\n\n        if (answerIndex > -1) answers[answerIndex] = answer;\n        else answers.push(answer);\n      });\n\n      this.makePlayerDone();\n    });\n\n    this.emitPlayerData(card);\n  }\n\n  public vote(score: 0 | 1 | 2) {\n    const state = this.state();\n    if (!state || state.error || state.stage !== GameStage.Vote) return;\n\n    batch(() => {\n      const answerIndex = this.state().answerIndex;\n      const answer = this.state().answers[answerIndex];\n\n      if (!answer || answer.playerId === this.playerId) return;\n\n      const voteIndex = answer.votes.findIndex(\n        (vote) => vote.playerId === this.playerId\n      );\n\n      this.answers.select(answerIndex).update('votes', (votes) => {\n        const vote = {\n          playerId: this.playerId,\n          score,\n        };\n\n        if (voteIndex > -1) votes[voteIndex] = vote;\n        else votes.push(vote);\n      });\n\n      this.makePlayerDone();\n    });\n\n    this.emitPlayerData(score);\n  }\n\n  public ready() {\n    const state = this.state();\n    if (!state || state.error || state.stage !== GameStage.Results) return;\n\n    this.makePlayerDone();\n    this.emitPlayerData();\n  }\n\n  private emitPlayerData(payload?: any) {\n    this.emit(Action.PlayerData, payload);\n  }\n\n  private makePlayerDone() {\n    this.players.update(this.playerId, (player) => {\n      player.done = true;\n    });\n  }\n}\n","import { computed, writable } from 'spred';\n\nexport function withLocalStorage(key: string, getInitialValue: () => string) {\n  let value = '';\n\n  try {\n    value = localStorage.getItem(key) || getInitialValue();\n  } catch {\n    value = getInitialValue();\n  }\n\n  const signal = writable(value);\n  const derived = computed(signal);\n\n  derived.subscribe((value) => {\n    try {\n      localStorage.setItem(key, value);\n    } catch {}\n  });\n\n  return signal;\n}\n","import * as css from './input.module.scss';\n\nimport { component, h, templateFn } from 'spred-dom';\nimport { WritableSignal } from 'spred';\n\ninterface InputProps {\n  label?: () => string;\n  placeholder?: () => string;\n  model?: WritableSignal<string>;\n}\n\nexport const Input = component((props: InputProps) => {\n  const { label, placeholder, model } = props;\n\n  return h('label', { class: css.wrap }, () => {\n    h('span', { text: label, class: css.label });\n    h('input', {\n      type: 'text',\n      class: css.input,\n      placeholder: placeholder || '',\n      value: model || '',\n      oninput: model && ((e: any) => model(e.target.value)),\n    });\n  });\n});\n\nexport const input = templateFn(Input);\n","@import 'src/client/view/style/constants.scss';\n\n.wrap {\n  display: block;\n}\n\n.label {\n  display: block;\n  font-size: 14px;\n  margin-bottom: 8px;\n  color: $c-foreground-light;\n}\n\n.input {\n  width: 100%;\n  background-color: $c-background;\n  border-radius: 6px;\n  border-color: $c-foreground-light;\n  border-width: 2px;\n  height: 44px;\n  padding: 4px 8px;\n  color: $c-foreground;\n  outline: none;\n  box-shadow: none;\n  border-style: solid;\n  margin: 0;\n  transition: border-color 0.1s ease-in-out, opacity 0.1s ease-in-out;\n\n  &::placeholder {\n    opacity: 0.5;\n    color: $c-foreground-light;\n  }\n\n  &:focus {\n    outline: none;\n    border-color: $c-primary;\n  }\n}\n","import * as css from './player-login.module.scss';\n\nimport { component, h } from 'spred-dom';\nimport { nanoid } from 'nanoid';\nimport { withLocalStorage } from '../../../lib/with-local-storage';\nimport { input } from '../input/input';\nimport { button } from '../button/button';\nimport { writable } from 'spred';\n\ninterface PlayerLoginProps {\n  onLogin: (opts: { name: string; id: string }) => any;\n}\n\nexport const PlayerLogin = component(({ onLogin }: PlayerLoginProps) => {\n  const playerId = withLocalStorage('PLAYER_ID', nanoid);\n  const playerName = withLocalStorage('PLAYER_NAME', () => '');\n\n  return h('div', { class: css.login }, () => {\n    input({\n      label: () => 'Как тебя зовут?',\n      placeholder: () => 'Введи свое имя',\n      model: playerName,\n    });\n\n    button({\n      text: () => 'Присоединиться',\n      className: () => css.button,\n      disabled: () => !playerName().length,\n      onСlick: () => {\n        onLogin({\n          name: playerName(),\n          id: playerId(),\n        });\n      },\n    });\n  });\n});\n","@import 'src/client/view/style/constants.scss';\n\n.login {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\n.button {\n  margin-top: 16px;\n}\n","export const CARDS_PER_PLAYER = 5;\n","import * as css from './player-question.module.scss';\n\nimport { component, h, list } from 'spred-dom';\nimport { PlayerController } from '../../../model/player-controller';\nimport { batch, computed, writable, WritableSignal } from 'spred';\nimport { CARDS_PER_PLAYER } from '../../../../common/constants';\nimport { withLocalStorage } from '../../../lib/with-local-storage';\n\nconst DOUBLETAP_DURATION = 500;\nconst SWIPE_DURATION = 200;\nconst MIN_OFFSET = 30;\n\nconst Picture = component((props: { id: string; selected: () => boolean }) => {\n  return h(\n    'div',\n    {\n      class: {\n        [css.picture]: true,\n        [css.selected]: props.selected,\n      },\n      attrs: {\n        style: () => `background-image: url(\"/img/${props.id}.jpg\")`,\n      },\n    },\n    () => h('div', { class: css.overlay })\n  );\n});\n\nexport const PlayerQuestion = component((controller: PlayerController) => {\n  const currentIndexSource = withLocalStorage(\n    'CARD_INDEX',\n    () => '0'\n  ) as WritableSignal<number | string>;\n\n  const currentIndex = computed(() => +currentIndexSource());\n  const next = writable(0);\n\n  const displayed = computed(() => {\n    const cur =\n      (CARDS_PER_PLAYER + (currentIndex() % CARDS_PER_PLAYER)) %\n      CARDS_PER_PLAYER;\n    const prev = (CARDS_PER_PLAYER + cur - 1) % CARDS_PER_PLAYER;\n    const next = (cur + 1) % CARDS_PER_PLAYER;\n    const cards = controller.cards();\n\n    return [cards[next], cards[cur], cards[prev]];\n  });\n\n  const currentCard = computed(() => displayed()[1]);\n\n  const lastTapTimestamp = writable(0);\n  const noTransition = writable(false);\n  const touchActive = writable(false);\n  const touchStart = writable(0);\n  const touchEnd = writable(0);\n\n  const offset = computed(() => touchEnd() - touchStart());\n  const style = computed(() => {\n    const transition = `transition: transform ${SWIPE_DURATION}ms ease-in-out`;\n\n    if (noTransition()) return null;\n    if (next() === -1) return `transform: translateX(-100vw); ${transition}`;\n    if (next() === 1) return `transform: translateX(100vw); ${transition}`;\n\n    return touchActive() ? `transform: translateX(${offset()}px)` : transition;\n  });\n\n  function start(e: TouchEvent) {\n    const ts = Date.now();\n\n    if (ts - lastTapTimestamp() < DOUBLETAP_DURATION) {\n      controller.answer(currentCard());\n    }\n\n    lastTapTimestamp(ts);\n\n    if (next()) return;\n\n    touchActive(true);\n    touchStart(e.touches[0].clientX);\n    touchEnd(e.touches[0].clientX);\n  }\n\n  function move(e: TouchEvent) {\n    touchEnd(e.touches[0].clientX);\n  }\n\n  function end() {\n    batch(() => {\n      touchActive(false);\n      if (Math.abs(offset()) < MIN_OFFSET) return;\n      if (offset() < 0) next(-1);\n      if (offset() > 0) next(1);\n    });\n\n    setTimeout(() => {\n      batch(() => {\n        currentIndexSource(currentIndex() + next());\n        next(0);\n        noTransition(true);\n        setTimeout(() => noTransition(false), 30);\n      });\n    }, SWIPE_DURATION);\n  }\n\n  return h(\n    'div',\n    {\n      class: css.container,\n      ontouchstart: start,\n      ontouchmove: move,\n      ontouchend: end,\n      ontouchcancel: end,\n      ondblclick: () => {\n        controller.answer(currentCard());\n      },\n    },\n    () => {\n      h(\n        'div',\n        {\n          class: css.pictures,\n          attrs: { style },\n        },\n        () => {\n          list(displayed, (id) =>\n            Picture({\n              id,\n              selected: () => controller.selectedCard() === id,\n            })\n          );\n        }\n      );\n    }\n  );\n});\n","@import 'src/client/view/style/constants.scss';\n\n.container {\n  margin: 0 -16px;\n  height: 100%;\n  overflow: hidden;\n}\n\n.pictures {\n  width: 300vw;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  left: -100vw;\n  transform: translateX(0);\n}\n\n.picture {\n  width: 100vw;\n  height: 100%;\n  background-position: center center;\n  background-size: contain;\n  background-repeat: no-repeat;\n\n  &.selected .overlay {\n    opacity: 1;\n  }\n}\n\n.overlay {\n  position: relative;\n  background-color: transparentize($c-background, 0.2);\n  height: 100%;\n  transition: opacity 0.2s ease-in-out;\n  opacity: 0;\n\n  &:after {\n    content: '';\n    box-sizing: border-box;\n    display: block;\n    width: 128px;\n    height: 80px;\n    position: absolute;\n    border-left: 32px solid $c-primary;\n    border-bottom: 32px solid $c-primary;\n    transform: rotate(-45deg) translateX(-25%) translateY(-50%);\n    left: 50%;\n    top: 43%;\n  }\n}\n","import * as css from './player-vote.module.scss';\n\nimport { component, h } from 'spred-dom';\nimport { PlayerController } from '../../../model/player-controller';\n\nexport const PlayerVote = component((controller: PlayerController) => {\n  const vote = controller.playerVote;\n\n  return h('div', { class: css.container }, () => {\n    h('div', { class: css.buttons }, () => {\n      h('button', {\n        class: {\n          [css.button]: true,\n          [css.selected]: () => vote() && vote()!.score === 0,\n        },\n        onclick: () => controller.vote(0),\n        text: '😐',\n      });\n      h('button', {\n        class: {\n          [css.button]: true,\n          [css.selected]: () => vote() && vote()!.score === 1,\n        },\n        onclick: () => controller.vote(1),\n        text: '😁',\n      });\n      h('button', {\n        class: {\n          [css.button]: true,\n          [css.selected]: () => vote() && vote()!.score === 2,\n        },\n        onclick: () => controller.vote(2),\n        text: '🤣',\n      });\n    });\n  });\n});\n","@import 'src/client/view/style/constants.scss';\n\n.container {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  height: 100%;\n}\n\n.buttons {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n\n.button {\n  background: none;\n  padding: 0;\n  width: 88px;\n  height: 88px;\n  border: 8px solid $c-background;\n  font-size: 68px;\n  line-height: 68px;\n  text-align: center;\n  border-radius: 50%;\n  transition: border 0.1s ease-in-out;\n\n  &.selected {\n    border-color: $c-primary;\n  }\n}\n","import * as css from './player-results.module.scss';\n\nimport { component, h } from 'spred-dom';\nimport { PlayerController } from '../../../model/player-controller';\nimport { resultsTable } from '../results-table/results-table';\nimport { button } from '../button/button';\n\nexport const PlayerResults = component((controller: PlayerController) => {\n  return h('div', { class: css.container }, () => {\n    h('div', () => {\n      h('h1', { text: 'Результаты' });\n      resultsTable(controller.playersList);\n    });\n\n    button({\n      text: () => 'Продолжить',\n      onСlick: () => controller.ready(),\n    });\n  });\n});\n","@import 'src/client/view/style/constants.scss';\n\n.container {\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  height: 100%;\n}\n","import * as css from './player-view.module.scss';\n\nimport { batch, computed, writable } from 'spred';\nimport { component, h, node } from 'spred-dom';\nimport { GameStage } from '../../../../common/game-stage';\nimport { PlayerController } from '../../../model/player-controller';\nimport { roomId } from '../../../model/routing';\nimport { button } from '../button/button';\nimport { PlayerLogin } from '../player-login/player-login';\nimport { LoadingScreen } from '../loading-screen/loading-screen';\nimport { PlayerQuestion } from '../player-question/player-question';\nimport { PlayerVote } from '../player-vote/player-vote';\nimport { PlayerResults } from '../player-results/player-results';\n\nexport const PlayerView = component(() => {\n  const playerId = writable('');\n  const playerName = writable('');\n\n  const controller = computed(() => {\n    if (!playerId() || !playerName() || !roomId()) return null;\n    return new PlayerController(roomId(), playerId(), playerName());\n  });\n\n  const showVoteScreen = computed(() => {\n    const ctrl = controller();\n    if (!ctrl) return false;\n    return ctrl.player().id !== ctrl.votedAnswer().playerId;\n  });\n\n  const playerIsReady = computed(() => {\n    const ctrl = controller();\n    if (!ctrl) return false;\n    return ctrl.player().done;\n  });\n\n  return h('div', { class: css.container }, () => {\n    node(() => {\n      const ctrl = controller();\n\n      if (!ctrl) {\n        return PlayerLogin({\n          onLogin: ({ name, id }) => {\n            batch(() => {\n              playerId(id);\n              playerName(name);\n            });\n          },\n        });\n      }\n\n      if (ctrl.loading()) {\n        return LoadingScreen();\n      }\n\n      switch (ctrl.stage()) {\n        case GameStage.Lobby:\n          return LoadingScreen(() => 'Ожидаем начала игры');\n\n        case GameStage.Question:\n          return PlayerQuestion(ctrl);\n\n        case GameStage.Vote:\n          if (showVoteScreen()) return PlayerVote(ctrl);\n          return LoadingScreen(() => 'Ожидаем других игроков');\n\n        case GameStage.Results:\n          if (!playerIsReady()) return PlayerResults(ctrl);\n          return LoadingScreen(() => 'Ожидаем других игроков');\n      }\n    });\n  });\n});\n","@import 'src/client/view/style/constants.scss';\n\n.container {\n  padding: 16px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n","import { component, h, node } from 'spred-dom';\nimport { route } from '../model/routing';\nimport { HostView } from './components/host-view/host-view';\nimport { MainView } from './components/main-view/main-view';\nimport { PlayerView } from './components/player-view/player-view';\n\nexport const App = component(() => {\n  return h(() => {\n    node(() => {\n      switch (route()) {\n        case 'HOST':\n          return HostView();\n\n        case 'PLAY':\n          return PlayerView();\n\n        default:\n          return MainView();\n      }\n    });\n  });\n});\n","import { App } from './view/app';\n\ndocument.body.innerHTML = '';\ndocument.body.appendChild(App());\n"],"names":["$ce4c393d59005c08$var$NOOP_FN","$ce4c393d59005c08$var$DEFAULT_CONFIG","logException","e","console","error","_log","$ce4c393d59005c08$var$config","Object","assign","$ce4c393d59005c08$var$CircularDependencyError","Error","constructor","super","this","name","message","$ce4c393d59005c08$var$StateTypeError","$ce4c393d59005c08$var$tracking","$ce4c393d59005c08$var$scope","$ce4c393d59005c08$var$node","$ce4c393d59005c08$var$batchLevel","$ce4c393d59005c08$var$status","$ce4c393d59005c08$var$queue","$ce4c393d59005c08$var$notifications","$ce4c393d59005c08$var$version","$ce4c393d59005c08$export$929e52b916abea2e","fn","args","prevTracking","prevScope","prevStatus","result","$ce4c393d59005c08$export$bb44f104e3c54dae","fakeState","$ce4c393d59005c08$var$cleanupChildren","$ce4c393d59005c08$export$712ea50be43a7858","wrapper","_notificationWrapper","$ce4c393d59005c08$var$recalc","$ce4c393d59005c08$var$update$1","state","value","arguments","length","nextValue","forced","i","push","$ce4c393d59005c08$var$emitActivateLifecycle","$ce4c393d59005c08$var$logHook","onActivate","$ce4c393d59005c08$var$emitUpdateLifecycle","onUpdate","$ce4c393d59005c08$var$getFiltered","filter","prevValue","is","q","firstIndex","filtered","isWritable","compute","node","ft","nt","t","dirty","i1","state1","version","filtered1","$ce4c393d59005c08$var$calcComputed","hasException","subsCount","subs","node1","node2","i2","$ce4c393d59005c08$var$getStateValue","notTrackDeps","freezed","tracking","exception","s","lt","pt","ns","source","target","ps","ls","stale","cached","fs","$ce4c393d59005c08$var$createNode","prevNode","children","catch","undefined","e1","onException","$ce4c393d59005c08$var$removeNode","child","hook","payload","onDeactivate","$ce4c393d59005c08$var$signalProto","get","_state","subscriber","exec","$ce4c393d59005c08$var$createSubscriberNode","dispose","parent","sample","$ce4c393d59005c08$var$createSignalState","$ce4c393d59005c08$var$writableSignalProto","set","notify","$ce4c393d59005c08$export$e6d3eada50a007b1","shouldUpdate","self","subscribe","$ce4c393d59005c08$export$a9a36f4641f8c6f0","$ce4c393d59005c08$export$2983e091f1a1e8e2","handleException","$ce4c393d59005c08$var$STOP","$ce4c393d59005c08$var$VALUES_CACHE","$ce4c393d59005c08$var$counter","$ce4c393d59005c08$var$copy","obj","Array","isArray","$ce4c393d59005c08$var$isArray","slice","proto","getPrototypeOf","$ce4c393d59005c08$var$isPlainObject","$ce4c393d59005c08$var$getClone","id","$ce4c393d59005c08$var$clearValuesCache","$ce4c393d59005c08$var$update","arg1","arg2","updateFn","$ce4c393d59005c08$var$updateChild","setter","_setter","_id","key","_key","_parent","clone","next","update","parentValue","arg","$ce4c393d59005c08$var$select","store","select","$ce4c393d59005c08$export$6f57813fe9f31bf9","initialState","listener","$22df552e1af348d9$var$creatingState","root","isCreating","path","setupQueue","$22df552e1af348d9$var$traversalState","$22df552e1af348d9$var$next","current","goDeeper","firstChild","nextSibling","parentNode","$22df552e1af348d9$var$insertBefore","mark","insertBefore","$22df552e1af348d9$var$removeNodes","start","end","removeChild","$22df552e1af348d9$var$createMark","document","createTextNode","$22df552e1af348d9$var$setupSignalProp","signal","$22df552e1af348d9$var$setupAttr","v","$22df552e1af348d9$var$setupBaseAttr","$22df552e1af348d9$var$setupSignalAttr","removeAttribute","setAttribute","$22df552e1af348d9$export$35059013cd4a06db","binding","cb","$22df552e1af348d9$var$FIRST_CHILD","appendChild","$22df552e1af348d9$var$createBinding","$22df552e1af348d9$var$setupNode","$22df552e1af348d9$var$setupSignalNode","previousSibling","$22df552e1af348d9$export$d8556a2a8f973135","template","pathString","prevSetupQueue","data","prevPath","prevRoot","rootNode","createDocumentFragment","prevIsCreating","str","replace","$22df552e1af348d9$var$NEXT_SIBLING_REGEX","prev","$22df552e1af348d9$var$EMPTY_NESTING_REGEX","$22df552e1af348d9$var$EMPTY_TAIL","$22df552e1af348d9$var$END_CHILDREN_REGEX","$22df552e1af348d9$var$PARENT_NODE_REGEX","$22df552e1af348d9$var$getPathString","childNodes","nodeType","Node","TEXT_NODE","textContent","$22df552e1af348d9$var$isMark","substring","$22df552e1af348d9$var$createComponentData","cloneNode","fn1","container","prevIndex","$22df552e1af348d9$var$setupComponent","$22df552e1af348d9$export$57f8dd288b1bb4ef","component","RegExp","$22df552e1af348d9$var$PARENT_NODE","$22df552e1af348d9$var$fromObject","dynamic","dynamicResult","$22df552e1af348d9$var$fromArray","arr","item","itemType","add","$22df552e1af348d9$var$spec","props","hasBindings","reserved","$22df552e1af348d9$var$RESERVED","$22df552e1af348d9$var$ALIASES","attrs","class","ref","text","$22df552e1af348d9$var$TEMPLATE_RESULT","__INTERNAL__","$22df552e1af348d9$export$dda1d9f60106f0e9","first","second","third","tag","createElement","$22df552e1af348d9$export$8837f4fc672e936d","mapFn","$22df552e1af348d9$var$setupList","oldArr","nodeMap","Map","cleanupMap","arrSignal","newArr","oldLength","newLength","minLength","Math","min","a","b","shouldStop","index","endNode","$22df552e1af348d9$var$createListNode","endIndex","el","delete","positions","elementIndexMap","removedCount","last","moved","index1","oldIndex","el1","newIndex","$lc","lis","arrLength","endIndexes","predecessors","lisLength","lo","hi","mid","k","$22df552e1af348d9$var$getLIS","i3","j","position","index2","el2","nextEl","nextNode","lastChild","i4","index3","el3","nextEl1","nextNode1","$22df552e1af348d9$var$NOOP","forEach","cleanup","clear","nodeInMap","DOCUMENT_FRAGMENT_NODE","$22df552e1af348d9$var$isFragment","$f96b2642b9f7b404$var$hash","location","hash","$f96b2642b9f7b404$var$tuple","split","window","addEventListener","$f96b2642b9f7b404$export$4cb887bfde2d34ca","$f96b2642b9f7b404$export$f31323ec2eee0665","$f96b2642b9f7b404$export$9e5f7d1ac093176c","roomId","origin","$736e0943ea7fafc4$export$2e2bcd8739ae039","defineProperty","enumerable","configurable","writable","$c56d7ba00260894e$export$e19cd5f9376f8cee","Action","$de6d57450f94c18a$export$4cd8cc03ec8c034a","ClientType","$c223d7fc3543ae47$export$47ee0084f23e98e2","GameStage","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","ERROR_PACKET","type","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","buffer","encodePacket","_ref","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","readAsDataURL","chars","lookup","Uint8Array","charCodeAt","decode","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","decoded","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","count","packet","join","decodePayload","encodedPayload","decodedPacket","protocol","Emitter","mixin","on","event","_callbacks","once","off","apply","removeListener","removeAllListeners","removeEventListener","callbacks","splice","emit","emitReserved","listeners","hasListeners","globalThisShim","Function","pick","_len","attr","reduce","acc","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","globalThis","clearTimeoutFn","BASE64_OVERHEAD","byteLength","utf8Length","ceil","size","c","l","TransportError","reason","description","context","_this","_classCallCheck","_super","Transport","_Emitter","_inherits","_super2","_createSuper","_this2","_assertThisInitialized","query","readyState","socket","_createClass","_get","_getPrototypeOf","doOpen","doClose","onClose","write","onPacket","details","alphabet","map","seed","encode","num","encoded","floor","yeast","now","Date","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","concat","empty","hasXHR2","responseType","Polling","_Transport","polling","isSSL","port","xd","hostname","xs","secure","forceBase64","poll","onPause","pause","total","doPoll","_this3","onOpen","_this4","close","_this5","doWrite","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","indexOf","_extends","Request","uri","_this6","req","request","method","xhrStatus","onError","_this7","onData","pollXhr","_this8","async","_this9","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","requestsCount","requests","fromError","abort","responseText","unloadHandler","attachEvent","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","usingBrowserWebSocket","defaultBinaryType","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","_loop","lastPacket","transports","websocket","re","parts","parse","src","m","host","authority","ipv6uri","pathNames","queryKey","regx","names","substr","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","url","loc","test","href","withNativeFile","File","isBinary","hasBinary","toJSON","_typeof","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","stringify","deconstruction","unshift","Decoder","reviver","decodeString","reconstructor","BinaryReconstructor","takeBinaryData","buf","tryParse","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","onpacket","subEvents","_readyState","_len2","_key2","ack","pop","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","timer","_len3","_key3","_packet","onconnect","onevent","onack","ondisconnect","destroy","emitEvent","_anyListeners","_step","_iterator","_createForOfIteratorHelper","n","done","f","sent","_len4","_key4","emitBuffered","subDestroy","_anyOutgoingListeners","_step2","_iterator2","Backoff","ms","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","onping","ondata","ondecoded","_i","_nsps","active","_close","delay","onreconnect","attempt","cache","parsed","sameNamespace","forceNew","multiplex","$048ea61f9aba7fc9$var$WS_URL","$048ea61f9aba7fc9$export$f3f3f6c0124f08de","action","_pending","playerId","playerName","loading","stage","answers","answerIndex","votedAnswer","card","votes","players","list","playersList","sort","score","$dc6d5a3f487a55f6$exports","RoomUpdate","$c6fda64ed535b134$export$f70b24ca8bf25f3d","startGame","maxRounds","Lobby","StartGame","Host","caption","round","$f9984dd099aa6347$var$qrcodegen","QrCode","static","ecl","segs","QrSegment","makeSegments","encodeSegments","seg","makeBytes","minVersion","maxVersion","mask","boostEcl","MIN_VERSION","MAX_VERSION","RangeError","dataUsedBits","dataCapacityBits","getNumDataCodewords","usedBits","getTotalBits","newEcl","Ecc","MEDIUM","QUARTILE","HIGH","bb","appendBits","mode","modeBits","numChars","numCharCountBits","getData","assert","dataCapacityBits1","padByte","dataCodewords","getModule","x","y","modules","drawFunctionPatterns","setFunctionModule","drawFinderPattern","alignPatPos","getAlignmentPatternPositions","numAlign","drawAlignmentPattern","drawFormatBits","drawVersion","errorCorrectionLevel","formatBits","rem","bits","getBit","color","dy","dx","dist","abs","xx","yy","isDark","isFunction","addEccAndInterleave","ver","numBlocks","NUM_ERROR_CORRECTION_BLOCKS","ordinal","blockEccLen","ECC_CODEWORDS_PER_BLOCK","rawCodewords","getNumRawDataModules","numShortBlocks","shortBlockLen","blocks","rsDiv","reedSolomonComputeDivisor","dat","ecc","reedSolomonComputeRemainder","block","drawCodewords","right","vert","applyMask","invert","getPenaltyScore","runColor","runX","runHistory","PENALTY_N1","finderPenaltyAddHistory","finderPenaltyCountPatterns","PENALTY_N3","finderPenaltyTerminateAndCount","x1","runColor1","runY","runHistory1","y1","y2","x2","PENALTY_N2","dark","row","sum","PENALTY_N4","step","pos","degree","reedSolomonMultiply","divisor","_","coef","z","core","currentRunColor","currentRunLength","msk","allCodewords","minPenalty","penalty","val","cond","Mode","BYTE","digits","isNumeric","parseInt","NUMERIC","isAlphanumeric","temp","ALPHANUMERIC_CHARSET","ALPHANUMERIC","makeNumeric","makeAlphanumeric","toUtf8ByteArray","assignVal","ECI","NUMERIC_REGEX","ALPHANUMERIC_REGEX","bitData","ccbits","encodeURI","qrcodegen","numBitsCharCount","$f9984dd099aa6347$export$859d40b1011d188f","$93776eb7bb485c39$export$b60d6dac5af5488","textSignal","comboSignal","tuple","svg","qr","border","encodeText","innerHTML","$535efad7e2904bc1$export$524b16c2fb9dd359","hasNoPlayers","player","gKNX7W_playersList","gKNX7W_noPlayers","$ed7fb2efab85aad0$export$a2da573beea6475e","disabled","onclick","ZGsn8a_button","ZGsn8a_disabled","$ed7fb2efab85aad0$export$2ba01fb71ed41cb6","className","$636e2ba1ee777e74$export$bcb29a9a90b733a","controller","playLink","pending","gameStartBlocked","$131e39bcc6dce97f$export$e2b0760399e6dece","$92d57656c30a5fd1$export$d83a292a0337cdec","statusString","$d892a1b897debff7$export$ca0722b988fcefce","$a95e6b91de758f32$export$3e5da49431936c62","style","votedCard","vote","$81e19cea18b44bac$export$90b48f857750166d","PlayerStatus","$a9429e5b754ae5c3$var$TableRow","Offline","Pending","emoji","$a9429e5b754ae5c3$export$5739a15ec292b14c","sortedPlayers","res","$b784adb1b1196974$export$70d7605709b0451d","$18d4d237439f9999$export$da0083b0b0af08ff","controllerSignal","Question","Vote","Results","$845550a517d95080$export$db3c28d99448dcff","$a4c21b8aabe265a5$export$ac4959f4f1338dfc","crypto","getRandomValues","byte","toUpperCase","$358de96f201f30d4$export$239b7abf2afb194c","$03248158b8439c3c$export$fa32cd27347e212e","$92fc78184bff0833$export$cbacd6dcfff5ae2e","answer","cards","includes","findIndex","makePlayerDone","emitPlayerData","voteIndex","ready","PlayerData","Player","find","$f44035cc44263daf$export$1743b674e55b0ab7","getInitialValue","localStorage","getItem","setItem","$5e417a4dc98070a5$export$b7e3ae3d7c15e42e","label","model","oninput","$5de8c4c4b276579b$export$5472c29180efb2d1","onLogin","$5cf8e580e07fc0e1$var$Picture","selected","$5cf8e580e07fc0e1$export$c783869469a66432","currentIndexSource","currentIndex","displayed","cur","currentCard","lastTapTimestamp","noTransition","touchActive","touchStart","touchEnd","offset","transition","ontouchstart","ts","touches","clientX","ontouchmove","ontouchend","ontouchcancel","ondblclick","selectedCard","$e22b124a21985ce5$export$8bb74cb7aed06802","playerVote","m3uyBq_button","m3uyBq_selected","$e790a5255416b132$export$2ebbad7a70004c5f","$2612b174588c4d99$export$9be4cfdcfd161a5d","showVoteScreen","ctrl","playerIsReady","$3027fec0b1111c7d$export$86fbec116b87613f","body"],"version":3,"file":"index.227bd9e5.js.map"}
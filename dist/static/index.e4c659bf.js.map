{"mappings":"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;gBAAE,MAAM;gBAAE,QAAQ;gBAAE,UAAU;aAAE;SAC9C,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,EAAE,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA,GAAA,cAAM,CAAA,CAAC,UAAU,EAAE,CAAC,KAAK,GAAK;YAC3C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACtB,CAAC,CAAC;KACJ;IAED,AAAU,IAAI,CAAC,MAAc,EAAE,OAAa,EAAE;QAC5C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;KACnC;CACF;;;A;;;;G,C,C,S,M,E,O,E;I,M,C,O,G,O,E,C;C,C,C,I,E,W;I,Y,C;I,S,O,C,G,E;Q,yB,C;Q,O,O,G,U,I,O,M,I,Q,I,O,M,C,Q,G,S,G,E;Y,O,O,G,C;S,G,S,G,E;Y,O,G,I,U,I,O,M,I,G,C,W,K,M,I,G,K,M,C,S,G,Q,G,O,G,C;S,E,O,C,G,C,C;K;I,S,e,C,Q,E,W,E;Q,I,C,C,Q,Y,W,C,A,E,M,I,S,C,mC,C,C;K;I,S,iB,C,M,E,K,E;Q,I,I,C,G,C,E,C,G,K,C,M,E,C,E,C;Y,I,U,G,K,C,C,C,A;Y,U,C,U,G,U,C,U,I,K,C;Y,U,C,Y,G,I,C;Y,I,O,I,U,E,U,C,Q,G,I,C;Y,M,C,c,C,M,E,U,C,G,E,U,C,C;S;K;I,S,Y,C,W,E,U,E,W,E;Q,I,U,E,iB,C,W,C,S,E,U,C,C;Q,I,W,E,iB,C,W,E,W,C,C;Q,M,C,c,C,W,E,W,E;Y,Q,E,K;S,C,C;Q,O,W,C;K;I,S,Q,G;Q,Q,G,M,C,M,G,M,C,M,C,I,E,G,S,M,E;Y,I,I,C,G,C,E,C,G,S,C,M,E,C,E,C;gB,I,M,G,S,C,C,C,A;gB,I,I,G,I,M,C,I,M,C,S,C,c,C,I,C,M,E,G,C,E,M,C,G,C,G,M,C,G,C,C;a;Y,O,M,C;S,C;Q,O,Q,C,K,C,I,E,S,C,C;K;I,S,S,C,Q,E,U,E;Q,I,O,U,K,U,I,U,K,I,E,M,I,S,C,oD,C,C;Q,Q,C,S,G,M,C,M,C,U,I,U,C,S,E;Y,W,E;gB,K,E,Q;gB,Q,E,I;gB,Y,E,I;a;S,C,C;Q,M,C,c,C,Q,E,W,E;Y,Q,E,K;S,C,C;Q,I,U,E,e,C,Q,E,U,C,C;K;I,S,e,C,C,E;Q,e,G,M,C,c,G,M,C,c,C,I,E,G,S,e,C,C,E;Y,O,C,C,S,I,M,C,c,C,C,C,C;S,C;Q,O,e,C,C,C,C;K;I,S,e,C,C,E,C,E;Q,e,G,M,C,c,G,M,C,c,C,I,E,G,S,e,C,C,E,C,E;Y,C,C,S,G,C,C;Y,O,C,C;S,C;Q,O,e,C,C,E,C,C,C;K;I,S,yB,G;Q,I,O,O,K,W,I,C,O,C,S,E,O,K,C;Q,I,O,C,S,C,I,E,O,K,C;Q,I,O,K,K,U,E,O,I,C;Q,I;Y,O,C,S,C,O,C,I,C,O,C,S,C,O,E,E,E,W,E,C,C,C;Y,O,I,C;S,C,O,C,E;Y,O,K,C;S;K;I,S,U,C,M,E,I,E,K,E;Q,I,yB,E,E,U,G,O,C,S,C,I,E,C;a,U,G,S,U,C,M,E,I,E,K,E;Y,I,C,G;gB,I;a,A;Y,C,C,I,C,K,C,C,E,I,C,C;Y,I,W,G,Q,C,I,C,K,C,M,E,C,C,A;Y,I,Q,G,I,W,E,A;Y,I,K,E,e,C,Q,E,K,C,S,C,C;Y,O,Q,C;S,C;Q,O,U,C,K,C,I,E,S,C,C;K;I,S,iB,C,E,E;Q,O,Q,C,Q,C,I,C,E,C,C,O,C,e,C,K,E,C;K;I,S,gB,C,K,E;Q,I,M,G,O,G,K,U,G,I,G,E,G,S,A;Q,gB,G,S,gB,C,K,E;Y,I,K,K,I,I,C,iB,C,K,C,E,O,K,C;Y,I,O,K,K,U,E,M,I,S,C,oD,C,C;Y,I,O,M,K,W,E;gB,I,M,C,G,C,K,C,E,O,M,C,G,C,K,C,C;gB,M,C,G,C,K,E,O,C,C;a;Y,S,O,G;gB,O,U,C,K,E,S,E,e,C,I,C,C,W,C,C;a;Y,O,C,S,G,M,C,M,C,K,C,S,E;gB,W,E;oB,K,E,O;oB,U,E,K;oB,Q,E,I;oB,Y,E,I;iB;a,C,C;Y,O,e,C,O,E,K,C,C;S,C;Q,O,gB,C,K,C,C;K;I,S,sB,C,K,E;Q,I,K,K,K,C,E,M,I,c,C,2D,C,C;Q,O,K,C;K;I,S,0B,C,K,E,I,E;Q,I,I,I,C,O,I,K,Q,I,O,I,K,U,C,A,E,O,I,C;a,I,I,K,K,C,E,M,I,S,C,0D,C,C;Q,O,sB,C,K,C,C;K;I,S,Y,C,O,E;Q,I,yB,G,yB,E,A;Q,O,S,oB,G;Y,I,K,G,e,C,O,C,E,M,A;Y,I,yB,E;gB,I,S,G,e,C,I,C,C,W,A;gB,M,G,O,C,S,C,K,E,S,E,S,C,C;a,M,M,G,K,C,K,C,I,E,S,C,C;Y,O,0B,C,I,E,M,C,C;S,C;K;I,S,c,C,M,E,Q,E;Q,M,C,M,C,S,C,c,C,I,C,M,E,Q,C,C;Y,M,G,e,C,M,C,C;Y,I,M,K,I,E,M;S;Q,O,M,C;K;I,S,I,G;Q,I,O,O,K,W,I,O,C,G,E,I,G,O,C,G,C,I,E,C;a,I,G,S,I,C,M,E,Q,E,Q,E;Y,I,I,G,c,C,M,E,Q,C,A;Y,I,C,I,E,O;Y,I,I,G,M,C,wB,C,I,E,Q,C,A;Y,I,I,C,G,E,O,I,C,G,C,I,C,S,C,M,G,C,G,M,G,Q,C,C;Y,O,I,C,K,C;S,C;Q,O,I,C,K,C,I,E,S,C,C;K;I,S,2B,C,C,E,M,E;Q,I,C,C,E,O;Q,I,O,C,K,Q,E,O,iB,C,C,E,M,C,C;Q,I,C,G,M,C,S,C,Q,C,I,C,C,C,C,K,C,C,E,E,C,A;Q,I,C,K,Q,I,C,C,W,E,C,G,C,C,W,C,I,C;Q,I,C,K,K,I,C,K,K,E,O,K,C,I,C,C,C,C;Q,I,C,K,W,I,2C,I,C,C,C,E,O,iB,C,C,E,M,C,C;K;I,S,iB,C,G,E,G,E;Q,I,G,I,I,I,G,G,G,C,M,E,G,G,G,C,M,C;Q,I,I,C,G,C,E,I,G,I,K,C,G,C,E,C,G,G,E,C,E,C,I,C,C,C,G,G,C,C,C,C;Q,O,I,C;K;I,S,0B,C,C,E,c,E;Q,I,E,G,O,M,K,W,I,C,C,M,C,Q,C,I,C,C,Y,C,A;Q,I,C,E,E;Y,I,K,C,O,C,C,C,I,C,E,G,2B,C,C,C,C,I,c,I,C,I,O,C,C,M,K,Q,E;gB,I,E,E,C,G,E,C;gB,I,C,G,C,A;gB,I,C,G,W,E,A;gB,O;oB,C,E,C;oB,C,E,W;wB,I,C,I,C,C,M,E,O;4B,I,E,I;yB,C;wB,O;4B,I,E,K;4B,K,E,C,C,C,E,C;yB,C;qB;oB,C,E,S,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AAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AACtE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;aACnB;YACD;AACE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AACtE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AACtE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;aACnB;YACD;AACE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AACtE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AACtE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;aACnB;YACD;AACE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAA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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-c7f60137ef4e97d3.js","src/client/index.ts","src/client/view/app.ts","node_modules/spred-dom/dist/index.mjs","node_modules/spred/dist/index.mjs","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/client/view/components/host-view/host-view.ts","src/client/view/components/host-view/host-view.module.scss","src/client/model/host-controller.ts","src/common/action.ts","src/common/client-type.ts","src/common/game-stage.ts","src/client/model/game-controller.ts","node_modules/socket.io-client/dist/socket.io.js","node_modules/socket.io-client/node_modules/engine.io-parser/build/esm/commons.js","node_modules/socket.io-client/node_modules/engine.io-parser/build/esm/encodePacket.browser.js","node_modules/socket.io-client/node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","node_modules/socket.io-client/node_modules/engine.io-parser/build/esm/decodePacket.browser.js","node_modules/socket.io-client/node_modules/engine.io-parser/build/esm/index.js","node_modules/socket.io-client/node_modules/@socket.io/component-emitter/index.mjs","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/globalThis.browser.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/util.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/transport.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/contrib/yeast.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/contrib/parseqs.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/contrib/has-cors.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/transports/polling.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/transports/websocket.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/transports/index.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/contrib/parseuri.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/socket.js","node_modules/socket.io-client/node_modules/engine.io-client/build/esm/index.js","node_modules/socket.io-client/build/esm/url.js","node_modules/socket.io-client/node_modules/socket.io-parser/build/esm/is-binary.js","node_modules/socket.io-client/node_modules/socket.io-parser/build/esm/binary.js","node_modules/socket.io-client/node_modules/socket.io-parser/build/esm/index.js","node_modules/socket.io-client/build/esm/on.js","node_modules/socket.io-client/build/esm/socket.js","node_modules/socket.io-client/build/esm/contrib/backo2.js","node_modules/socket.io-client/build/esm/manager.js","node_modules/socket.io-client/build/esm/index.js","src/client/model/routing.ts","src/client/view/components/host-lobby/host-lobby.ts","src/client/view/components/host-lobby/host-lobby.module.scss","src/client/view/components/qr-code/qr-code.ts","src/vendor/qrcode.ts","src/client/view/components/qr-code/qr-code.module.scss","src/client/view/ui/button/button.ts","src/client/view/ui/button/button.module.scss","src/client/view/components/players-list/players-list.ts","src/client/view/components/players-list/players-list.module.scss","src/client/view/ui/loading-screen/loading-screen.ts","src/client/view/ui/loading-screen/loading-screen.module.scss","src/client/view/components/host-question/host-question.ts","src/client/view/components/host-question/host-question.module.scss","src/client/view/components/main-view/main-view.ts","src/client/view/components/main-view/main-view.module.scss","src/client/view/components/logo/logo.ts","src/client/view/components/logo/logo.module.scss","src/client/view/components/start-link/start-link.ts","node_modules/nanoid/index.browser.js","src/client/view/components/player-view/player-view.ts","src/client/model/player-controller.ts","src/client/lib/with-local-storage.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"6ea89786e4c659bf\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets);\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","import { App } from './view/app';\n\ndocument.body.innerHTML = '';\ndocument.body.appendChild(App());\n","import { component, h, node } from 'spred-dom';\nimport { route } from '../model/routing';\nimport { HostView } from './components/host-view/host-view';\nimport { MainView } from './components/main-view/main-view';\nimport { PlayerView } from './components/player-view/player-view';\n\nexport const App = component(() => {\n  return h(() => {\n    node(() => {\n      switch (route()) {\n        case 'HOST':\n          return HostView();\n\n        case 'PLAY':\n          return PlayerView();\n\n        default:\n          return MainView();\n      }\n    });\n  });\n});\n","import { isSignal, memo, isolate, computed, onDeactivate, collect } from 'spred';\n\nconst creatingState = {\n    root: null,\n    isCreating: false,\n    path: '',\n    setupQueue: [],\n};\nconst traversalState = {\n    path: '',\n    i: 0,\n    node: null,\n};\nconst FIRST_CHILD = 'F';\nconst NEXT_SIBLING = 'N';\nconst PARENT_NODE = 'P';\nconst BINDING = 'B';\nconst START_CHILDREN = '>';\nconst END_CHILDREN = '<';\nfunction next(fn) {\n    const current = traversalState.path[traversalState.i];\n    const nextValue = traversalState.path[++traversalState.i];\n    const goDeeper = nextValue === START_CHILDREN;\n    switch (current) {\n        case FIRST_CHILD:\n            traversalState.node = traversalState.node.firstChild;\n            break;\n        case NEXT_SIBLING:\n            traversalState.node = traversalState.node.nextSibling;\n            break;\n        case PARENT_NODE:\n            traversalState.node = traversalState.node.parentNode;\n            next(fn);\n            break;\n    }\n    if (goDeeper && fn) {\n        ++traversalState.i;\n        fn();\n    }\n}\n\nfunction insertBefore(child, mark, parentNode) {\n    const parent = parentNode || mark.parentNode;\n    parent.insertBefore(child, mark);\n}\nfunction removeNodes(start, end, parentNode) {\n    const parent = parentNode || start.parentNode;\n    let current = start;\n    let next = null;\n    while (current && current !== end) {\n        next = current.nextSibling;\n        parent.removeChild(current);\n        current = next;\n    }\n}\nfunction isFragment(node) {\n    return node.nodeType === Node.DOCUMENT_FRAGMENT_NODE;\n}\nfunction createMark() {\n    return document.createTextNode('');\n}\nfunction isMark(node) {\n    return node && node.nodeType === Node.TEXT_NODE && !node.textContent;\n}\nfunction setupSignalProp(node, key, signal) {\n    signal.subscribe((value) => (node[key] = value));\n}\nfunction setupAttr(node, key, value) {\n    if (typeof value === 'function') {\n        setupSignalAttr(node, key, isSignal(value) ? value : memo(value));\n        return true;\n    }\n    if (creatingState.isCreating)\n        setupBaseAttr(node, key, value);\n}\nfunction setupBaseAttr(node, key, value) {\n    if (value === true || value === '') {\n        value = '';\n    }\n    else if (!value) {\n        node.removeAttribute(key);\n        return;\n    }\n    node.setAttribute(key, value);\n}\nfunction setupSignalAttr(node, key, value) {\n    value.subscribe((v) => setupBaseAttr(node, key, v));\n}\n\nfunction createBinding(cb) {\n    if (creatingState.isCreating) {\n        const mark = createMark();\n        creatingState.path += FIRST_CHILD + BINDING + PARENT_NODE;\n        creatingState.root.appendChild(mark);\n        cb(mark);\n        return;\n    }\n    next();\n    const mark = traversalState && traversalState.node;\n    cb(mark);\n    next();\n}\n\nfunction node(binding) {\n    createBinding((mark) => {\n        if (creatingState.isCreating) {\n            creatingState.setupQueue.push(() => setupNode(binding, mark));\n            return;\n        }\n        setupNode(binding, mark);\n    });\n}\nfunction setupNode(binding, mark) {\n    if (!mark || !binding)\n        return;\n    if (typeof binding === 'function') {\n        if (isSignal(binding)) {\n            setupSignalNode(binding, mark);\n            return;\n        }\n        setupSignalNode(memo(binding), mark);\n        return;\n    }\n    insertBefore(binding, mark);\n}\nfunction setupSignalNode(binding, mark) {\n    let start = mark.previousSibling;\n    if (!start) {\n        start = createMark();\n        insertBefore(start, mark);\n    }\n    binding.subscribe((node) => {\n        removeNodes(start.nextSibling, mark);\n        if (node)\n            insertBefore(node, mark);\n    });\n}\n\nfunction component(fn) {\n    let template = null;\n    let pathString = '';\n    return function (...args) {\n        if (!template) {\n            const prevSetupQueue = creatingState.setupQueue;\n            creatingState.setupQueue = [];\n            const data = createComponentData(fn, args);\n            pathString = data.pathString;\n            template = data.rootNode.cloneNode(true);\n            for (let fn of creatingState.setupQueue)\n                fn();\n            creatingState.setupQueue = prevSetupQueue;\n            return data.rootNode;\n        }\n        const rootNode = template.cloneNode(true);\n        setupComponent(fn, args, rootNode, pathString);\n        return rootNode;\n    };\n}\nfunction templateFn(component) {\n    return (...args) => node(component(...args));\n}\nfunction setupComponent(fn, args, container, pathString) {\n    const prevIsCreating = creatingState.isCreating;\n    const prevPath = traversalState.path;\n    const prevIndex = traversalState.i;\n    const prevNode = traversalState.node;\n    creatingState.isCreating = false;\n    traversalState.path = pathString;\n    traversalState.i = 0;\n    traversalState.node = container;\n    isolate(fn, args);\n    creatingState.isCreating = prevIsCreating;\n    traversalState.path = prevPath;\n    traversalState.i = prevIndex;\n    traversalState.node = prevNode;\n}\nfunction createComponentData(fn, args) {\n    const prevPath = creatingState.path;\n    creatingState.path = '';\n    const prevRoot = creatingState.root;\n    let rootNode = document.createDocumentFragment();\n    creatingState.root = rootNode;\n    const prevIsCreating = creatingState.isCreating;\n    creatingState.isCreating = true;\n    isolate(fn, args);\n    let pathString = getPathString(creatingState.path);\n    creatingState.isCreating = prevIsCreating;\n    creatingState.path = prevPath;\n    creatingState.root = prevRoot;\n    if (rootNode.childNodes.length === 1 && !isMark(rootNode.firstChild)) {\n        rootNode = rootNode.firstChild;\n        if (pathString[0] === FIRST_CHILD)\n            pathString = '_' + pathString.substring(1);\n    }\n    return { rootNode, pathString };\n}\nconst NEXT_SIBLING_REGEX = new RegExp(PARENT_NODE + FIRST_CHILD, 'g');\nconst EMPTY_NESTING_REGEX = new RegExp(`${START_CHILDREN}[^${BINDING}${START_CHILDREN}${END_CHILDREN}]*${END_CHILDREN}`, 'g');\nconst END_CHILDREN_REGEX = new RegExp(END_CHILDREN, 'g');\nconst EMPTY_TAIL = new RegExp(`[^${BINDING}]+$`, 'g');\nconst PARENT_NODE_REGEX = new RegExp(`${NEXT_SIBLING}+${PARENT_NODE}`, 'g');\nfunction getPathString(str) {\n    str = str.replace(NEXT_SIBLING_REGEX, NEXT_SIBLING);\n    let prev = '';\n    while (prev !== str) {\n        prev = str;\n        str = str.replace(EMPTY_NESTING_REGEX, '');\n    }\n    str = str\n        .replace(EMPTY_TAIL, '')\n        .replace(END_CHILDREN_REGEX, '')\n        .replace(PARENT_NODE_REGEX, PARENT_NODE);\n    return str;\n}\n\nfunction classes() {\n    const result = fromArray(arguments);\n    if (typeof result === 'function') {\n        return memo(result);\n    }\n    return result;\n}\nfunction fromObject(obj) {\n    let dynamic;\n    let result = '';\n    for (let key in obj) {\n        const value = obj[key];\n        if (value) {\n            if (typeof value === 'function') {\n                if (!dynamic)\n                    dynamic = [];\n                dynamic.push(key);\n                continue;\n            }\n            if (result)\n                result += ' ';\n            result += key;\n        }\n    }\n    if (dynamic) {\n        return () => {\n            let dynamicResult = result;\n            for (let key of dynamic) {\n                const value = obj[key]();\n                if (!value)\n                    continue;\n                if (dynamicResult)\n                    dynamicResult += ' ';\n                dynamicResult += key;\n            }\n            return dynamicResult;\n        };\n    }\n    return result || null;\n}\nfunction fromArray(arr) {\n    let result = '';\n    let dynamic;\n    for (let i = 0; i < arr.length; i++) {\n        let item = arr[i];\n        if (!item)\n            continue;\n        if (typeof item === 'object') {\n            item = Array.isArray(item) ? fromArray(item) : fromObject(item);\n        }\n        if (item) {\n            const itemType = typeof item;\n            if (itemType === 'function') {\n                if (!dynamic)\n                    dynamic = [];\n                dynamic.push(item);\n            }\n            else if (itemType === 'string') {\n                if (result)\n                    result += ' ';\n                result += item;\n            }\n        }\n    }\n    if (dynamic) {\n        return () => {\n            let dynamicResult = result;\n            for (let fn of dynamic) {\n                const add = fn();\n                if (add && typeof add === 'string') {\n                    if (dynamicResult)\n                        dynamicResult += ' ';\n                    dynamicResult += add;\n                }\n            }\n            return dynamicResult || null;\n        };\n    }\n    return result || null;\n}\n\nfunction spec(props, fn) {\n    if (!props || (creatingState.isCreating && !creatingState.root))\n        return;\n    let node;\n    let hasBindings = false;\n    if (creatingState.isCreating) {\n        node = creatingState.root;\n    }\n    else {\n        if (traversalState.path[traversalState.i] !== BINDING)\n            return;\n        node = traversalState.node;\n        next(fn);\n    }\n    for (let key in props) {\n        const reserved = RESERVED[key];\n        let value = props[key];\n        if (reserved) {\n            const result = reserved(node, value);\n            if (result)\n                hasBindings = true;\n            continue;\n        }\n        key = ALIASES[key] || key;\n        if (typeof value === 'function') {\n            hasBindings = true;\n            if (key[0] === 'o' && key[1] === 'n') {\n                node[key] = value;\n                continue;\n            }\n            setupSignalProp(node, key, isSignal(value) ? value : memo(value));\n            continue;\n        }\n        if (creatingState.isCreating)\n            node[key] = value;\n    }\n    if (hasBindings && creatingState.isCreating) {\n        creatingState.path += BINDING;\n    }\n}\nconst RESERVED = {\n    attrs(node, attrs) {\n        let hasBindings = false;\n        for (let key in attrs) {\n            hasBindings = setupAttr(node, key, attrs[key]) || hasBindings;\n        }\n        return hasBindings;\n    },\n    class(node, value) {\n        if (typeof value === 'object') {\n            value = Array.isArray(value) ? fromArray(value) : fromObject(value);\n        }\n        return setupAttr(node, 'class', value);\n    },\n    ref(node, cb) {\n        cb(node);\n        return true;\n    },\n};\nconst ALIASES = {\n    text: 'textContent',\n};\n\nconst TEMPLATE_RESULT = {\n    // istanbul ignore next\n    get __INTERNAL__() {\n        return 'Dummy property used for correct type checking only';\n    },\n};\n\nfunction h(first, second, third) {\n    let props;\n    let fn;\n    let tag;\n    switch (arguments.length) {\n        case 1:\n            if (typeof first === 'function')\n                fn = first;\n            else\n                tag = first;\n            break;\n        case 2:\n            tag = first;\n            if (typeof second === 'function')\n                fn = second;\n            else\n                props = second;\n            break;\n        case 3:\n            tag = first;\n            props = second;\n            fn = third;\n            break;\n    }\n    if (!tag) {\n        fn();\n        return TEMPLATE_RESULT;\n    }\n    if (creatingState.isCreating) {\n        const child = document.createElement(tag);\n        creatingState.root.appendChild(child);\n        creatingState.root = child;\n        creatingState.path += FIRST_CHILD;\n        spec(props);\n        if (fn) {\n            creatingState.path += START_CHILDREN;\n            fn();\n            creatingState.path += END_CHILDREN;\n        }\n        creatingState.path += PARENT_NODE;\n        creatingState.root = creatingState.root.parentNode;\n        return TEMPLATE_RESULT;\n    }\n    next(fn);\n    spec(props, fn);\n    return TEMPLATE_RESULT;\n}\n\nfunction text(data) {\n    let node;\n    if (creatingState.isCreating) {\n        node = document.createTextNode('_');\n        creatingState.root.appendChild(node);\n    }\n    else {\n        next();\n        node = traversalState.node;\n    }\n    if (typeof data === 'function') {\n        if (creatingState.isCreating) {\n            creatingState.path += FIRST_CHILD + BINDING + PARENT_NODE;\n        }\n        else\n            next();\n        setupSignalProp(node, 'textContent', isSignal(data) ? data : memo(data));\n        return;\n    }\n    if (creatingState.isCreating) {\n        creatingState.path += FIRST_CHILD + PARENT_NODE;\n        node.textContent = data;\n    }\n}\n\nfunction list(binding, mapFn) {\n    if (creatingState.isCreating && creatingState.root) {\n        const mark = createMark();\n        creatingState.path += FIRST_CHILD + BINDING + PARENT_NODE;\n        creatingState.setupQueue.push(() => setupList(binding, mapFn, mark));\n        creatingState.root.appendChild(mark);\n        return;\n    }\n    next();\n    setupList(binding, mapFn, traversalState.node);\n    next();\n}\nfunction setupList(binding, mapFn, mark) {\n    if (isSignal(binding)) {\n        let start = mark.previousSibling;\n        if (!start) {\n            start = createMark();\n            insertBefore(start, mark);\n        }\n        let oldArr = [];\n        let nodeMap = new Map();\n        let cleanupMap = new Map();\n        // the algorithm is taken from\n        // https://github.com/localvoid/ivi/blob/2c81ead934b9128e092cc2a5ef2d3cabc73cb5dd/packages/ivi/src/vdom/implementation.ts#L1366\n        const arrSignal = computed(() => {\n            const newArr = binding();\n            const parent = mark.parentNode;\n            let oldLength = oldArr.length;\n            let newLength = newArr.length;\n            if (!newLength && !oldLength)\n                return;\n            const minLength = Math.min(oldLength, newLength);\n            let s = 0; // start index\n            let a = oldLength - 1; // old array end index\n            let b = newLength - 1; // new array end index\n            for (let i = 0; i < minLength; ++i) {\n                let shouldStop = 0;\n                if (oldArr[s] === newArr[s])\n                    ++s;\n                else\n                    ++shouldStop;\n                if (oldArr[a] === newArr[b])\n                    --a, --b;\n                else\n                    ++shouldStop;\n                if (shouldStop === 2)\n                    break;\n            }\n            // lists are equal\n            if (a < 0 && b < 0)\n                return;\n            // add nodes\n            if (s > a) {\n                const index = b + 1;\n                const endNode = index === newLength ? mark : nodeMap.get(newArr[index]);\n                while (s <= b) {\n                    insertBefore(createListNode(newArr[s], mapFn, nodeMap, cleanupMap), endNode, parent);\n                    ++s;\n                }\n                oldArr = newArr;\n                return;\n            }\n            // remove nodes\n            if (s > b) {\n                const endIndex = a + 1;\n                const startNode = nodeMap.get(oldArr[s]);\n                const endNode = endIndex === oldLength ? mark : nodeMap.get(oldArr[endIndex]);\n                removeNodes(startNode, endNode, parent);\n                while (s < endIndex) {\n                    const el = oldArr[s++];\n                    cleanupMap.get(el)();\n                    cleanupMap.delete(el);\n                    nodeMap.delete(el);\n                }\n                oldArr = newArr;\n                return;\n            }\n            // reconcile\n            const positions = [];\n            const elementIndexMap = new Map();\n            let removedCount = 0;\n            let last = 0;\n            let moved = false;\n            oldLength = a + 1 - s;\n            newLength = b + 1 - s;\n            for (let i = 0; i < newLength; ++i) {\n                const index = s + i;\n                positions[i] = -1;\n                elementIndexMap.set(newArr[index], index);\n            }\n            for (let i = 0; i < oldLength; ++i) {\n                const oldIndex = s + i;\n                const el = oldArr[oldIndex];\n                const newIndex = elementIndexMap.get(el);\n                if (newIndex === undefined) {\n                    const node = nodeMap.get(el);\n                    const end = (node.$lc || node).nextSibling;\n                    removeNodes(node, end, parent);\n                    cleanupMap.get(el)();\n                    cleanupMap.delete(el);\n                    nodeMap.delete(el);\n                    removedCount++;\n                    continue;\n                }\n                positions[newIndex - s] = oldIndex;\n                if (!moved) {\n                    if (last > newIndex)\n                        moved = true;\n                    else\n                        last = newIndex;\n                }\n            }\n            if (moved) {\n                const lis = getLIS(positions);\n                for (let i = 0, j = lis.length - 1; i < newLength; ++i) {\n                    const position = positions[newLength - i - 1];\n                    const lisPosition = lis[j];\n                    if (position === lisPosition) {\n                        --j;\n                        continue;\n                    }\n                    const index = b - i;\n                    const el = newArr[index];\n                    const nextEl = newArr[index + 1];\n                    const nextNode = nextEl === undefined //\n                        ? mark\n                        : nodeMap.get(nextEl);\n                    if (position < 0) {\n                        insertBefore(createListNode(el, mapFn, nodeMap, cleanupMap), nextNode, parent);\n                    }\n                    else {\n                        const node = nodeMap.get(el);\n                        const lastChild = node.$lc;\n                        if (lastChild && node !== lastChild) {\n                            let current = node;\n                            let next;\n                            while (1) {\n                                next = current.nextSibling;\n                                insertBefore(current, nextNode, parent);\n                                if (current === lastChild)\n                                    break;\n                                current = next;\n                            }\n                        }\n                        else {\n                            insertBefore(node, nextNode, parent);\n                        }\n                    }\n                }\n            }\n            else if (oldLength - removedCount !== newLength) {\n                for (let i = 0; i < newLength; ++i) {\n                    if (positions[newLength - i - 1] !== -1)\n                        continue;\n                    const index = b - i;\n                    const el = newArr[index];\n                    const nextEl = newArr[index + 1];\n                    const nextNode = nextEl === undefined //\n                        ? mark\n                        : nodeMap.get(nextEl);\n                    insertBefore(createListNode(el, mapFn, nodeMap, cleanupMap), nextNode, parent);\n                }\n            }\n            oldArr = newArr;\n        });\n        arrSignal.subscribe(NOOP);\n        onDeactivate(arrSignal, () => {\n            cleanupMap.forEach((cleanup) => cleanup());\n            cleanupMap.clear();\n            nodeMap.clear();\n        });\n        return;\n    }\n    const parent = mark.parentNode;\n    for (let el of binding) {\n        insertBefore(mapFn(el), mark, parent);\n    }\n}\nfunction getLIS(arr) {\n    const arrLength = arr.length;\n    const endIndexes = [];\n    const predecessors = [];\n    let lisLength = 0;\n    for (let i = 0; i < arrLength; ++i) {\n        const el = arr[i];\n        if (el < 0)\n            continue;\n        let lo = 1;\n        let hi = lisLength + 1;\n        while (lo < hi) {\n            const mid = lo + (0 | ((hi - lo) / 2));\n            if (arr[endIndexes[mid]] > el)\n                hi = mid;\n            else\n                lo = mid + 1;\n        }\n        predecessors[i] = endIndexes[lo - 1];\n        endIndexes[lo] = i;\n        if (lo > lisLength)\n            lisLength = lo;\n    }\n    const lis = [];\n    let i = lisLength;\n    let k = endIndexes[lisLength];\n    while (i) {\n        lis[--i] = arr[k];\n        k = predecessors[k];\n    }\n    return lis;\n}\nfunction createListNode(el, mapFn, nodeMap, cleanupMap) {\n    let node;\n    const cleanup = collect(() => {\n        node = mapFn(el);\n    });\n    let nodeInMap = node;\n    if (isFragment(node)) {\n        const firstChild = node.firstChild;\n        nodeInMap = createMark();\n        if (firstChild)\n            node.insertBefore(nodeInMap, firstChild);\n        else\n            node.appendChild(nodeInMap);\n        nodeInMap.$lc = node.lastChild;\n    }\n    nodeMap.set(el, nodeInMap);\n    cleanupMap.set(el, cleanup);\n    return node;\n}\nconst NOOP = () => { };\n\nexport { classes, component, h, list, node, templateFn, text };\n","const NOOP_FN = () => { };\nconst FALSE_STATUS = { status: false };\n\nfunction createSignalState(value, compute) {\n    const parent = tracking || scope;\n    const state = {\n        value,\n        compute,\n        observers: new Set(),\n        dirtyCount: 0,\n        queueIndex: -1,\n        subsCount: 0,\n        oldDepsCount: 0,\n        isCached: FALSE_STATUS,\n    };\n    if (compute)\n        state.dependencies = new Set();\n    else\n        state.nextValue = value;\n    if (parent) {\n        if (!parent.children)\n            parent.children = [];\n        parent.children.push(state);\n    }\n    return state;\n}\nfunction freeze(state) {\n    delete state.compute;\n    delete state.observers;\n    delete state.dependencies;\n    delete state.dirtyCount;\n    delete state.isCached;\n    delete state.queueIndex;\n    delete state.oldDepsCount;\n    delete state.hasException;\n    delete state.subsCount;\n    delete state.isComputing;\n}\n\nconst DEFAULT_CONFIG = {\n    logException: /* istanbul ignore next */ (e) => console.error(e),\n    _log: NOOP_FN,\n};\nconst config = Object.assign({}, DEFAULT_CONFIG);\nfunction configure(configUpdate) {\n    Object.assign(config, configUpdate || DEFAULT_CONFIG);\n    if (!config.logger)\n        config._log = NOOP_FN;\n    else\n        config._log = config.logger;\n}\n\nconst ERROR_NAME = '[SPRED ERROR]';\nclass CircularDependencyError extends Error {\n    constructor() {\n        super();\n        this.name = ERROR_NAME;\n        this.message = 'Circular dependency detected';\n    }\n}\nclass StateTypeError extends Error {\n    constructor() {\n        super();\n        this.name = ERROR_NAME;\n        this.message =\n            'State data must be a plain object or an array or a primitive';\n    }\n}\n\nlet tracking = null;\nlet scope = null;\nlet batchLevel = 0;\nlet calcLevel = 0;\nlet queue = [];\nlet queueLength = 0;\nlet fullQueueLength = 0;\nlet depth = 0;\nlet cacheStatus = { status: true };\nfunction isolate(fn, args) {\n    const prevCacheStatus = cacheStatus;\n    const prevDepth = depth;\n    const prevTracking = tracking;\n    const prevScope = scope;\n    let result;\n    if (tracking)\n        scope = tracking;\n    tracking = null;\n    depth = 0;\n    if (args)\n        result = fn(...args);\n    else\n        result = fn();\n    cacheStatus = prevCacheStatus;\n    depth = prevDepth;\n    tracking = prevTracking;\n    scope = prevScope;\n    return result;\n}\nfunction collect(fn) {\n    const prevCacheStatus = cacheStatus;\n    const prevDepth = depth;\n    const prevTracking = tracking;\n    const prevScope = scope;\n    const fakeState = {};\n    scope = fakeState;\n    tracking = null;\n    depth = 0;\n    fn();\n    cacheStatus = prevCacheStatus;\n    depth = prevDepth;\n    tracking = prevTracking;\n    scope = prevScope;\n    return () => cleanupChildren(fakeState);\n}\n/**\n * Commits all writable signal updates inside the passed function as a single transaction.\n * @param fn The function with updates.\n */\nfunction batch(fn) {\n    batchLevel++;\n    fn();\n    batchLevel--;\n    recalc();\n}\nfunction update$1(state, value) {\n    if (arguments.length > 1) {\n        if (typeof value === 'function')\n            state.nextValue = value(state.nextValue);\n        else\n            state.nextValue = value;\n    }\n    else if (state.compute)\n        state.dirtyCount++;\n    state.queueIndex = queueLength - fullQueueLength;\n    queueLength = queue.push(state);\n    recalc();\n    return state.nextValue;\n}\nfunction addSubscriber(signal, subscriber, exec) {\n    const state = signal._state;\n    if (state.observers && state.observers.has(subscriber))\n        return;\n    const value = getStateValue(state, true);\n    if (!state.observers) {\n        if (exec)\n            subscriber(value, true);\n        return;\n    }\n    activateDependencies(state);\n    state.observers.add(subscriber);\n    state.subsCount++;\n    if (exec) {\n        isolate(() => subscriber(value, true));\n    }\n}\nfunction removeSubscriber(signal, subscriber) {\n    const state = signal._state;\n    if (state.observers.delete(subscriber)) {\n        state.subsCount--;\n        deactivateDependencies(state);\n    }\n}\nfunction resetStateQueueParams(state) {\n    state.dirtyCount = 0;\n    state.queueIndex = -1;\n}\nfunction emitUpdateLifecycle(state, value) {\n    logHook(state, 'UPDATE', value);\n    if (!state.onUpdate)\n        return;\n    state.onUpdate({\n        value: value,\n        prevValue: state.value,\n    });\n}\n/**\n * Immediately calculates the updated values of the signals and notifies their subscribers.\n */\nfunction recalc() {\n    if (!queueLength || calcLevel || batchLevel)\n        return;\n    const notificationQueue = [];\n    calcLevel++;\n    for (let i = 0; i < queueLength; i++) {\n        const state = queue[i];\n        if (state.queueIndex !== i || !state.observers)\n            continue;\n        state.hasException = false;\n        for (let dependant of state.observers) {\n            if (typeof dependant === 'function')\n                continue;\n            dependant.queueIndex = queueLength;\n            dependant.dirtyCount++;\n            queueLength = queue.push(dependant);\n        }\n    }\n    fullQueueLength = queueLength;\n    for (let i = 0; i < fullQueueLength; i++) {\n        const state = queue[i];\n        if (state.queueIndex !== i)\n            continue;\n        if (!state.compute) {\n            const value = state.nextValue;\n            const shouldUpdate = value !== undefined;\n            if (shouldUpdate) {\n                emitUpdateLifecycle(state, value);\n                state.value = value;\n                notificationQueue.push(state);\n            }\n            resetStateQueueParams(state);\n            continue;\n        }\n        if (!state.observers.size) {\n            resetStateQueueParams(state);\n            continue;\n        }\n        if (state.hasException) {\n            state.dirtyCount = 0;\n            logHook(state, 'EXCEPTION');\n            if (state.onException) {\n                state.onException(state.exception);\n            }\n            if (state.subsCount) {\n                config.logException(state.exception);\n            }\n        }\n        if (!state.dirtyCount) {\n            decreaseDirtyCount(state);\n            resetStateQueueParams(state);\n            continue;\n        }\n        const value = calcComputed(state, true);\n        if (value !== undefined) {\n            emitUpdateLifecycle(state, value);\n            state.value = value;\n            notificationQueue.push(state);\n        }\n        else {\n            decreaseDirtyCount(state);\n        }\n        resetStateQueueParams(state);\n    }\n    calcLevel--;\n    queue = queue.slice(fullQueueLength);\n    queueLength = queue.length;\n    fullQueueLength = queueLength;\n    notify(notificationQueue);\n    recalc();\n}\nfunction notify(notificationQueue) {\n    const wrapper = config._notificationWrapper;\n    batchLevel++;\n    isolate(() => {\n        if (wrapper) {\n            wrapper(() => {\n                for (let state of notificationQueue)\n                    runSubscribers(state);\n            });\n        }\n        else {\n            for (let state of notificationQueue)\n                runSubscribers(state);\n        }\n    });\n    batchLevel--;\n}\nfunction decreaseDirtyCount(state) {\n    for (let dependant of state.observers) {\n        if (typeof dependant === 'function')\n            continue;\n        if (state.hasException && dependant.isCatcher)\n            continue;\n        dependant.dirtyCount--;\n        if (state.hasException && !dependant.hasException) {\n            dependant.hasException = true;\n            dependant.exception = state.exception;\n        }\n    }\n}\nfunction runSubscribers(state) {\n    let i = state.subsCount;\n    if (!i)\n        return;\n    logHook(state, 'NOTIFY_START');\n    if (state.onNotifyStart) {\n        state.onNotifyStart(state.value);\n    }\n    for (let subscriber of state.observers) {\n        if (!i)\n            break;\n        if (typeof subscriber !== 'function')\n            continue;\n        subscriber(state.value);\n        --i;\n    }\n    logHook(state, 'NOTIFY_END');\n    if (state.onNotifyEnd) {\n        state.onNotifyEnd(state.value);\n    }\n}\nfunction getStateValue(state, notTrackDeps) {\n    if (state.isComputing || state.hasCycle) {\n        state.hasCycle = true;\n        config.logException(new CircularDependencyError());\n        return state.value;\n    }\n    if (state.compute && !state.observers.size && !state.isCached.status) {\n        const value = calcComputed(state, false, notTrackDeps);\n        if (value !== undefined) {\n            state.value = value;\n        }\n    }\n    if (tracking && !notTrackDeps && state.observers) {\n        if (state.hasException && !tracking.hasException && !tracking.isCatcher) {\n            tracking.exception = state.exception;\n            tracking.hasException = true;\n        }\n        const isNewDep = !tracking.dependencies.delete(state);\n        tracking.dependencies.add(state);\n        --tracking.oldDepsCount;\n        if (isNewDep) {\n            if (tracking.observers.size) {\n                activateDependencies(state);\n                state.observers.add(tracking);\n            }\n        }\n    }\n    if (state.compute && !state.dependencies.size)\n        freeze(state);\n    return state.value;\n}\nfunction calcComputed(state, scheduled, logException) {\n    const prevTracking = tracking;\n    let value;\n    push(state);\n    try {\n        value = state.compute(state.value, scheduled);\n    }\n    catch (e) {\n        state.exception = e;\n        state.hasException = true;\n    }\n    let i = state.oldDepsCount;\n    for (let dependency of state.dependencies) {\n        if (i <= 0)\n            break;\n        state.dependencies.delete(dependency);\n        dependency.observers.delete(state);\n        deactivateDependencies(dependency);\n        --i;\n    }\n    pop(prevTracking);\n    if (state.hasException) {\n        logHook(state, 'EXCEPTION');\n        if (state.onException) {\n            state.onException(state.exception);\n        }\n        if (logException ||\n            state.subsCount ||\n            (!state.observers.size && !tracking)) {\n            config.logException(state.exception);\n        }\n    }\n    return value;\n}\nfunction activateDependencies(state) {\n    if (!state.observers || state.observers.size)\n        return;\n    logHook(state, 'ACTIVATE');\n    if (state.onActivate) {\n        state.onActivate(state.value);\n    }\n    if (!state.dependencies)\n        return;\n    for (let dependency of state.dependencies) {\n        activateDependencies(dependency);\n        dependency.observers.add(state);\n    }\n}\nfunction deactivateDependencies(state) {\n    if (!state.observers || state.observers.size)\n        return;\n    logHook(state, 'DEACTIVATE');\n    if (state.$d)\n        state.$d(state.value);\n    if (state.onDeactivate) {\n        state.onDeactivate(state.value);\n    }\n    if (!state.dependencies)\n        return;\n    for (let dependency of state.dependencies) {\n        dependency.observers.delete(state);\n        deactivateDependencies(dependency);\n    }\n}\nfunction push(state) {\n    cleanupChildren(state);\n    if (!state.observers.size) {\n        if (!depth)\n            cacheStatus = { status: true };\n        ++depth;\n    }\n    tracking = state;\n    tracking.isComputing = true;\n    tracking.isCached = FALSE_STATUS;\n    tracking.oldDepsCount = state.dependencies.size;\n    tracking.hasException = false;\n    return tracking;\n}\nfunction pop(state) {\n    tracking.isComputing = false;\n    tracking.isCached = cacheStatus;\n    if (depth)\n        --depth;\n    if (!depth)\n        cacheStatus.status = false;\n    tracking = state;\n    return tracking;\n}\nfunction cleanupChildren(state) {\n    if (state.children && state.children.length) {\n        for (let child of state.children) {\n            if (typeof child === 'function')\n                child();\n            else\n                cleanupChildren(child);\n        }\n        state.children = [];\n    }\n}\nfunction logHook(state, hook, value) {\n    if (!state.name)\n        return;\n    let payload = state.value;\n    if (hook === 'EXCEPTION')\n        payload = state.exception;\n    else if (hook === 'UPDATE')\n        payload = {\n            prevValue: state.value,\n            value,\n        };\n    config._log(state.name, hook, payload);\n}\n\nconst signalProto = {\n    get() {\n        return getStateValue(this._state);\n    },\n    subscribe(subscriber, exec = true) {\n        addSubscriber(this, subscriber, exec);\n        if (!this._state.observers)\n            return NOOP_FN;\n        const unsub = () => removeSubscriber(this, subscriber);\n        const parent = tracking || scope;\n        if (parent) {\n            if (!parent.children)\n                parent.children = [];\n            parent.children.push(unsub);\n        }\n        return unsub;\n    },\n    sample() {\n        return getStateValue(this._state, true);\n    },\n};\n\nconst writableSignalProto = Object.assign(Object.assign({}, signalProto), { set(value) {\n        return update$1(this._state, value);\n    },\n    notify() {\n        return update$1(this._state);\n    } });\nfunction writableSelf(value) {\n    if (!arguments.length)\n        return getStateValue(this);\n    return update$1(this, value);\n}\nfunction writable(value) {\n    const state = createSignalState(value, undefined);\n    const writable = writableSelf.bind(state);\n    writable._state = state;\n    writable.constructor = writable;\n    writable.set = writableSignalProto.set;\n    writable.get = writableSignalProto.get;\n    writable.notify = writableSignalProto.notify;\n    writable.subscribe = writableSignalProto.subscribe;\n    writable.sample = writableSignalProto.sample;\n    return writable;\n}\n\n/**\n * Sets the activate event listener. The event is emitted at the first subscription or at the first activation of a dependent signal.\n * @param signal Target signal.\n * @param listener Function that listens to the signal activation event.\n */\nfunction onActivate(signal, listener) {\n    signal._state.onActivate = listener;\n}\n/**\n * Sets the deactivate event listener. The event is emitted when there are no subscribers or active dependent signals left.\n * @param signal Target signal.\n * @param listener Function that listens to the signal deactivation event.\n */\nfunction onDeactivate(signal, listener) {\n    signal._state.onDeactivate = listener;\n}\n/**\n * Sets the update event listener. The event is emitted every time the signal value is updated.\n * @param signal Target signal.\n * @param listener Function that listens to the signal update event.\n */\nfunction onUpdate(signal, listener) {\n    signal._state.onUpdate = listener;\n}\n/**\n * Sets the update exception handler. The event is emitted for every unhandled exception in the calculation of the signal value.\n * @param signal Target signal.\n * @param listener Function that listens to the signal exception event.\n */\nfunction onException(signal, listener) {\n    signal._state.onException = listener;\n}\n/**\n * Sets the notify start event listener. The event is emitted before signal subscribers are notified.\n * @param signal Target signal.\n * @param listener Function that listens to the signal notification start event.\n */\nfunction onNotifyStart(signal, listener) {\n    signal._state.onNotifyStart = listener;\n}\n/**\n * Sets the notify start event listener. The event is emitted after signal subscribers are notified.\n * @param signal Target signal.\n * @param listener Function that listens to the signal notification start event.\n */\nfunction onNotifyEnd(signal, listener) {\n    signal._state.onNotifyEnd = listener;\n}\n\nfunction isSignal(value) {\n    return value._state && value.get;\n}\nfunction isWritableSignal(value) {\n    return isSignal(value) && value.set;\n}\nfunction isStore(value) {\n    return isSignal(value) && value.update;\n}\nfunction getValue(value) {\n    return isSignal(value) ? value() : value;\n}\nfunction sampleValue(value) {\n    return isSignal(value) ? value.sample() : value;\n}\n\nfunction computedSelf() {\n    return getStateValue(this);\n}\n/**\n * Creates a signal that automatically calculates its value from other signals.\n * @param compute The function that calculates the signal value and returns it.\n * @returns Computed signal.\n */\nfunction computed(compute) {\n    const getValue = isWritableSignal(compute) ? () => compute() : compute;\n    const state = createSignalState(undefined, getValue);\n    const computed = computedSelf.bind(state);\n    computed._state = state;\n    computed.constructor = computed;\n    computed.get = signalProto.get;\n    computed.subscribe = signalProto.subscribe;\n    computed.sample = signalProto.sample;\n    return computed;\n}\n\n/**\n * Creates a computed signal that triggers its dependants and subscribers only if its value changes.\n * @param compute The function that calculates the signal value and returns it.\n * @param equals The function that checks if the new value is equal to the previous value. Defaults to Object.is.\n * @returns Computed signal.\n */\nfunction memo(compute, equals) {\n    const check = equals || Object.is;\n    const getValue = isWritableSignal(compute) ? () => compute() : compute;\n    const comp = computed((prevValue, scheduled) => {\n        const value = getValue(prevValue, scheduled);\n        if (prevValue === undefined || !check(value, prevValue))\n            return value;\n        return undefined;\n    });\n    return comp;\n}\n\nconst STOP = {};\nlet VALUES_CACHE = {};\nlet counter = 1;\nfunction isPlainObject(obj) {\n    const proto = Object.getPrototypeOf(obj);\n    return proto && proto.constructor === Object;\n}\nfunction isArray(obj) {\n    return Array.isArray(obj);\n}\nfunction copy(obj) {\n    if (isArray(obj))\n        return obj.slice();\n    if (obj && typeof obj === 'object') {\n        if (isPlainObject(obj))\n            return Object.assign({}, obj);\n        throw new StateTypeError();\n    }\n    return obj;\n}\nfunction getClone(id, state, value) {\n    const cached = VALUES_CACHE[id];\n    if (cached !== undefined)\n        return cached;\n    return copy(arguments.length === 3 ? value : state.sample());\n}\nfunction clearValuesCache() {\n    VALUES_CACHE = {};\n}\nfunction update(arg1, arg2) {\n    let updateFn;\n    if (arguments.length === 2) {\n        updateChild(this, arg1, arg2);\n        return;\n    }\n    else {\n        updateFn = arg1;\n    }\n    const setter = this._setter;\n    const id = this._id;\n    const key = this._key;\n    const parent = this._parent;\n    let value;\n    if (typeof updateFn !== 'function') {\n        value = updateFn;\n    }\n    else {\n        const clone = getClone(id, this);\n        const next = updateFn(clone);\n        if (next === STOP)\n            return;\n        value = next === undefined ? clone : next;\n    }\n    VALUES_CACHE[id] = value;\n    if (setter) {\n        setter(value);\n        return;\n    }\n    parent.update((parentValue) => {\n        if (!parentValue)\n            return STOP;\n        parentValue[key] = value;\n    });\n}\nfunction updateChild(self, key, arg) {\n    self.update((state) => {\n        if (!state)\n            return STOP;\n        const id = self._id + '.' + key;\n        let value;\n        if (typeof arg !== 'function') {\n            value = arg;\n        }\n        else {\n            const clone = getClone(id, undefined, state[key]);\n            const next = arg(clone);\n            value = next === undefined ? clone : next;\n        }\n        VALUES_CACHE[id] = value;\n        state[key] = value;\n    });\n}\nfunction select(key) {\n    const id = this._id + '.' + key;\n    const store = memo(() => {\n        const parentValue = this();\n        const value = parentValue && parentValue[key];\n        if (value === undefined)\n            return null;\n        return value;\n    });\n    store._id = id;\n    store._key = key;\n    store._parent = this;\n    store.select = select;\n    store.update = update;\n    return store;\n}\nfunction store(initialState) {\n    const id = 'store' + counter++;\n    const setter = writable(initialState);\n    const store = memo(setter);\n    store._setter = setter;\n    store._id = id;\n    store.select = select;\n    store.update = update;\n    onUpdate(setter, clearValuesCache);\n    return store;\n}\n\n/**\n * Calls the passed function immediately and every time the signals it depends on are updated.\n * @param fn A function to watch for.\n * @returns Stop watching function.\n */\nfunction watch(fn) {\n    const comp = isSignal(fn) ? fn : computed(fn);\n    return comp.subscribe(NOOP_FN);\n}\n\n/**\n * Creates a tuple of signal and setter function\n * @param initialValue\n * @returns A tuple of signal and setter function\n */\nfunction signal(initialValue) {\n    const source = writable(initialValue);\n    const signal = computed(source);\n    function set(payload) {\n        if (!arguments.length)\n            return source({});\n        return source(payload);\n    }\n    return [signal, set];\n}\n\n/**\n * Subscribes the function to updates of the signal value.\n * @param signal Signal.\n * @param subscriber Function that listens to the signal updates.\n * @returns Unsubscribe function.\n */\nfunction on(signal, subscriber) {\n    return signal.subscribe(subscriber, false);\n}\n\nfunction named(signal, name) {\n    signal._state.name = name;\n    return signal;\n}\n\n/**\n * Creates an effect from asynchronous function.\n * @param asyncFn Asynchronous function\n * @returns Effect.\n */\nfunction effect(asyncFn, name) {\n    let counter = 0;\n    let current = -1;\n    const _status = writable('pristine');\n    const _exception = writable();\n    const _data = writable();\n    const _aborted = writable();\n    const _args = writable();\n    const lastStatus = memo(() => {\n        const status = _status();\n        return status === 'pending' ? undefined : status;\n    });\n    lastStatus.subscribe(NOOP_FN);\n    const status = memo(() => {\n        const value = _status();\n        return {\n            value,\n            pristine: value === 'pristine',\n            pending: value === 'pending',\n            fulfilled: value === 'fulfilled',\n            rejected: value === 'rejected',\n            settled: value === 'fulfilled' || value === 'rejected',\n        };\n    }, (status, prevStatus) => {\n        return status.value === prevStatus.value;\n    });\n    const exception = computed(_exception);\n    const done = computed(() => {\n        const data = _data();\n        const exception = _exception();\n        switch (_status.sample()) {\n            case 'pristine':\n            case 'fulfilled':\n                return data;\n            case 'rejected':\n                return exception;\n        }\n    });\n    const data = computed(_data);\n    const aborted = computed(_aborted);\n    const args = computed(_args);\n    const abort = () => {\n        if (!status.sample().pending)\n            return;\n        logEvent(name, 'ABORT');\n        batch(() => {\n            _status(lastStatus());\n            _aborted({});\n        });\n        counter++;\n    };\n    const reset = () => {\n        if (status.sample().pristine)\n            return;\n        logEvent(name, 'RESET');\n        batch(() => {\n            if (status().pending)\n                _aborted({});\n            _status('pristine');\n        });\n        counter++;\n    };\n    const exec = (id, ...args) => {\n        return asyncFn(...args)\n            .then((res) => {\n            current = id;\n            return res;\n        })\n            .catch((e) => {\n            current = id;\n            throw e;\n        });\n    };\n    const call = (...args) => {\n        logEvent(name, 'CALL', args);\n        if (_status.sample() === 'pending') {\n            _aborted({});\n        }\n        _args(args);\n        _status('pending');\n        return exec(++counter, ...args)\n            .then((v) => {\n            if (current !== counter)\n                return v;\n            batch(() => {\n                _data(v);\n                _status('fulfilled');\n            });\n            return v;\n        })\n            .catch((e) => {\n            if (current !== counter)\n                throw e;\n            batch(() => {\n                _exception(e);\n                _status('rejected');\n            });\n            throw e;\n        });\n    };\n    if (name) {\n        named(data, name + '.data');\n        named(exception, name + '.exception');\n        named(done, name + '.done');\n        named(aborted, name + '.aborted');\n        named(args, name + '.args');\n        named(status, name + '.status');\n    }\n    return {\n        data,\n        exception,\n        done,\n        aborted,\n        args,\n        status,\n        call,\n        abort,\n        reset,\n    };\n}\nfunction logEvent(effectName, eventName, payload) {\n    if (!effectName)\n        return;\n    config._log(effectName, eventName, payload);\n}\n\n/**\n * Creates a computed signal that handles exceptions that occur during computations.\n * @param compute The function that calculates the signal value and returns it.\n * @param handle The function that handles an exception and returns the new signal value.\n * @returns Computed signal.\n */\nfunction catcher(compute, handle) {\n    const getValue = isSignal(compute) ? compute : computed(compute);\n    const comp = computed((prevValue) => {\n        const value = getValue();\n        const state = getValue._state;\n        if (state.hasException) {\n            return handle(state.exception, prevValue);\n        }\n        return value;\n    });\n    comp._state.isCatcher = true;\n    return comp;\n}\n\nfunction createLogger(opts) {\n    const include = opts && opts.include;\n    const exclude = opts && opts.exclude;\n    function log(unitName, ...rest) {\n        console.log(`%c[${unitName}]%c`, 'font-weight: bold', 'font-weight: normal', ...rest);\n    }\n    function createLogFn() {\n        return (unitName, ...rest) => {\n            let shouldLog = true;\n            if (include)\n                shouldLog = include.includes(rest[0]);\n            if (exclude)\n                shouldLog = shouldLog && !exclude.includes(rest[0]);\n            if (shouldLog)\n                log(unitName, ...rest);\n        };\n    }\n    return createLogFn();\n}\n\nexport { batch, catcher, collect, computed, configure, createLogger, effect, getValue, isSignal, isStore, isWritableSignal, isolate, memo, named, on, onActivate, onDeactivate, onException, onNotifyEnd, onNotifyStart, onUpdate, sampleValue, signal, store, watch, writable };\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import * as css from './host-view.module.scss';\n\nimport { component, h, node } from 'spred-dom';\nimport { computed } from 'spred';\nimport { HostController } from '../../../model/host-controller';\nimport { roomId } from '../../../model/routing';\nimport { HostLobby } from '../host-lobby/host-lobby';\nimport { LoadingScreen } from '../../ui/loading-screen/loading-screen';\nimport { GameStage } from '../../../../common/game-stage';\nimport { HostQuestion } from '../host-question/host-question';\n\nexport const HostView = component(() => {\n  const controllerSignal = computed(() => new HostController(roomId()));\n  const state = computed(() => controllerSignal().state());\n\n  return h('div', { class: css.container }, () => {\n    node(() => {\n      const controller = controllerSignal();\n\n      if (controller.loading()) {\n        return LoadingScreen();\n      }\n\n      switch (controller.stage()) {\n        case GameStage.Lobby:\n          return HostLobby(controller);\n\n        case GameStage.Question:\n          return HostQuestion(controller);\n      }\n\n      return LoadingScreen();\n    });\n  });\n});\n",null,"import { memo } from 'spred';\nimport { Action } from '../../common/action';\nimport { ClientType } from '../../common/client-type';\nimport { GameStage } from '../../common/game-stage';\nimport { GameController } from './game-controller';\n\nexport class HostController extends GameController {\n  public readonly gameStartBlocked = memo(() => this.playersList().length <= 1);\n  public readonly caption = memo(() => this.state().caption);\n  public readonly round = memo(() => this.state().round);\n\n  constructor(roomId: string) {\n    super(ClientType.Host, roomId);\n  }\n\n  public startGame(maxRounds = 0) {\n    const state = this.state();\n\n    if (state && state.stage === GameStage.Lobby) {\n      this.emit(Action.StartGame, maxRounds);\n    }\n  }\n}\n","export enum Action {\n  RoomUpdate = 'ROOM_UPDATE',\n  StartGame = 'START_GAME',\n  PlayerData = 'PLAYER_DATA',\n}\n","export enum ClientType {\n  Host = 'HOST',\n  Player = 'PLAYER',\n}\n","export enum GameStage {\n  Lobby = 'LOBBY',\n  Question = 'QUESTION',\n  Vote = 'VOTE',\n  Results = 'RESULTS',\n}\n","import { computed, memo, store, writable } from 'spred';\nimport { io, Socket } from 'socket.io-client';\nimport { Action } from '../../common/action';\nimport { ClientType } from '../../common/client-type';\nimport { RoomState } from '../../common/room-state';\nimport { getPlayLink } from './routing';\n\nconst isLocalHost = location.origin === 'http://localhost:1234';\n\nconst WS_URL = isLocalHost ? 'ws://localhost:3000' : '';\n\nexport class GameController {\n  private socket: Socket;\n  protected playerId;\n\n  private readonly _pending = writable(false);\n  public readonly pending = memo(this._pending);\n\n  protected readonly _state = store<RoomState>({ loading: true } as RoomState);\n  public readonly state = computed(this._state);\n\n  public readonly roomId = memo(() => this.state().id);\n  public readonly playLink = memo(() => getPlayLink(this.roomId()));\n\n  public readonly loading = memo(() => this.state().loading || false);\n  public readonly stage = memo(() => this.state().stage);\n  public readonly error = memo(() => this.state().error);\n\n  public readonly voteCard = memo(() => {\n    const state = this.state();\n    const currentAnswer = state.answers[state.answerIndex];\n\n    return currentAnswer ? currentAnswer.card : '';\n  });\n\n  public readonly playersList = computed(() => {\n    const players = this.state().players;\n    const ids = Object.keys(players);\n\n    return ids.map((id) => players[id]);\n  });\n\n  public readonly sortedPlayerList = computed(() => {\n    const list = this.playersList().slice();\n    list.sort((a, b) => a.score - b.score);\n\n    return list;\n  });\n\n  constructor(\n    type: ClientType,\n    roomId: string,\n    playerId?: string,\n    playerName?: string\n  ) {\n    this.socket = io(WS_URL, {\n      reconnectionDelayMax: 10000,\n      query: { type, roomId, playerId, playerName },\n    });\n\n    this.playerId = playerId || '';\n    this.socket.on(Action.RoomUpdate, (state) => {\n      this._state.update(state);\n      this._pending(false);\n    });\n  }\n\n  protected emit(action: Action, payload?: any) {\n    this._pending(true);\n    this.socket.emit(action, payload);\n  }\n}\n",null,"const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\");\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { computed, memo, writable } from 'spred';\n\nconst PLAY_HASH = '#play';\nconst HOST_HASH = '#host';\nconst DELIMITER = '/';\n\nconst hash = writable(location.hash);\nconst tuple = computed(() => hash().split(DELIMITER));\n\nwindow.addEventListener('hashchange', () => {\n  hash(location.hash);\n});\n\nexport const route = memo(() => {\n  const str = tuple()[0];\n\n  if (str === PLAY_HASH) return 'PLAY';\n  else if (str === HOST_HASH) return 'HOST';\n  return 'MAIN';\n});\n\nexport const roomId = memo(() => tuple()[1]);\n\nexport function getPlayLink(roomId: string) {\n  return location.origin + '/' + PLAY_HASH + DELIMITER + roomId;\n}\n","import * as css from './host-lobby.module.scss';\n\nimport { component, h } from 'spred-dom';\nimport { qrCode } from '../qr-code/qr-code';\nimport { HostController } from '../../../model/host-controller';\nimport { playersList } from '../players-list/players-list';\nimport { button } from '../../ui/button/button';\n\nexport const HostLobby = component((controller: HostController) => {\n  return h(() => {\n    h('h1', { text: 'Ожидаем Игроков' });\n\n    h('div', { class: css.rowWrap }, () => {\n      h('div', { class: css.row }, () => {\n        h('div', { class: [css.qrc, css.col] }, () => {\n          qrCode({ text: controller.playLink });\n        });\n\n        h('div', { class: [css.col, css.infoCol] }, () => {\n          playersList({ players: controller.playersList });\n\n          h('div', { class: css.buttonWrap }, () => {\n            button({\n              text: () =>\n                controller.pending() ? 'Начинаем...' : 'Начать Игру',\n              disabled: () =>\n                controller.gameStartBlocked() || controller.pending(),\n              onclick: () => controller.startGame(),\n            });\n          });\n        });\n      });\n    });\n  });\n});\n",null,"import * as css from './qr-code.module.scss';\n\nimport { component, h, templateFn } from 'spred-dom';\nimport { QRC, toSvgString } from '../../../../vendor/qrcode';\nimport { computed, on, writable } from 'spred';\n\ninterface QRCodeProps {\n  text: () => string;\n}\n\nexport const QRCode = component(({ text }: QRCodeProps) => {\n  const container = writable<HTMLDivElement>();\n  const textSignal = computed(text);\n  const comboSignal = computed(() => [container(), textSignal()] as const);\n\n  on(comboSignal, (tuple) => {\n    const qr = QRC.encodeText(tuple[1], QRC.Ecc.MEDIUM);\n    const svg = toSvgString(qr, 0);\n\n    tuple[0]!.innerHTML = svg;\n  });\n\n  return h('div', { class: css.qrCode, ref: container });\n});\n\nexport const qrCode = templateFn(QRCode);\n","/*\n * QR Code generator library (TypeScript)\n *\n * Copyright (c) Project Nayuki. (MIT License)\n * https://www.nayuki.io/page/qr-code-generator-library\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n * - The above copyright notice and this permission notice shall be included in\n *   all copies or substantial portions of the Software.\n * - The Software is provided \"as is\", without warranty of any kind, express or\n *   implied, including but not limited to the warranties of merchantability,\n *   fitness for a particular purpose and noninfringement. In no event shall the\n *   authors or copyright holders be liable for any claim, damages or other\n *   liability, whether in an action of contract, tort or otherwise, arising from,\n *   out of or in connection with the Software or the use or other dealings in the\n *   Software.\n */\n\n'use strict';\n\nnamespace qrcodegen {\n  type bit = number;\n  type byte = number;\n  type int = number;\n\n  /*---- QR Code symbol class ----*/\n\n  /*\n   * A QR Code symbol, which is a type of two-dimension barcode.\n   * Invented by Denso Wave and described in the ISO/IEC 18004 standard.\n   * Instances of this class represent an immutable square grid of dark and light cells.\n   * The class provides static factory functions to create a QR Code from text or binary data.\n   * The class covers the QR Code Model 2 specification, supporting all versions (sizes)\n   * from 1 to 40, all 4 error correction levels, and 4 character encoding modes.\n   *\n   * Ways to create a QR Code object:\n   * - High level: Take the payload data and call QrCode.encodeText() or QrCode.encodeBinary().\n   * - Mid level: Custom-make the list of segments and call QrCode.encodeSegments().\n   * - Low level: Custom-make the array of data codeword bytes (including\n   *   segment headers and final padding, excluding error correction codewords),\n   *   supply the appropriate version number, and call the QrCode() constructor.\n   * (Note that all ways require supplying the desired error correction level.)\n   */\n  export class QrCode {\n    /*-- Static factory functions (high level) --*/\n\n    // Returns a QR Code representing the given Unicode text string at the given error correction level.\n    // As a conservative upper bound, this function is guaranteed to succeed for strings that have 738 or fewer\n    // Unicode code points (not UTF-16 code units) if the low error correction level is used. The smallest possible\n    // QR Code version is automatically chosen for the output. The ECC level of the result may be higher than the\n    // ecl argument if it can be done without increasing the version.\n    public static encodeText(text: string, ecl: QrCode.Ecc): QrCode {\n      const segs: Array<QrSegment> = qrcodegen.QrSegment.makeSegments(text);\n      return QrCode.encodeSegments(segs, ecl);\n    }\n\n    // Returns a QR Code representing the given binary data at the given error correction level.\n    // This function always encodes using the binary segment mode, not any text mode. The maximum number of\n    // bytes allowed is 2953. The smallest possible QR Code version is automatically chosen for the output.\n    // The ECC level of the result may be higher than the ecl argument if it can be done without increasing the version.\n    public static encodeBinary(\n      data: Readonly<Array<byte>>,\n      ecl: QrCode.Ecc\n    ): QrCode {\n      const seg: QrSegment = qrcodegen.QrSegment.makeBytes(data);\n      return QrCode.encodeSegments([seg], ecl);\n    }\n\n    /*-- Static factory functions (mid level) --*/\n\n    // Returns a QR Code representing the given segments with the given encoding parameters.\n    // The smallest possible QR Code version within the given range is automatically\n    // chosen for the output. Iff boostEcl is true, then the ECC level of the result\n    // may be higher than the ecl argument if it can be done without increasing the\n    // version. The mask number is either between 0 to 7 (inclusive) to force that\n    // mask, or -1 to automatically choose an appropriate mask (which may be slow).\n    // This function allows the user to create a custom sequence of segments that switches\n    // between modes (such as alphanumeric and byte) to encode text in less space.\n    // This is a mid-level API; the high-level API is encodeText() and encodeBinary().\n    public static encodeSegments(\n      segs: Readonly<Array<QrSegment>>,\n      ecl: QrCode.Ecc,\n      minVersion: int = 1,\n      maxVersion: int = 40,\n      mask: int = -1,\n      boostEcl: boolean = true\n    ): QrCode {\n      if (\n        !(\n          QrCode.MIN_VERSION <= minVersion &&\n          minVersion <= maxVersion &&\n          maxVersion <= QrCode.MAX_VERSION\n        ) ||\n        mask < -1 ||\n        mask > 7\n      )\n        throw new RangeError('Invalid value');\n\n      // Find the minimal version number to use\n      let version: int;\n      let dataUsedBits: int;\n      for (version = minVersion; ; version++) {\n        const dataCapacityBits: int =\n          QrCode.getNumDataCodewords(version, ecl) * 8; // Number of data bits available\n        const usedBits: number = QrSegment.getTotalBits(segs, version);\n        if (usedBits <= dataCapacityBits) {\n          dataUsedBits = usedBits;\n          break; // This version number is found to be suitable\n        }\n        if (version >= maxVersion)\n          // All versions in the range could not fit the given data\n          throw new RangeError('Data too long');\n      }\n\n      // Increase the error correction level while the data still fits in the current version number\n      for (const newEcl of [\n        QrCode.Ecc.MEDIUM,\n        QrCode.Ecc.QUARTILE,\n        QrCode.Ecc.HIGH,\n      ]) {\n        // From low to high\n        if (\n          boostEcl &&\n          dataUsedBits <= QrCode.getNumDataCodewords(version, newEcl) * 8\n        )\n          ecl = newEcl;\n      }\n\n      // Concatenate all segments to create the data bit string\n      let bb: Array<bit> = [];\n      for (const seg of segs) {\n        appendBits(seg.mode.modeBits, 4, bb);\n        appendBits(seg.numChars, seg.mode.numCharCountBits(version), bb);\n        for (const b of seg.getData()) bb.push(b);\n      }\n      assert(bb.length == dataUsedBits);\n\n      // Add terminator and pad up to a byte if applicable\n      const dataCapacityBits: int =\n        QrCode.getNumDataCodewords(version, ecl) * 8;\n      assert(bb.length <= dataCapacityBits);\n      appendBits(0, Math.min(4, dataCapacityBits - bb.length), bb);\n      appendBits(0, (8 - (bb.length % 8)) % 8, bb);\n      assert(bb.length % 8 == 0);\n\n      // Pad with alternating bytes until data capacity is reached\n      for (\n        let padByte = 0xec;\n        bb.length < dataCapacityBits;\n        padByte ^= 0xec ^ 0x11\n      )\n        appendBits(padByte, 8, bb);\n\n      // Pack bits into bytes in big endian\n      let dataCodewords: Array<byte> = [];\n      while (dataCodewords.length * 8 < bb.length) dataCodewords.push(0);\n      bb.forEach(\n        (b: bit, i: int) => (dataCodewords[i >>> 3] |= b << (7 - (i & 7)))\n      );\n\n      // Create the QR Code object\n      return new QrCode(version, ecl, dataCodewords, mask);\n    }\n\n    /*-- Fields --*/\n\n    // The width and height of this QR Code, measured in modules, between\n    // 21 and 177 (inclusive). This is equal to version * 4 + 17.\n    public readonly size: int;\n\n    // The index of the mask pattern used in this QR Code, which is between 0 and 7 (inclusive).\n    // Even if a QR Code is created with automatic masking requested (mask = -1),\n    // the resulting object still has a mask value between 0 and 7.\n    public readonly mask: int;\n\n    // The modules of this QR Code (false = light, true = dark).\n    // Immutable after constructor finishes. Accessed through getModule().\n    private readonly modules: Array<Array<boolean>> = [];\n\n    // Indicates function modules that are not subjected to masking. Discarded when constructor finishes.\n    private readonly isFunction: Array<Array<boolean>> = [];\n\n    /*-- Constructor (low level) and fields --*/\n\n    // Creates a new QR Code with the given version number,\n    // error correction level, data codeword bytes, and mask number.\n    // This is a low-level API that most users should not use directly.\n    // A mid-level API is the encodeSegments() function.\n    public constructor(\n      // The version number of this QR Code, which is between 1 and 40 (inclusive).\n      // This determines the size of this barcode.\n      public readonly version: int,\n\n      // The error correction level used in this QR Code.\n      public readonly errorCorrectionLevel: QrCode.Ecc,\n\n      dataCodewords: Readonly<Array<byte>>,\n\n      msk: int\n    ) {\n      // Check scalar arguments\n      if (version < QrCode.MIN_VERSION || version > QrCode.MAX_VERSION)\n        throw new RangeError('Version value out of range');\n      if (msk < -1 || msk > 7) throw new RangeError('Mask value out of range');\n      this.size = version * 4 + 17;\n\n      // Initialize both grids to be size*size arrays of Boolean false\n      let row: Array<boolean> = [];\n      for (let i = 0; i < this.size; i++) row.push(false);\n      for (let i = 0; i < this.size; i++) {\n        this.modules.push(row.slice()); // Initially all light\n        this.isFunction.push(row.slice());\n      }\n\n      // Compute ECC, draw modules\n      this.drawFunctionPatterns();\n      const allCodewords: Array<byte> = this.addEccAndInterleave(dataCodewords);\n      this.drawCodewords(allCodewords);\n\n      // Do masking\n      if (msk == -1) {\n        // Automatically choose best mask\n        let minPenalty: int = 1000000000;\n        for (let i = 0; i < 8; i++) {\n          this.applyMask(i);\n          this.drawFormatBits(i);\n          const penalty: int = this.getPenaltyScore();\n          if (penalty < minPenalty) {\n            msk = i;\n            minPenalty = penalty;\n          }\n          this.applyMask(i); // Undoes the mask due to XOR\n        }\n      }\n      assert(0 <= msk && msk <= 7);\n      this.mask = msk;\n      this.applyMask(msk); // Apply the final choice of mask\n      this.drawFormatBits(msk); // Overwrite old format bits\n\n      this.isFunction = [];\n    }\n\n    /*-- Accessor methods --*/\n\n    // Returns the color of the module (pixel) at the given coordinates, which is false\n    // for light or true for dark. The top left corner has the coordinates (x=0, y=0).\n    // If the given coordinates are out of bounds, then false (light) is returned.\n    public getModule(x: int, y: int): boolean {\n      return (\n        0 <= x && x < this.size && 0 <= y && y < this.size && this.modules[y][x]\n      );\n    }\n\n    /*-- Private helper methods for constructor: Drawing function modules --*/\n\n    // Reads this object's version field, and draws and marks all function modules.\n    private drawFunctionPatterns(): void {\n      // Draw horizontal and vertical timing patterns\n      for (let i = 0; i < this.size; i++) {\n        this.setFunctionModule(6, i, i % 2 == 0);\n        this.setFunctionModule(i, 6, i % 2 == 0);\n      }\n\n      // Draw 3 finder patterns (all corners except bottom right; overwrites some timing modules)\n      this.drawFinderPattern(3, 3);\n      this.drawFinderPattern(this.size - 4, 3);\n      this.drawFinderPattern(3, this.size - 4);\n\n      // Draw numerous alignment patterns\n      const alignPatPos: Array<int> = this.getAlignmentPatternPositions();\n      const numAlign: int = alignPatPos.length;\n      for (let i = 0; i < numAlign; i++) {\n        for (let j = 0; j < numAlign; j++) {\n          // Don't draw on the three finder corners\n          if (\n            !(\n              (i == 0 && j == 0) ||\n              (i == 0 && j == numAlign - 1) ||\n              (i == numAlign - 1 && j == 0)\n            )\n          )\n            this.drawAlignmentPattern(alignPatPos[i], alignPatPos[j]);\n        }\n      }\n\n      // Draw configuration data\n      this.drawFormatBits(0); // Dummy mask value; overwritten later in the constructor\n      this.drawVersion();\n    }\n\n    // Draws two copies of the format bits (with its own error correction code)\n    // based on the given mask and this object's error correction level field.\n    private drawFormatBits(mask: int): void {\n      // Calculate error correction code and pack bits\n      const data: int = (this.errorCorrectionLevel.formatBits << 3) | mask; // errCorrLvl is uint2, mask is uint3\n      let rem: int = data;\n      for (let i = 0; i < 10; i++) rem = (rem << 1) ^ ((rem >>> 9) * 0x537);\n      const bits = ((data << 10) | rem) ^ 0x5412; // uint15\n      assert(bits >>> 15 == 0);\n\n      // Draw first copy\n      for (let i = 0; i <= 5; i++)\n        this.setFunctionModule(8, i, getBit(bits, i));\n      this.setFunctionModule(8, 7, getBit(bits, 6));\n      this.setFunctionModule(8, 8, getBit(bits, 7));\n      this.setFunctionModule(7, 8, getBit(bits, 8));\n      for (let i = 9; i < 15; i++)\n        this.setFunctionModule(14 - i, 8, getBit(bits, i));\n\n      // Draw second copy\n      for (let i = 0; i < 8; i++)\n        this.setFunctionModule(this.size - 1 - i, 8, getBit(bits, i));\n      for (let i = 8; i < 15; i++)\n        this.setFunctionModule(8, this.size - 15 + i, getBit(bits, i));\n      this.setFunctionModule(8, this.size - 8, true); // Always dark\n    }\n\n    // Draws two copies of the version bits (with its own error correction code),\n    // based on this object's version field, iff 7 <= version <= 40.\n    private drawVersion(): void {\n      if (this.version < 7) return;\n\n      // Calculate error correction code and pack bits\n      let rem: int = this.version; // version is uint6, in the range [7, 40]\n      for (let i = 0; i < 12; i++) rem = (rem << 1) ^ ((rem >>> 11) * 0x1f25);\n      const bits: int = (this.version << 12) | rem; // uint18\n      assert(bits >>> 18 == 0);\n\n      // Draw two copies\n      for (let i = 0; i < 18; i++) {\n        const color: boolean = getBit(bits, i);\n        const a: int = this.size - 11 + (i % 3);\n        const b: int = Math.floor(i / 3);\n        this.setFunctionModule(a, b, color);\n        this.setFunctionModule(b, a, color);\n      }\n    }\n\n    // Draws a 9*9 finder pattern including the border separator,\n    // with the center module at (x, y). Modules can be out of bounds.\n    private drawFinderPattern(x: int, y: int): void {\n      for (let dy = -4; dy <= 4; dy++) {\n        for (let dx = -4; dx <= 4; dx++) {\n          const dist: int = Math.max(Math.abs(dx), Math.abs(dy)); // Chebyshev/infinity norm\n          const xx: int = x + dx;\n          const yy: int = y + dy;\n          if (0 <= xx && xx < this.size && 0 <= yy && yy < this.size)\n            this.setFunctionModule(xx, yy, dist != 2 && dist != 4);\n        }\n      }\n    }\n\n    // Draws a 5*5 alignment pattern, with the center module\n    // at (x, y). All modules must be in bounds.\n    private drawAlignmentPattern(x: int, y: int): void {\n      for (let dy = -2; dy <= 2; dy++) {\n        for (let dx = -2; dx <= 2; dx++)\n          this.setFunctionModule(\n            x + dx,\n            y + dy,\n            Math.max(Math.abs(dx), Math.abs(dy)) != 1\n          );\n      }\n    }\n\n    // Sets the color of a module and marks it as a function module.\n    // Only used by the constructor. Coordinates must be in bounds.\n    private setFunctionModule(x: int, y: int, isDark: boolean): void {\n      this.modules[y][x] = isDark;\n      this.isFunction[y][x] = true;\n    }\n\n    /*-- Private helper methods for constructor: Codewords and masking --*/\n\n    // Returns a new byte string representing the given data with the appropriate error correction\n    // codewords appended to it, based on this object's version and error correction level.\n    private addEccAndInterleave(data: Readonly<Array<byte>>): Array<byte> {\n      const ver: int = this.version;\n      const ecl: QrCode.Ecc = this.errorCorrectionLevel;\n      if (data.length != QrCode.getNumDataCodewords(ver, ecl))\n        throw new RangeError('Invalid argument');\n\n      // Calculate parameter numbers\n      const numBlocks: int =\n        QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n      const blockEccLen: int = QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver];\n      const rawCodewords: int = Math.floor(\n        QrCode.getNumRawDataModules(ver) / 8\n      );\n      const numShortBlocks: int = numBlocks - (rawCodewords % numBlocks);\n      const shortBlockLen: int = Math.floor(rawCodewords / numBlocks);\n\n      // Split data into blocks and append ECC to each block\n      let blocks: Array<Array<byte>> = [];\n      const rsDiv: Array<byte> = QrCode.reedSolomonComputeDivisor(blockEccLen);\n      for (let i = 0, k = 0; i < numBlocks; i++) {\n        let dat: Array<byte> = data.slice(\n          k,\n          k + shortBlockLen - blockEccLen + (i < numShortBlocks ? 0 : 1)\n        );\n        k += dat.length;\n        const ecc: Array<byte> = QrCode.reedSolomonComputeRemainder(dat, rsDiv);\n        if (i < numShortBlocks) dat.push(0);\n        blocks.push(dat.concat(ecc));\n      }\n\n      // Interleave (not concatenate) the bytes from every block into a single sequence\n      let result: Array<byte> = [];\n      for (let i = 0; i < blocks[0].length; i++) {\n        blocks.forEach((block, j) => {\n          // Skip the padding byte in short blocks\n          if (i != shortBlockLen - blockEccLen || j >= numShortBlocks)\n            result.push(block[i]);\n        });\n      }\n      assert(result.length == rawCodewords);\n      return result;\n    }\n\n    // Draws the given sequence of 8-bit codewords (data and error correction) onto the entire\n    // data area of this QR Code. Function modules need to be marked off before this is called.\n    private drawCodewords(data: Readonly<Array<byte>>): void {\n      if (\n        data.length != Math.floor(QrCode.getNumRawDataModules(this.version) / 8)\n      )\n        throw new RangeError('Invalid argument');\n      let i: int = 0; // Bit index into the data\n      // Do the funny zigzag scan\n      for (let right = this.size - 1; right >= 1; right -= 2) {\n        // Index of right column in each column pair\n        if (right == 6) right = 5;\n        for (let vert = 0; vert < this.size; vert++) {\n          // Vertical counter\n          for (let j = 0; j < 2; j++) {\n            const x: int = right - j; // Actual x coordinate\n            const upward: boolean = ((right + 1) & 2) == 0;\n            const y: int = upward ? this.size - 1 - vert : vert; // Actual y coordinate\n            if (!this.isFunction[y][x] && i < data.length * 8) {\n              this.modules[y][x] = getBit(data[i >>> 3], 7 - (i & 7));\n              i++;\n            }\n            // If this QR Code has any remainder bits (0 to 7), they were assigned as\n            // 0/false/light by the constructor and are left unchanged by this method\n          }\n        }\n      }\n      assert(i == data.length * 8);\n    }\n\n    // XORs the codeword modules in this QR Code with the given mask pattern.\n    // The function modules must be marked and the codeword bits must be drawn\n    // before masking. Due to the arithmetic of XOR, calling applyMask() with\n    // the same mask value a second time will undo the mask. A final well-formed\n    // QR Code needs exactly one (not zero, two, etc.) mask applied.\n    private applyMask(mask: int): void {\n      if (mask < 0 || mask > 7) throw new RangeError('Mask value out of range');\n      for (let y = 0; y < this.size; y++) {\n        for (let x = 0; x < this.size; x++) {\n          let invert: boolean;\n          switch (mask) {\n            case 0:\n              invert = (x + y) % 2 == 0;\n              break;\n            case 1:\n              invert = y % 2 == 0;\n              break;\n            case 2:\n              invert = x % 3 == 0;\n              break;\n            case 3:\n              invert = (x + y) % 3 == 0;\n              break;\n            case 4:\n              invert = (Math.floor(x / 3) + Math.floor(y / 2)) % 2 == 0;\n              break;\n            case 5:\n              invert = ((x * y) % 2) + ((x * y) % 3) == 0;\n              break;\n            case 6:\n              invert = (((x * y) % 2) + ((x * y) % 3)) % 2 == 0;\n              break;\n            case 7:\n              invert = (((x + y) % 2) + ((x * y) % 3)) % 2 == 0;\n              break;\n            default:\n              throw new Error('Unreachable');\n          }\n          if (!this.isFunction[y][x] && invert)\n            this.modules[y][x] = !this.modules[y][x];\n        }\n      }\n    }\n\n    // Calculates and returns the penalty score based on state of this QR Code's current modules.\n    // This is used by the automatic mask choice algorithm to find the mask pattern that yields the lowest score.\n    private getPenaltyScore(): int {\n      let result: int = 0;\n\n      // Adjacent modules in row having same color, and finder-like patterns\n      for (let y = 0; y < this.size; y++) {\n        let runColor = false;\n        let runX = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let x = 0; x < this.size; x++) {\n          if (this.modules[y][x] == runColor) {\n            runX++;\n            if (runX == 5) result += QrCode.PENALTY_N1;\n            else if (runX > 5) result++;\n          } else {\n            this.finderPenaltyAddHistory(runX, runHistory);\n            if (!runColor)\n              result +=\n                this.finderPenaltyCountPatterns(runHistory) * QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runX = 1;\n          }\n        }\n        result +=\n          this.finderPenaltyTerminateAndCount(runColor, runX, runHistory) *\n          QrCode.PENALTY_N3;\n      }\n      // Adjacent modules in column having same color, and finder-like patterns\n      for (let x = 0; x < this.size; x++) {\n        let runColor = false;\n        let runY = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let y = 0; y < this.size; y++) {\n          if (this.modules[y][x] == runColor) {\n            runY++;\n            if (runY == 5) result += QrCode.PENALTY_N1;\n            else if (runY > 5) result++;\n          } else {\n            this.finderPenaltyAddHistory(runY, runHistory);\n            if (!runColor)\n              result +=\n                this.finderPenaltyCountPatterns(runHistory) * QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runY = 1;\n          }\n        }\n        result +=\n          this.finderPenaltyTerminateAndCount(runColor, runY, runHistory) *\n          QrCode.PENALTY_N3;\n      }\n\n      // 2*2 blocks of modules having same color\n      for (let y = 0; y < this.size - 1; y++) {\n        for (let x = 0; x < this.size - 1; x++) {\n          const color: boolean = this.modules[y][x];\n          if (\n            color == this.modules[y][x + 1] &&\n            color == this.modules[y + 1][x] &&\n            color == this.modules[y + 1][x + 1]\n          )\n            result += QrCode.PENALTY_N2;\n        }\n      }\n\n      // Balance of dark and light modules\n      let dark: int = 0;\n      for (const row of this.modules)\n        dark = row.reduce((sum, color) => sum + (color ? 1 : 0), dark);\n      const total: int = this.size * this.size; // Note that size is odd, so dark/total != 1/2\n      // Compute the smallest integer k >= 0 such that (45-5k)% <= dark/total <= (55+5k)%\n      const k: int = Math.ceil(Math.abs(dark * 20 - total * 10) / total) - 1;\n      assert(0 <= k && k <= 9);\n      result += k * QrCode.PENALTY_N4;\n      assert(0 <= result && result <= 2568888); // Non-tight upper bound based on default values of PENALTY_N1, ..., N4\n      return result;\n    }\n\n    /*-- Private helper functions --*/\n\n    // Returns an ascending list of positions of alignment patterns for this version number.\n    // Each position is in the range [0,177), and are used on both the x and y axes.\n    // This could be implemented as lookup table of 40 variable-length lists of integers.\n    private getAlignmentPatternPositions(): Array<int> {\n      if (this.version == 1) return [];\n      else {\n        const numAlign: int = Math.floor(this.version / 7) + 2;\n        const step: int =\n          this.version == 32\n            ? 26\n            : Math.ceil((this.version * 4 + 4) / (numAlign * 2 - 2)) * 2;\n        let result: Array<int> = [6];\n        for (let pos = this.size - 7; result.length < numAlign; pos -= step)\n          result.splice(1, 0, pos);\n        return result;\n      }\n    }\n\n    // Returns the number of data bits that can be stored in a QR Code of the given version number, after\n    // all function modules are excluded. This includes remainder bits, so it might not be a multiple of 8.\n    // The result is in the range [208, 29648]. This could be implemented as a 40-entry lookup table.\n    private static getNumRawDataModules(ver: int): int {\n      if (ver < QrCode.MIN_VERSION || ver > QrCode.MAX_VERSION)\n        throw new RangeError('Version number out of range');\n      let result: int = (16 * ver + 128) * ver + 64;\n      if (ver >= 2) {\n        const numAlign: int = Math.floor(ver / 7) + 2;\n        result -= (25 * numAlign - 10) * numAlign - 55;\n        if (ver >= 7) result -= 36;\n      }\n      assert(208 <= result && result <= 29648);\n      return result;\n    }\n\n    // Returns the number of 8-bit data (i.e. not error correction) codewords contained in any\n    // QR Code of the given version number and error correction level, with remainder bits discarded.\n    // This stateless pure function could be implemented as a (40*4)-cell lookup table.\n    private static getNumDataCodewords(ver: int, ecl: QrCode.Ecc): int {\n      return (\n        Math.floor(QrCode.getNumRawDataModules(ver) / 8) -\n        QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver] *\n          QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver]\n      );\n    }\n\n    // Returns a Reed-Solomon ECC generator polynomial for the given degree. This could be\n    // implemented as a lookup table over all possible parameter values, instead of as an algorithm.\n    private static reedSolomonComputeDivisor(degree: int): Array<byte> {\n      if (degree < 1 || degree > 255)\n        throw new RangeError('Degree out of range');\n      // Polynomial coefficients are stored from highest to lowest power, excluding the leading term which is always 1.\n      // For example the polynomial x^3 + 255x^2 + 8x + 93 is stored as the uint8 array [255, 8, 93].\n      let result: Array<byte> = [];\n      for (let i = 0; i < degree - 1; i++) result.push(0);\n      result.push(1); // Start off with the monomial x^0\n\n      // Compute the product polynomial (x - r^0) * (x - r^1) * (x - r^2) * ... * (x - r^{degree-1}),\n      // and drop the highest monomial term which is always 1x^degree.\n      // Note that r = 0x02, which is a generator element of this field GF(2^8/0x11D).\n      let root = 1;\n      for (let i = 0; i < degree; i++) {\n        // Multiply the current product by (x - r^i)\n        for (let j = 0; j < result.length; j++) {\n          result[j] = QrCode.reedSolomonMultiply(result[j], root);\n          if (j + 1 < result.length) result[j] ^= result[j + 1];\n        }\n        root = QrCode.reedSolomonMultiply(root, 0x02);\n      }\n      return result;\n    }\n\n    // Returns the Reed-Solomon error correction codeword for the given data and divisor polynomials.\n    private static reedSolomonComputeRemainder(\n      data: Readonly<Array<byte>>,\n      divisor: Readonly<Array<byte>>\n    ): Array<byte> {\n      let result: Array<byte> = divisor.map((_) => 0);\n      for (const b of data) {\n        // Polynomial division\n        const factor: byte = b ^ (result.shift() as byte);\n        result.push(0);\n        divisor.forEach(\n          (coef, i) => (result[i] ^= QrCode.reedSolomonMultiply(coef, factor))\n        );\n      }\n      return result;\n    }\n\n    // Returns the product of the two given field elements modulo GF(2^8/0x11D). The arguments and result\n    // are unsigned 8-bit integers. This could be implemented as a lookup table of 256*256 entries of uint8.\n    private static reedSolomonMultiply(x: byte, y: byte): byte {\n      if (x >>> 8 != 0 || y >>> 8 != 0)\n        throw new RangeError('Byte out of range');\n      // Russian peasant multiplication\n      let z: int = 0;\n      for (let i = 7; i >= 0; i--) {\n        z = (z << 1) ^ ((z >>> 7) * 0x11d);\n        z ^= ((y >>> i) & 1) * x;\n      }\n      assert(z >>> 8 == 0);\n      return z as byte;\n    }\n\n    // Can only be called immediately after a light run is added, and\n    // returns either 0, 1, or 2. A helper function for getPenaltyScore().\n    private finderPenaltyCountPatterns(runHistory: Readonly<Array<int>>): int {\n      const n: int = runHistory[1];\n      assert(n <= this.size * 3);\n      const core: boolean =\n        n > 0 &&\n        runHistory[2] == n &&\n        runHistory[3] == n * 3 &&\n        runHistory[4] == n &&\n        runHistory[5] == n;\n      return (\n        (core && runHistory[0] >= n * 4 && runHistory[6] >= n ? 1 : 0) +\n        (core && runHistory[6] >= n * 4 && runHistory[0] >= n ? 1 : 0)\n      );\n    }\n\n    // Must be called at the end of a line (row or column) of modules. A helper function for getPenaltyScore().\n    private finderPenaltyTerminateAndCount(\n      currentRunColor: boolean,\n      currentRunLength: int,\n      runHistory: Array<int>\n    ): int {\n      if (currentRunColor) {\n        // Terminate dark run\n        this.finderPenaltyAddHistory(currentRunLength, runHistory);\n        currentRunLength = 0;\n      }\n      currentRunLength += this.size; // Add light border to final run\n      this.finderPenaltyAddHistory(currentRunLength, runHistory);\n      return this.finderPenaltyCountPatterns(runHistory);\n    }\n\n    // Pushes the given value to the front and drops the last value. A helper function for getPenaltyScore().\n    private finderPenaltyAddHistory(\n      currentRunLength: int,\n      runHistory: Array<int>\n    ): void {\n      if (runHistory[0] == 0) currentRunLength += this.size; // Add light border to initial run\n      runHistory.pop();\n      runHistory.unshift(currentRunLength);\n    }\n\n    /*-- Constants and tables --*/\n\n    // The minimum version number supported in the QR Code Model 2 standard.\n    public static readonly MIN_VERSION: int = 1;\n    // The maximum version number supported in the QR Code Model 2 standard.\n    public static readonly MAX_VERSION: int = 40;\n\n    // For use in getPenaltyScore(), when evaluating which mask is best.\n    private static readonly PENALTY_N1: int = 3;\n    private static readonly PENALTY_N2: int = 3;\n    private static readonly PENALTY_N3: int = 40;\n    private static readonly PENALTY_N4: int = 10;\n\n    private static readonly ECC_CODEWORDS_PER_BLOCK: Array<Array<int>> = [\n      // Version: (note that index 0 is for padding, and is set to an illegal value)\n      //0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40    Error correction level\n      [\n        -1, 7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28,\n        30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30,\n        30, 30, 30, 30, 30,\n      ], // Low\n      [\n        -1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28,\n        26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28,\n        28, 28, 28, 28, 28,\n      ], // Medium\n      [\n        -1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28,\n        28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30,\n        30, 30, 30, 30, 30,\n      ], // Quartile\n      [\n        -1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28,\n        28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,\n        30, 30, 30, 30, 30,\n      ], // High\n    ];\n\n    private static readonly NUM_ERROR_CORRECTION_BLOCKS: Array<Array<int>> = [\n      // Version: (note that index 0 is for padding, and is set to an illegal value)\n      //0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40    Error correction level\n      [\n        -1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 6, 6, 6, 6, 7, 8, 8, 9, 9,\n        10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25,\n      ], // Low\n      [\n        -1, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5, 5, 8, 9, 9, 10, 10, 11, 13, 14, 16,\n        17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45,\n        47, 49,\n      ], // Medium\n      [\n        -1, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8, 8, 10, 12, 16, 12, 17, 16, 18, 21, 20,\n        23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62,\n        65, 68,\n      ], // Quartile\n      [\n        -1, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25,\n        25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70,\n        74, 77, 81,\n      ], // High\n    ];\n  }\n\n  // Appends the given number of low-order bits of the given value\n  // to the given buffer. Requires 0 <= len <= 31 and 0 <= val < 2^len.\n  function appendBits(val: int, len: int, bb: Array<bit>): void {\n    if (len < 0 || len > 31 || val >>> len != 0)\n      throw new RangeError('Value out of range');\n    for (\n      let i = len - 1;\n      i >= 0;\n      i-- // Append bit by bit\n    )\n      bb.push((val >>> i) & 1);\n  }\n\n  // Returns true iff the i'th bit of x is set to 1.\n  function getBit(x: int, i: int): boolean {\n    return ((x >>> i) & 1) != 0;\n  }\n\n  // Throws an exception if the given condition is false.\n  function assert(cond: boolean): void {\n    if (!cond) throw new Error('Assertion error');\n  }\n\n  /*---- Data segment class ----*/\n\n  /*\n   * A segment of character/binary/control data in a QR Code symbol.\n   * Instances of this class are immutable.\n   * The mid-level way to create a segment is to take the payload data\n   * and call a static factory function such as QrSegment.makeNumeric().\n   * The low-level way to create a segment is to custom-make the bit buffer\n   * and call the QrSegment() constructor with appropriate values.\n   * This segment class imposes no length restrictions, but QR Codes have restrictions.\n   * Even in the most favorable conditions, a QR Code can only hold 7089 characters of data.\n   * Any segment longer than this is meaningless for the purpose of generating QR Codes.\n   */\n  export class QrSegment {\n    /*-- Static factory functions (mid level) --*/\n\n    // Returns a segment representing the given binary data encoded in\n    // byte mode. All input byte arrays are acceptable. Any text string\n    // can be converted to UTF-8 bytes and encoded as a byte mode segment.\n    public static makeBytes(data: Readonly<Array<byte>>): QrSegment {\n      let bb: Array<bit> = [];\n      for (const b of data) appendBits(b, 8, bb);\n      return new QrSegment(QrSegment.Mode.BYTE, data.length, bb);\n    }\n\n    // Returns a segment representing the given string of decimal digits encoded in numeric mode.\n    public static makeNumeric(digits: string): QrSegment {\n      if (!QrSegment.isNumeric(digits))\n        throw new RangeError('String contains non-numeric characters');\n      let bb: Array<bit> = [];\n      for (let i = 0; i < digits.length; ) {\n        // Consume up to 3 digits per iteration\n        const n: int = Math.min(digits.length - i, 3);\n        appendBits(parseInt(digits.substring(i, i + n), 10), n * 3 + 1, bb);\n        i += n;\n      }\n      return new QrSegment(QrSegment.Mode.NUMERIC, digits.length, bb);\n    }\n\n    // Returns a segment representing the given text string encoded in alphanumeric mode.\n    // The characters allowed are: 0 to 9, A to Z (uppercase only), space,\n    // dollar, percent, asterisk, plus, hyphen, period, slash, colon.\n    public static makeAlphanumeric(text: string): QrSegment {\n      if (!QrSegment.isAlphanumeric(text))\n        throw new RangeError(\n          'String contains unencodable characters in alphanumeric mode'\n        );\n      let bb: Array<bit> = [];\n      let i: int;\n      for (i = 0; i + 2 <= text.length; i += 2) {\n        // Process groups of 2\n        let temp: int =\n          QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)) * 45;\n        temp += QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i + 1));\n        appendBits(temp, 11, bb);\n      }\n      if (i < text.length)\n        // 1 character remaining\n        appendBits(\n          QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)),\n          6,\n          bb\n        );\n      return new QrSegment(QrSegment.Mode.ALPHANUMERIC, text.length, bb);\n    }\n\n    // Returns a new mutable list of zero or more segments to represent the given Unicode text string.\n    // The result may use various segment modes and switch modes to optimize the length of the bit stream.\n    public static makeSegments(text: string): Array<QrSegment> {\n      // Select the most efficient segment encoding automatically\n      if (text == '') return [];\n      else if (QrSegment.isNumeric(text)) return [QrSegment.makeNumeric(text)];\n      else if (QrSegment.isAlphanumeric(text))\n        return [QrSegment.makeAlphanumeric(text)];\n      else return [QrSegment.makeBytes(QrSegment.toUtf8ByteArray(text))];\n    }\n\n    // Returns a segment representing an Extended Channel Interpretation\n    // (ECI) designator with the given assignment value.\n    public static makeEci(assignVal: int): QrSegment {\n      let bb: Array<bit> = [];\n      if (assignVal < 0)\n        throw new RangeError('ECI assignment value out of range');\n      else if (assignVal < 1 << 7) appendBits(assignVal, 8, bb);\n      else if (assignVal < 1 << 14) {\n        appendBits(0b10, 2, bb);\n        appendBits(assignVal, 14, bb);\n      } else if (assignVal < 1000000) {\n        appendBits(0b110, 3, bb);\n        appendBits(assignVal, 21, bb);\n      } else throw new RangeError('ECI assignment value out of range');\n      return new QrSegment(QrSegment.Mode.ECI, 0, bb);\n    }\n\n    // Tests whether the given string can be encoded as a segment in numeric mode.\n    // A string is encodable iff each character is in the range 0 to 9.\n    public static isNumeric(text: string): boolean {\n      return QrSegment.NUMERIC_REGEX.test(text);\n    }\n\n    // Tests whether the given string can be encoded as a segment in alphanumeric mode.\n    // A string is encodable iff each character is in the following set: 0 to 9, A to Z\n    // (uppercase only), space, dollar, percent, asterisk, plus, hyphen, period, slash, colon.\n    public static isAlphanumeric(text: string): boolean {\n      return QrSegment.ALPHANUMERIC_REGEX.test(text);\n    }\n\n    /*-- Constructor (low level) and fields --*/\n\n    // Creates a new QR Code segment with the given attributes and data.\n    // The character count (numChars) must agree with the mode and the bit buffer length,\n    // but the constraint isn't checked. The given bit buffer is cloned and stored.\n    public constructor(\n      // The mode indicator of this segment.\n      public readonly mode: QrSegment.Mode,\n\n      // The length of this segment's unencoded data. Measured in characters for\n      // numeric/alphanumeric/kanji mode, bytes for byte mode, and 0 for ECI mode.\n      // Always zero or positive. Not the same as the data's bit length.\n      public readonly numChars: int,\n\n      // The data bits of this segment. Accessed through getData().\n      private readonly bitData: Array<bit>\n    ) {\n      if (numChars < 0) throw new RangeError('Invalid argument');\n      this.bitData = bitData.slice(); // Make defensive copy\n    }\n\n    /*-- Methods --*/\n\n    // Returns a new copy of the data bits of this segment.\n    public getData(): Array<bit> {\n      return this.bitData.slice(); // Make defensive copy\n    }\n\n    // (Package-private) Calculates and returns the number of bits needed to encode the given segments at\n    // the given version. The result is infinity if a segment has too many characters to fit its length field.\n    public static getTotalBits(\n      segs: Readonly<Array<QrSegment>>,\n      version: int\n    ): number {\n      let result: number = 0;\n      for (const seg of segs) {\n        const ccbits: int = seg.mode.numCharCountBits(version);\n        if (seg.numChars >= 1 << ccbits) return Infinity; // The segment's length doesn't fit the field's bit width\n        result += 4 + ccbits + seg.bitData.length;\n      }\n      return result;\n    }\n\n    // Returns a new array of bytes representing the given string encoded in UTF-8.\n    private static toUtf8ByteArray(str: string): Array<byte> {\n      str = encodeURI(str);\n      let result: Array<byte> = [];\n      for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) != '%') result.push(str.charCodeAt(i));\n        else {\n          result.push(parseInt(str.substring(i + 1, i + 3), 16));\n          i += 2;\n        }\n      }\n      return result;\n    }\n\n    /*-- Constants --*/\n\n    // Describes precisely all strings that are encodable in numeric mode.\n    private static readonly NUMERIC_REGEX: RegExp = /^[0-9]*$/;\n\n    // Describes precisely all strings that are encodable in alphanumeric mode.\n    private static readonly ALPHANUMERIC_REGEX: RegExp =\n      /^[A-Z0-9 $%*+.\\/:-]*$/;\n\n    // The set of all legal characters in alphanumeric mode,\n    // where each character value maps to the index in the string.\n    private static readonly ALPHANUMERIC_CHARSET: string =\n      '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:';\n  }\n}\n\n/*---- Public helper enumeration ----*/\n\nnamespace qrcodegen.QrCode {\n  type int = number;\n\n  /*\n   * The error correction level in a QR Code symbol. Immutable.\n   */\n  export class Ecc {\n    /*-- Constants --*/\n\n    public static readonly LOW = new Ecc(0, 1); // The QR Code can tolerate about  7% erroneous codewords\n    public static readonly MEDIUM = new Ecc(1, 0); // The QR Code can tolerate about 15% erroneous codewords\n    public static readonly QUARTILE = new Ecc(2, 3); // The QR Code can tolerate about 25% erroneous codewords\n    public static readonly HIGH = new Ecc(3, 2); // The QR Code can tolerate about 30% erroneous codewords\n\n    /*-- Constructor and fields --*/\n\n    private constructor(\n      // In the range 0 to 3 (unsigned 2-bit integer).\n      public readonly ordinal: int,\n      // (Package-private) In the range 0 to 3 (unsigned 2-bit integer).\n      public readonly formatBits: int\n    ) {}\n  }\n}\n\n/*---- Public helper enumeration ----*/\n\nnamespace qrcodegen.QrSegment {\n  type int = number;\n\n  /*\n   * Describes how a segment's data bits are interpreted. Immutable.\n   */\n  export class Mode {\n    /*-- Constants --*/\n\n    public static readonly NUMERIC = new Mode(0x1, [10, 12, 14]);\n    public static readonly ALPHANUMERIC = new Mode(0x2, [9, 11, 13]);\n    public static readonly BYTE = new Mode(0x4, [8, 16, 16]);\n    public static readonly KANJI = new Mode(0x8, [8, 10, 12]);\n    public static readonly ECI = new Mode(0x7, [0, 0, 0]);\n\n    /*-- Constructor and fields --*/\n\n    private constructor(\n      // The mode indicator bits, which is a uint4 value (range 0 to 15).\n      public readonly modeBits: int,\n      // Number of character count bits for three different version ranges.\n      private readonly numBitsCharCount: [int, int, int]\n    ) {}\n\n    /*-- Method --*/\n\n    // (Package-private) Returns the bit width of the character count field for a segment in\n    // this mode in a QR Code at the given version number. The result is in the range [0, 16].\n    public numCharCountBits(ver: int): int {\n      return this.numBitsCharCount[Math.floor((ver + 7) / 17)];\n    }\n  }\n}\n\nconst QRC = qrcodegen.QrCode;\n\nfunction toSvgString(qr: qrcodegen.QrCode, border: number): string {\n  if (border < 0) throw new RangeError('Border must be non-negative');\n  let parts: Array<string> = [];\n  for (let y = 0; y < qr.size; y++) {\n    for (let x = 0; x < qr.size; x++) {\n      if (qr.getModule(x, y))\n        parts.push(`M${x + border},${y + border}h1v1h-1z`);\n    }\n  }\n  return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 ${\n    qr.size + border * 2\n  } ${qr.size + border * 2}\" stroke=\"none\">\n<path d=\"${parts.join(' ')}\"/>\n</svg>\n`;\n}\n\nexport { QRC, toSvgString };\n",null,"import * as css from './button.module.scss';\n\nimport { component, h, templateFn } from 'spred-dom';\n\ninterface ButtonProps {\n  text: () => string;\n  disabled?: () => boolean;\n  onclick?: (e: MouseEvent) => any;\n}\n\ninterface ButtonLinkProps extends ButtonProps {\n  href: () => string;\n}\n\nexport const ButtonLink = component(\n  ({ href, text, disabled, onclick }: ButtonLinkProps) => {\n    return h('a', {\n      onclick,\n      href,\n      text,\n      class: {\n        [css.button]: true,\n        [css.disabled]: disabled,\n      },\n    });\n  }\n);\n\nexport const buttonLink = templateFn(ButtonLink);\n\nexport const Button = component(({ text, disabled, onclick }: ButtonProps) => {\n  return h('button', {\n    onclick,\n    text,\n    class: {\n      [css.button]: true,\n      [css.disabled]: disabled,\n    },\n  });\n});\n\nexport const button = templateFn(Button);\n",null,"import * as css from './players-list.module.scss';\n\nimport { component, h, templateFn } from 'spred-dom';\nimport { Player } from '../../../../common/player';\nimport { memo } from 'spred';\n\ninterface PlayersListProps {\n  players: () => Player[];\n}\n\nexport const PlayersList = component(({ players }: PlayersListProps) => {\n  const hasNoPlayers = memo(() => !players().length);\n\n  const text = memo(() => {\n    if (hasNoPlayers()) return 'Пока что никто не\\u00A0подключился';\n    return players()\n      .map((player) => player.name)\n      .join(', ');\n  });\n\n  return h(\n    'div',\n    {\n      class: {\n        [css.playersList]: true,\n        [css.noPlayers]: hasNoPlayers,\n      },\n      text,\n    },\n    () => {}\n  );\n});\n\nexport const playersList = templateFn(PlayersList);\n",null,"import * as css from './loading-screen.module.scss';\n\nimport { component, h } from 'spred-dom';\n\nexport const LoadingScreen = component(() =>\n  h('div', { class: css.loading }, () => {\n    h('h1', () => {\n      h('span', { text: 'Загрузка' });\n      h('span', { class: css.dot1, text: '.' });\n      h('span', { class: css.dot2, text: '.' });\n      h('span', { class: css.dot3, text: '.' });\n    });\n  })\n);\n",null,"import * as css from './host-question.module.scss';\n\nimport { component, h } from 'spred-dom';\nimport { HostController } from '../../../model/host-controller';\n\nexport const HostQuestion = component((controller: HostController) => {\n  return h(() => {\n    h('h1', { text: () => 'Раунд ' + controller.round() });\n\n    h('div', { class: css.captionWrap }, () => {\n      h('p', { class: css.caption, text: controller.caption });\n    });\n\n    h('div', { class: css.playersDone });\n  });\n});\n",null,"import * as css from './main-view.module.scss';\n\nimport { component, h } from 'spred-dom';\nimport { logo } from '../logo/logo';\nimport { startLink } from '../start-link/start-link';\n\nexport const MainView = component(() =>\n  h('div', { class: css.container }, () => {\n    logo();\n\n    h('div', { class: css.menu }, () => {\n      startLink();\n    });\n  })\n);\n",null,"import * as css from './logo.module.scss';\n\nimport { component, h, templateFn } from 'spred-dom';\n\nconst Logo = component(() =>\n  h('h1', { class: css.logo }, () => {\n    h('span', { class: css.top }, () => {\n      h('span', { text: 'С' });\n      h('span', { text: 'О' });\n      h('span', { text: 'Б' });\n      h('span', { text: 'Е' });\n      h('span', { text: 'Р' });\n      h('span', { text: 'И' });\n    });\n    h('span', { class: css.bottom }, () => {\n      h('span', { text: 'М' });\n      h('span', { text: 'Е' });\n      h('span', { text: 'М' });\n    });\n  })\n);\n\nconst logo = templateFn(Logo);\n\nexport { Logo, logo };\n",null,"import { nanoid } from 'nanoid';\nimport { component, h, templateFn } from 'spred-dom';\nimport { buttonLink } from '../../ui/button/button';\n\nconst StartLink = component(() => {\n  const url = '#host/' + nanoid();\n\n  return h(() =>\n    buttonLink({\n      href: () => url,\n      text: () => 'Создать Комнату',\n    })\n  );\n});\n\nconst startLink = templateFn(StartLink);\n\nexport { StartLink, startLink };\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { nanoid } from 'nanoid';\nimport { computed } from 'spred';\nimport { component, h } from 'spred-dom';\nimport { withLocalStorage } from '../../../lib/with-local-storage';\nimport { PlayerController } from '../../../model/player-controller';\nimport { roomId } from '../../../model/routing';\n\nexport const PlayerView = component(() => {\n  const playerId = withLocalStorage('PLAYER_ID', nanoid);\n  const playerName = withLocalStorage(\n    'PLAYER_NAME',\n    () => 'player_' + nanoid().substring(0, 4)\n  );\n\n  const controllerSignal = computed(\n    () => new PlayerController(roomId(), playerId(), playerName())\n  );\n  const state = computed(() => controllerSignal().state());\n\n  (window as any).controller = controllerSignal();\n\n  return h('div');\n});\n","import { batch, memo } from 'spred';\nimport { Action } from '../../common/action';\nimport { ClientType } from '../../common/client-type';\nimport { GameStage } from '../../common/game-stage';\nimport { GameController } from './game-controller';\n\nexport class PlayerController extends GameController {\n  private readonly answers = this._state.select('answers');\n  private readonly players = this._state.select('players');\n\n  public readonly player = memo(() => this.state().players[this.playerId]);\n\n  constructor(roomId: string, playerId: string, playerName: string) {\n    super(ClientType.Player, roomId, playerId, playerName);\n  }\n\n  public answer(card: string) {\n    const state = this.state();\n    if (\n      !state ||\n      state.error ||\n      state.stage !== GameStage.Question ||\n      !this.player().cards.includes(card)\n    )\n      return;\n\n    batch(() => {\n      const answerIndex = this.state().answers.findIndex(\n        (answer) => answer.playerId === this.playerId\n      );\n\n      this._state.select('answers').update((answers) => {\n        const answer = {\n          playerId: this.playerId,\n          card,\n          votes: [],\n        };\n\n        if (answerIndex > -1) answers[answerIndex] = answer;\n        else answers.push(answer);\n      });\n\n      this.makePlayerDone();\n    });\n\n    this.emitPlayerData(card);\n  }\n\n  public vote(score: 0 | 1 | 2) {\n    const state = this.state();\n    if (!state || state.error || state.stage !== GameStage.Vote) return;\n\n    batch(() => {\n      const answerIndex = this.state().answerIndex;\n      const answer = this.state().answers[answerIndex];\n\n      if (!answer || answer.playerId === this.playerId) return;\n\n      const voteIndex = answer.votes.findIndex(\n        (vote) => vote.playerId === this.playerId\n      );\n\n      this.answers.select(answerIndex).update('votes', (votes) => {\n        const vote = {\n          playerId: this.playerId,\n          score,\n        };\n\n        if (voteIndex > -1) votes[voteIndex] = vote;\n        else votes.push(vote);\n      });\n\n      this.makePlayerDone();\n    });\n\n    this.emitPlayerData(score);\n  }\n\n  public ready() {\n    const state = this.state();\n    if (!state || state.error || state.stage !== GameStage.Results) return;\n\n    this.makePlayerDone();\n    this.emitPlayerData();\n  }\n\n  private emitPlayerData(payload?: any) {\n    this.emit(Action.PlayerData, payload);\n  }\n\n  private makePlayerDone() {\n    this.players.update(this.playerId, (player) => {\n      player.done = true;\n    });\n  }\n}\n","import { computed, writable } from 'spred';\n\nexport function withLocalStorage(key: string, getInitialValue: () => string) {\n  let value = '';\n\n  try {\n    value = localStorage.getItem(key) || getInitialValue();\n  } catch {\n    value = getInitialValue();\n  }\n\n  const signal = writable(value);\n  const derived = computed(signal);\n\n  derived.subscribe((value) => {\n    try {\n      localStorage.setItem(key, value);\n    } catch {}\n  });\n\n  return signal;\n}\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","chars","lookup","Uint8Array","i","length","charCodeAt","decode","base64","bufferLength","len","p","encoded1","encoded2","encoded3","encoded4","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","packetType","decoded","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","Array","count","packet","join","decodePayload","encodedPayload","decodedPacket","push","protocol","Emitter","mixin","on","addEventListener","event","fn","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","callbacks","cb","splice","emit","args","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","globalThis","clearTimeoutFn","BASE64_OVERHEAD","byteLength","utf8Length","Math","ceil","size","str","c","l","TransportError","reason","description","context","Error","Transport","writable","query","readyState","socket","doOpen","doClose","onClose","write","onPacket","details","alphabet","map","seed","prev","encode","num","encoded","floor","yeast","now","Date","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","value","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","empty","hasXHR2","xhr","responseType","Polling","polling","location","isSSL","port","xd","hostname","xs","secure","forceBase64","poll","onPause","pause","total","doPoll","onOpen","close","doWrite","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","ipv6","indexOf","path","Request","uri","req","request","method","xhrStatus","onError","onData","pollXhr","async","undefined","xscheme","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","nextTick","isPromiseAvailable","Promise","resolve","then","WebSocket","MozWebSocket","usingBrowserWebSocket","defaultBinaryType","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","transports","websocket","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","regx","names","substr","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","name","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","shouldCheckPayloadSize","payloadSize","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","url","loc","test","href","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","replacer","EVENT","ACK","BINARY_EVENT","BINARY_ACK","encodeAsBinary","encodeAsString","nsp","stringify","deconstruction","unshift","Decoder","reviver","decodeString","reconstructor","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","subDestroy","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subs","onpacket","subEvents","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","notifyOutgoingListeners","timer","_packet","sameNamespace","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","listener","sent","emitBuffered","_anyOutgoingListeners","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","onping","ondata","ondecoded","add","active","_close","delay","onreconnect","attempt","cache","parsed","newConnection","forceNew","multiplex"],"version":3,"file":"index.e4c659bf.js.map","sourceRoot":"/__parcel_source_root/"}